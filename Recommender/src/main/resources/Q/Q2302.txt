 question  ,  "import  java.awt.flowlayout;import  java.awt.event.actionevent;import  java.awt.event.actionlistener;import  java.lang.reflect.invocationtargetexception;import  javax.swing.*;public  class  testapplet  extends  japplet{@overridepublic  void  init(){try{swingutilities.invokeandwait(new  runnable(){@overridepublic  void  run(){creategui();}});}catch(interruptedexception  |  invocationtargetexception  ex){}}private  void  creategui(){getcontentpane().setlayout(new  flowlayout());jbutton  startbutton  =  new  jbutton(""do  work"");startbutton.addactionlistener(new  actionlistener(){@overridepublic  void  actionperformed(actionevent  ae){jlabel  label  =  new  jlabel();new  worker(label).execute();}});getcontentpane().add(startbutton);}private  class  worker  extends  swingworker<void'  '  void>{jlabel  label;public  worker(jlabel  label){this.label  =  label;}@overrideprotected  void  doinbackground()  throws  exception{//  do  workreturn  null;}@overrideprotected  void  done(){getcontentpane().remove(label);getcontentpane().revalidate();}}};  import  java.awt.flowlayout;import  java.awt.event.actionevent;import  java.awt.event.actionlistener;import  java.lang.reflect.invocationtargetexception;import  java.util.linkedlist;import  java.util.list;import  java.util.queue;import  java.util.random;import  java.util.concurrent.executorservice;import  java.util.concurrent.executors;import  javax.swing.*;public  class  testapplet  extends  japplet{private  queue<jlabel>  labels  =  new  linkedlist<>();private  static  final  random  rand  =  new  random();@overridepublic  void  init(){try{swingutilities.invokeandwait(new  runnable(){@overridepublic  void  run(){creategui();}});}catch(interruptedexception  |  invocationtargetexception  ex){}}private  void  creategui(){getcontentpane().setlayout(new  flowlayout());jbutton  startbutton  =  new  jbutton(""do  work"");startbutton.addactionlistener(new  actionlistener(){@overridepublic  void  actionperformed(actionevent  ae){executorservice  executor  =  executors.newfixedthreadpool(10);for(int  i  =  0;  i  <  10;  i++){jlabel  label  =  new  jlabel();getcontentpane().add(label);executor.execute(new  counter(label));}}});getcontentpane().add(startbutton);}private  class  counter  extends  swingworker<void'  '  integer>{private  jlabel  label;public  counter(jlabel  label){this.label  =  label;}@overrideprotected  void  doinbackground()  throws  exception{for(int  i  =  1;  i  <=  100;  i++){publish(i);thread.sleep(rand.nextint(80));}return  null;}@overrideprotected  void  process(list<integer>  values){label.settext(values.get(values.size()  -  1).tostring());}@overrideprotected  void  done(){labels.add(label);if(labels.size()  ==  10){while(!labels.isempty())getcontentpane().remove(labels.poll());getcontentpane().revalidate();}}}}"  ,pleas  consid  the  follow  code  fragment  here  is  add  a  label  to  the  applet  that  display  some  intermedi  result  of  the  worker  thread  use  publishprocess  method  at  the  end  the  label  is  remov  from  the  applet  pane  my  question  is  how  could  i  creat  sever  label  each  with  it  own  worker  thread  and  remov  them  when  they  are  all  done  thank  in  advanc  i  hope  this  will  clarifi  my  question  id  like  the  label  to  be  remov  all  at  onc  when  all  of  the  worker  have  finish  their  task  not  immedi  after  each  worker  has  finish  the  follow  code  seem  to  be  do  what  i  need  pleas  comment  whether  i  did  it  the  right  way  i  have  a  feel  there  is  someth  wrong  one  problem  is  that  the  label  to  the  right  of  the  button  remain  visibl  although  they  are  remov  setvisiblefals  seem  to  solv  this  issu  is  that  the  way  to  do  it  ,  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp  objectvari  simplevari  formalmethodparamet  instancefieldinvoc  thisrefer  simpleassignmentexpress  privatefieldspecifi  instancefield    