 question  ,  class  someclass{public  importantdata  data  =  null;public  thread  t  =  null;public  someclass(importantdata  d){t  =  new  myoperationthread();//  t.start();  //  footnote  1data  =  d;t.start();//  footnote  2}};  class  someclass{public  importantdata  data  =  null;public  someclass(importantdata  d){//  otherclass.someexternaloperation(this);  //  not  a  good  ideadata  =  d;otherclass.someexternaloperation(this);//  usually  accepted  as  ok}};  final  class  someclass  //  like  this{...  ,ive  been  search  for  justif  as  for  whi  you  should  not  call  a  thread  start  method  insid  a  constructor  for  a  classconsid  the  follow  code  importantdata  is  some  generic  box  of  stuff  presum  import  and  myoperationthread  is  a  subclass  of  thread  that  know  how  to  handl  someclass  instanc  footnod  from  what  i  understand  the  reason  it  consid  bad  practic  to  do  this  is  that  you  can  leak  a  refer  to  an  object  that  has  not  yet  been  fulli  constructedbut  the  object  has  been  fulli  construct  the  constructor  has  noth  left  to  do  but  returni  have  search  other  question  look  for  a  more  concret  answer  to  this  question  and  have  look  into  referenc  materi  as  well  but  havent  found  anyth  that  say  you  shouldnt  becaus  such  and  such  undesir  behavior  onli  thing  that  say  you  shouldnt  how  would  start  a  thread  in  the  constructor  be  conceptu  differ  from  this  situat  as  anoth  asid  what  if  the  class  was  final  i  saw  plenti  of  question  ask  about  this  and  answer  that  you  shouldnt  but  none  offer  explan  so  i  figur  id  tri  to  add  one  that  has  a  few  more  detail  ,  classdefinit  publicfieldspecifi  instancefield  instancefieldinitializationstat  simpleassignmentexpress  formalmethodparamet  constructordefinit  publicconstructorspecifi    volatilefieldspecifi  instancefield  simplevari  privatefieldspecifi  stringliter  stringdatatyp  formalmethodparamet  objectcreationstat  constructorcal  actualmethodparamet  simpleassignmentexpress  genericobjectcreationstat  objectmethodinvoc  notexpress  staticmethodspecifi  returnstat  