 question  ,  "hellointerface  ->  a  hello  world  interface  for  rmiserver  ->  the  server  app'client  ->  the  client  app';  package  rmi;import  java.rmi.rmisecuritymanager;import  java.io.*;public  class  nativermisecuritymanager  extends  rmisecuritymanager{private  boolean  unix;protected  static  threadlocal  user  =  new  threadlocal();/*  *  on  interdit  l'utilisation  du  constructeur  par  defaut  *  pour  obliger  l'utilisation  du  constructeur  avec  user.  */private  nativermisecuritymanager(){  super();}public  nativermisecuritymanager  (final  string  user){  super();  string  os  =  system.getproperty(""os.name"").tolowercase();  unix  =  (os.compareto(""windows"")  !=  0);  /*  assume  that  if  not  *  windows'  '  then  ""unix/posix""  *//*  *  threadlocal's  user  :  each  thread  is  considered  *  to  have  different  access  rights  to  the  machine  */  nativermisecuritymanager.user.set(user);  if  (!unix)  {  system.out.println(""systeme  :  ""+os);  }}public  void  checkread(string  file){  super.checkread(file);  /*  *  if  we  are  on  a  **ix  platform  we  want  to  check  that  *  the  _user_  has  access  rights.  */  if  (unix)  {  string  str_user  =  (string)nativermisecuritymanager.user.get();  if  (file  ==  null)  {  throw  new  securityexception(""file  =  null  !!!"");  }  if  (str_user  ==  null)  {  throw  new  securityexception(""user  =  null  in  the  threadlocal!!!"");  }  int  ret  =  c_checkread(  file'  '  str_user  );  if  (ret  !=  0)  {  throw  new  securityexception(""access  error:  ""  +  file);  }  }}public  native  int  c_checkread(string  file'  '  string  user);};  string  user  =  ""my_user"";system.setsecuritymanager(new  nativermisecuritymanager(user));;  exception  in  thread  ""rmi  tcp  connection(1)-192.168.42.207""  java.lang.exceptionininitializererrorat  sun.rmi.transport.streamremotecall.getinputstream(streamremotecall.java:111)at  sun.rmi.transport.transport.servicecall(transport.java:118)at  sun.rmi.transport.tcp.tcptransport.handlemessages(tcptransport.java:466)at  sun.rmi.transport.tcp.tcptransport$connectionhandler.run(tcptransport.java:707)at  java.lang.thread.run(thread.java:595)caused  by:  java.lang.securityexception:  user  =  null  dans  le  threadlocal!!!at  rmi.nativermisecuritymanager.checkread(nativermisecuritymanager.java:62)at  java.io.file.exists(file.java:700)at  java.lang.classloader$3.run(classloader.java:1689)at  java.security.accesscontroller.doprivileged(native  method)at  java.lang.classloader.loadlibrary0(classloader.java:1686)at  java.lang.classloader.loadlibrary(classloader.java:1668)at  java.lang.runtime.loadlibrary0(runtime.java:822)at  java.lang.system.loadlibrary(system.java:993)at  sun.security.action.loadlibraryaction.run(loadlibraryaction.java:50)at  java.security.accesscontroller.doprivileged(native  method)at  sun.rmi.server.marshalinputstream.<clinit>(marshalinputstream.java:97)...  5  more"  ,i  am  adapt  a  littl  rmi  clientserv  applic  i  have  written  sever  thing  noth  special  but  i  have  put  my  hand  in  a  new  rmisecuritymanag  which  call  a  jni  method  and  check  the  permiss  for  a  separ  user  in  the  server  class  im  do  that  this  class  seem  to  work  in  the  server  main  thread  now  the  problem  is  when  i  tri  and  connect  to  that  server  class  and  lookup  the  registryi  get  that  except  imho  the  mean  of  this  is  that  a  thread  is  implicit  creat  and  get  the  nativermisecuritymanag  as  it  default  securitymanag  would  somebodi  have  ani  advic  concern  that  ,  ifstat  notequalexpress  formalmethodparamet  nativemethodspecifi  intdatatyp  stringvari  stringdatatyp  simplevari  instancefield  instancefieldinitializationstat  simpleassignmentexpress  stringliter    objectvari  simplevari  simpleassignmentexpress  multiplyexpress  greaterexpress  objectmethodinvoc  actualmethodparamet  instancefieldinvoc  thisrefer  ifstat  notexpress  javalangsystemoutprintln  stringliter  stringdatatyp  stringaddit  formalmethodparamet  superclassmethodcal  superrefer  stringvari  explicittypecast  andexpress  notequalexpress  null  equalexpress  throwstat  objectcreationstat  constructorcal  intdatatyp  ifelsestat  returnstat  nativemethodspecifi  instancefield  orexpress  addexpress  postdecrementexpress  lessexpress  