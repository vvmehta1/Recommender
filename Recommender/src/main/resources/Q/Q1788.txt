 question  ,  "import  javax.swing.*;import  sun.audio.audioplayer;import  sun.audio.audiostream;import  java.awt.*;import  java.awt.event.*;import  java.io.fileinputstream;import  java.io.inputstream;@suppresswarnings(""serial"")public  class  tetris_mainmenu  extends  jframe  implements  actionlistener  {@suppresswarnings(""unused"")public  static  void  main(string[]  args)  {tetris_mainmenu  tmm  =  new  tetris_mainmenu();playaudio(""doak.wav"");}jpanel  logo  =  new  jpanel();jpanel  buttonpanel  =  new  jpanel(new  gridlayout(4'  '  1));jbutton  start  =  new  jbutton(""start  new  game"");jbutton  help  =  new  jbutton(""instructions"");jbutton  about  =  new  jbutton(""about  this  game"");jbutton  exit  =  new  jbutton(""exit"");tetris_mainmenu(){settitle(""jag's  tetris"");setdefaultcloseoperation(jframe.exit_on_close);setlocation(300'  '  100);setsize(200'  '  400);setenabled(true);setfocusable(true);setvisible(true);//adding  a  logo  to  the  logo  panel//adding  buttons  to  the  buttonpanelbuttonpanel.add(start);buttonpanel.add(help);buttonpanel.add(about);buttonpanel.add(exit);//add  panels  to  windowsetlayout(new  gridlayout(2'  '  1));add(logo);add(buttonpanel);//make  buttons  listen  to  actionsstart.addactionlistener(this);help.addactionlistener(this);about.addactionlistener(this);exit.addactionlistener(this);}@suppresswarnings(""restriction"")public  static  void  playaudio(string  filename){  inputstream  in  =  null;audiostream  as  =  null;try{in  =  new  fileinputstream(filename);as  =  new  audiostream(in);}catch(exception  e){system.out.println(""error!!!"");}audioplayer.player.start(as);}@overridepublic  void  actionperformed(actionevent  e)  {if(e.getsource()  ==  start){this.dispose();matrixboard  b  =  new  matrixboard();b.setrequestfocusenabled(true);}else  if(e.getsource()  ==  help){joptionpane.showmessagedialog(null'  '  ""controls:""+  ""left  and  right  arrows:  for  moving  blocks  left  and  right""+  ""down  arrow:  for  dropping  block  immediately""+  ""spacebar:  for  rotating  block""+  ""e:  to  exit  to  main  menu"");}else  if(e.getsource()  ==  about){joptionpane.showmessagedialog(null'  '  ""designed  by:  jag.""+  ""if  you  want  you  can  use  it  for  your  own  purposes.""+  ""but  give  credit  where  it  is  due."");}else  if(e.getsource()  ==  exit){int  opt  =  joptionpane.showconfirmdialog(null'  '  ""are  you  sure?""'  '  ""confirm  exit""'  '  joptionpane.yes_no_option);if(opt  ==  joptionpane.yes_option){system.exit(0);}}}};  import  java.awt.*;import  java.awt.event.*;import  javax.swing.*;import  java.io.*;import  sun.audio.*;@suppresswarnings(""serial"")public  class  matrixboard  extends  jpanel  implements  actionlistener{int  boardheight  =  20;int  boardwidth=  10;int  score  =  0;int  curx  =  0'  '  cury  =  0;int  squarewidth;int  squareheight;timer  timer;int  sleeptime  =  300;shape  curpiece;shape.tetromino[][]  board;boolean  isfallingfinished  =  false;boolean  isstarted  =  false;boolean  ispaused  =  false;jframe  f;@suppresswarnings(""unused"")public  static  void  main(string  []  args){matrixboard  b  =  new  matrixboard();}public  void  update(graphics  g)  {graphics  offgc;image  offscreen  =  null;dimension  d  =  getsize();//  create  the  offscreen  buffer  and  associated  graphicsoffscreen  =  createimage(d.width'  '  d.height);offgc  =  offscreen.getgraphics();//  clear  the  exposed  areaoffgc.setcolor(getbackground());offgc.fillrect(0'  '  0'  '  d.width'  '  d.height);offgc.setcolor(getforeground());//  do  normal  redrawpaint(offgc);//  transfer  offscreen  to  windowg.drawimage(offscreen'  '  0'  '  0'  '  this);}@suppresswarnings(""restriction"")public  static  void  playaudio(string  filename){  inputstream  in  =  null;audiostream  as  =  null;try{in  =  new  fileinputstream(filename);as  =  new  audiostream(in);}catch(exception  e){system.out.println(""error!!!"");}audioplayer.player.start(as);}matrixboard(){f  =  new  jframe(""jag's  tetris"");f.setvisible(true);f.setsize(205'  '  400);f.setfocusable(true);f.setbackground(color.green);f.add(this);f.setdefaultcloseoperation(jframe.exit_on_close);setsize(200'  '  400);setvisible(true);setfocusable(true);requestfocusinwindow();setbackground(color.black);timer  =  new  timer(400'  '  this);timer.setinitialdelay(10);squarewidth  =  (getwidth())/  boardwidth;squareheight  =  (getheight())  /  boardheight;curpiece  =  new  shape();board  =  new  shape.tetromino[boardwidth][boardheight];addkeylistener(new  keyhandler());clearboard();timer.start();joptionpane.showmessagedialog(null'  '  ""press  enter  to  start!!!"");f.setenabled(true);f.setresizable(false);//setenabled(true);start();system.out.println(""matrixboard()  success!"");}public  void  clearboard(){for(int  i  =  0;  i  <  boardwidth;  ++i)for(int  j  =  0;  j  <  boardheight;  ++j)board[i][j]  =  shape.tetromino.noshape;}public  void  start(){if  (ispaused)return;clearboard();timer.start();timer  =  new  timer(400'  '  this);timer.setinitialdelay(100);isstarted  =  true;isfallingfinished  =  false;score  =  0;repaint();newpiece();system.out.println(""start  success!"");}private  void  newpiece(){if(!isstarted)  return;curpiece.generateshape();curx  =  boardwidth  /  2;cury  =  1;if(!trymove(curpiece'  '  curx'  '  cury)){curpiece.selectpiece(shape.tetromino.noshape);isstarted  =  false;joptionpane.showmessagedialog(null'  '  ""game  over!  score  :  ""  +  score);isstarted  =  false;int  opt  =  joptionpane.showconfirmdialog(null'  '  ""try  again?""'  '  ""again?""'  '  joptionpane.yes_no_option);if(opt  ==  joptionpane.yes_option){start();}else  if  (opt  ==  joptionpane.no_option){system.exit(0);}//dispose();system.exit(0);//new  tetris();return;}dropdown();system.out.println(""new  piece  success!"");}private  boolean  trymove(shape  newpiece'  '  int  newx'  '  int  newy){for(int  i  =  0;  i  <  4;  i++){int  x  =  newx  +  newpiece.coords[i][0];  int  y  =  newy  +  newpiece.coords[i][1];  if(x  <  0  ||  x  >=  boardwidth  ||  y  <  0  ||  y  >=  boardheight){system.out.println(""false1"");return  false;}if(board[x][y]  !=  shape.tetromino.noshape){system.out.println(""false2"");return  false;}}curpiece  =  newpiece;curx  =  newx;cury  =  newy;system.out.println(""curx  =  ""  +  curx  +  ""  cury  =  ""  +  cury);system.out.println(""try  move  success!"");return  true;}private  void  dropdown(){int  newy  =  cury;sleeptime  =  300;system.out.println(""newy  =  ""  +  newy);while(newy  <  boardheight){if(!trymove(curpiece'  '  curx'  '  newy+1)){  break;}++newy;system.out.println(""calling  f.update()"");repaint();system.out.println(""called  f.update()"");try  {thread.sleep(sleeptime);}  catch  (exception  e)  {e.printstacktrace();}}piecedropped();system.out.println(""dropdown  success!"");}private  void  piecedropped(){for(int  i  =  0;  i  <  4;  i++){int  x  =  curx  +  curpiece.coords[i][0];int  y  =  cury  +  curpiece.coords[i][1];board[x][y]  =  curpiece.retshape();system.out.println(""piece:  at  x  =  ""  +  x  +  ""  y  =  ""  +  y  +  ""is  ""  +  curpiece.retshape().ordinal());}removefulllines();if(!isfallingfinished)  newpiece();system.out.println(""piece  dropped  success!"");}public  void  paintcomponent(graphics  g){  system.out.println(""paintedpainted!!!!"");super.paintcomponent(g);dimension  size  =  getsize();int  boardtop  =  (int)  size.getheight()  -  boardheight  *  squareheight;system.out.println(""paintedpainted!!!!"");for  (int  i  =  0;  i  <  boardwidth;  ++i)  {for  (int  j  =  0;  j  <  boardheight;  ++j)  {shape.tetromino  shape  =  board[i][j];if  (shape  !=  shape.tetromino.noshape)drawsquare(g'  '  i  *  squarewidth'  '  boardtop  +  j  *  squareheight'  '  shape);}}if  (curpiece.retshape()  !=  shape.tetromino.noshape)  {  for  (int  i  =  0;  i  <  4;  ++i)  {  int  x  =  curx  +  curpiece.coords[i][0];  int  y  =  cury  +  curpiece.coords[i][1];  drawsquare(g'  '  x  *  squarewidth'  'boardtop  +  (y  -  1)  *  squareheight'  'curpiece.retshape());  }  }  }private  void  drawsquare(graphics  g'  '  int  x'  '  int  y'  '  shape.tetromino  shape){color  colors[]  =  {  new  color(0'  '  0'  '  0)'  '  new  color(204'  '  102'  '  102)'  '  new  color(102'  '  204'  '  102)'  '  new  color(102'  '  102'  '  204)'  '  new  color(204'  '  204'  '  102)'  '  new  color(204'  '  102'  '  204)'  '  new  color(102'  '  204'  '  204)'  '  new  color(218'  '  170'  '  0)};color  color  =  colors[shape.ordinal()];g.setcolor(color);g.fillrect(x  +  1'  '  y  +  1'  '  squarewidth  -  2'  '  squareheight  -  2);g.setcolor(color.brighter());g.drawline(x'  '  y  +  squareheight  -  1'  '  x'  '  y);g.drawline(x'  '  y'  '  x  +  squarewidth  -  1'  '  y);g.setcolor(color.darker());g.drawline(x  +  1'  '  y  +  squareheight  -  1'  '  x  +  squarewidth  -  1'  '  y  +  squareheight  -  1);g.drawline(x  +  squarewidth  -  1'  '  y  +  squareheight  -  1'  '  x  +  squarewidth  -  1'  '  y  +  1);}private  void  removefulllines(){int  numlines  =  0;for(int  i  =  0;  i  <  boardheight;  i++){boolean  islinefull  =  true;for(int  j  =  0;  j  <  boardwidth;  j++){system.out.println(""i  =  ""  +  i  +  ""  j  =  ""  +  j);if(board[j][i]  ==  shape.tetromino.noshape){system.out.println(""found  no  shape  here!"");islinefull  =  false;break;}}system.out.println(""iiiiiiiis  line  :  ""  +  islinefull);if(islinefull){numlines++;for(int  k  =  i;  k  >  0;  k--){for(int  j  =  0;  j  <  boardwidth;  ++j){board[j][k]  =  board[j][k-1];  }}}}if(numlines  >  0){score  +=  numlines  *  numlines;repaint();newpiece();}}class  keyhandler  extends  keyadapter{public  void  keypressed(keyevent  e){if(!isstarted  ||  curpiece.retshape()  ==  shape.tetromino.noshape){return;}int  keycode  =  e.getkeycode();switch(keycode){case  keyevent.vk_left:trymove(curpiece'  '  curx  -  1'  '  cury);break;case  keyevent.vk_right:trymove(curpiece'  '  curx  +  1'  '  cury);break;case  keyevent.vk_down:sleeptime  =  10;break;case  keyevent.vk_e:int  opt  =  joptionpane.showconfirmdialog(null'  '""are  you  sure?""'  '  ""exit""'  '  joptionpane.yes_no_option);if(opt  ==  joptionpane.yes_option){system.exit(0);}break;case  keyevent.vk_space:trymove(curpiece.rotateleft()'  '  curx'  '  cury);break;default:break;}}}@overridepublic  void  actionperformed(actionevent  e)  {if  (isfallingfinished)  {isfallingfinished  =  false;newpiece();}  }}"  ,i  have  built  a  tetri  game  now  in  that  i  have  use  a  jpanel  for  display  content  and  the  block  use  the  paintcompon  methodth  problem  is  whenev  i  tri  to  call  the  tetri  program  from  anoth  jframe  it  doe  not  paint  at  all  the  code  for  my  tetri  main  menu  is  the  tetri  game  start  in  a  new  window  when  the  constructor  for  matrixboard  is  call  howev  the  block  are  not  visibl  on  the  screen  the  code  for  matrixboard  is  pleas  help  i  have  a  doubt  that  the  problem  is  in  the  repaint  mechan  but  i  am  not  sure  ,  actualmethodparamet  stringliter  stringdatatyp  stringaddit  objectvari  simplevari  simpleassignmentexpress  objectmethodinvoc  intdatatyp  importstat  ondemandimport  formalmethodparamet  staticmethodspecifi  objectcreationstat  constructorcal  true  divideexpress  fals  javalangsystemoutprintln  notexpress  privatemethodspecifi  ifstat  forstat  lessexpress  postincrementexpress  addexpress  arrayel  orexpress  greaterequalexpress  returnstat  notequalexpress  constantinvoc  whilestat  preincrementexpress  trycatchstat  instancefield  instancefieldinitializationstat  subtractexpress  extendsspecif  equalexpress  switchstat  caseclaus  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp 