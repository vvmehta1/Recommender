 question  ,  public  class  multiton  {private  static  final  multiton[]  instances  =  new  multiton[...];private  multiton(...)  {//...}public  static  multiton  getinstance(int  which)  {if(instances[which]  ==  null)  {instances[which]  =  new  multiton(...);}return  instances[which];}}  ,given  the  follow  multiton  how  can  we  keep  it  thread  safe  and  lazi  without  the  expens  synchron  of  the  getinst  method  and  the  controversi  of  doublecheck  lockingan  effect  way  for  singleton  is  mention  but  that  doesnt  seem  to  extend  to  multiton  ,  classdefinit  publicclassspecifi  arraydatatyp  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  simplevari  constructordefinit  privateconstructorspecifi    stringvari  stringdatatyp  privatefieldspecifi  finalfieldspecifi  instancefield  simplevari  formalmethodparamet  privatemethodspecifi  instancefieldinvoc  thisrefer  simpleassignmentexpress  staticmethodspecifi  returnstat  objectmethodinvoc  actualmethodparamet  genericobjectcreationstat  objectcreationstat  constructorcal  ifstat  equalexpress  null     arraydatatyp  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  simplevari  classconstantinitializationstat  simpleassignmentexpress  arraylength  intdatatyp  forstat  lessexpress  postincrementexpress  arrayel  objectcreationstat  constructorcal  privatemethodspecifi     privatemethodspecifi  objectcreationstat  constructorcal     simpleassignmentexpress  