 question  ,  //singletonpublic  class  container  {  public  concurrenthashmap<string'  '  myobj>  map1  =  new  concurrenthashmap<string'  '  myobj>();  public  concurrenthashmap<string'  '  myobj>  map2  =  new  concurrenthashmap<string'  '  myobj>();  public  void  replaceforward(string  key)  {  object  value  =  map1.remove(key);  map2.put(key'  '  value);  }  public  void  replacebackward(string  key)  {  myobj  value  =  map2.remove(key);  map1.put(key'  '  value);  }  //this  operation  should  be  as  quick  as  possible!  public  void  replaceallforward(int  criteria)  {  for  (map.entry<string'  '  myobj>  entry  entry  :  map1.entryset())  {  if  (entry.getvalue().criteria  =  criteria)  {  replaceforward(entry.getkey());  }  }  }  //this  operation  should  be  as  quick  as  possible!  public  void  replaceallbackward(string  key)  {  //just  the  same  but  from  map2  to  map1  }  public  void  remove(string  key)  {map1.remove(key);  }  public  void  add(string  key'  '  myobj  value)  {map2.put(key'  '  value);  }  //this  operation  should  be  as  quick  as  possible!  public  map<string'  '  myobj>  getbycriteria(int  criteria)  {  concurrenthashmap<string'  '  myobj>  resultmap  =  new  concurrenthashmap<string'  '  myobj>();  for  (map.entry<string'  '  myobj>  entry  entry  :  map1.entryset())  {  if  (entry.getvalue().criteria  =  criteria)  {  resultmap.put(entry.getkey()'  '  entry.getvalue);  }  }  return  resultmap;  }};  map1;  map2;  map1;  map2;  map2;  map1  ,i  face  the  next  problem  i  read  your  comment  and  decid  to  reformul  my  question  imagin  situat  you  have  to  concurr  map  and  you  have  two  thread  both  oper  with  those  mapsreplac  element  from  to  i  mean  remov  from  and  put  toreplac  element  from  to  is  it  thread  safe  ,  formalmethodparamet  javalangobject  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  objectvari  simplevari  ifstat  instancefieldinvoc  intdatatyp 