 question  ,  public  class  test  {private  static  final  map<integer'  '  test>  testsbyid  =collections.synchronizedmap(new  hashmap<>());private  static  final  atomicinteger  atomicidgenerator  =  new  atomicinteger();private  final  int  id;public  test()  {this.id  =  atomicidgenerator.getandincrement();testsbyid.put(this.id'  '  this);//  some  lengthy  operation  to  fully  initialize  this  object}public  static  test  gettestbyid(int  id)  {return  testsbyid.get(id);}};  gettestbyid;  test  test  =  gettestbyid(someid);test.dosomething();  //  does  this  line  block  until  the  constructor  is  done?  ,someon  somewher  told  me  that  java  constructor  are  synchron  so  that  it  cant  be  access  concurr  dure  construct  and  i  was  wonder  if  i  have  a  constructor  that  store  the  object  in  a  map  and  anoth  thread  retriev  it  from  that  map  befor  it  construct  is  finish  will  that  thread  block  until  the  constructor  complet  let  me  demonstr  with  some  code  assum  that  putget  are  the  onli  oper  on  the  map  so  i  wont  get  cmes  via  someth  like  iter  and  tri  to  ignor  other  obvious  flaw  here  what  i  want  to  know  is  if  anoth  thread  that  not  the  one  construct  the  object  obvious  tri  to  access  the  object  use  and  call  someth  on  it  will  it  block  in  other  word  im  just  tri  to  clarifi  how  far  the  constructor  synchron  goe  in  java  and  if  code  like  this  would  be  problemat  ive  seen  code  like  this  recent  that  did  this  instead  of  use  a  static  factori  method  and  i  was  wonder  just  how  danger  or  safe  this  is  in  a  multithread  system  ,  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  instancefield  intdatatyp  simplevari  instancefieldinvoc  thisrefer  objectmethodinvoc  actualmethodparamet    simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc              classdefinit  publicclassspecifi  privatefieldspecifi  finalfieldspecifi  instancefield  instancefieldinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  constructordefinit  publicconstructorspecifi  