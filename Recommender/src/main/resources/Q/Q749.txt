 question  ,  public  void  crop(point  p1'  '  point  p2)  {point  left  =  points.get(0);point  right  =  points.get(1);point  top  =  points.get(2);point  bottom  =  points.get(3);//  point  []rectangle2d  =  {p1'  'p2};rectangle2d  rect  =  new  rectangle2d.double(p1.getx()'  '  p1.gety()'  'p2.getx()'  '  p2.gety());if  (p1.getx()  ==  p2.getx()  ||  p1.gety()  ==  p2.gety())  {points.add(p1);  //  checks  if  equal}//  checks  if  its  in  the  square;if  (left.getx()  >  p1.getx()  &&  left.gety()  >  p1.gety()&&  left.getx()  <  p2.getx()  &&  left.gety()  <  p2.gety())  {points.add(left);}  else  {points.remove(left);}if  (right.getx()  >  p1.getx()  &&  right.gety()  >  p1.gety()&&  right.getx()  <  p2.getx()  &&  right.gety()  <  p2.gety())  {points.add(right);}  else  {points.remove(right);}if  (top.getx()  >  p1.getx()  &&  top.gety()  >  p1.gety()&&  top.getx()  <  p2.getx()  &&  top.gety()  <  p2.gety())  {points.add(top);}  else  {points.remove(top);}if  (bottom.getx()  >  p1.getx()  &&  bottom.gety()  >  p1.gety()&&  bottom.getx()  <  p2.getx()  &&  bottom.gety()  <  p2.gety())  {points.add(bottom);}  else  {points.remove(bottom);}//  checks  the  line  coordanitesif  (p1.getx()  ==  top.getx()  &&  p1.gety()  <  top.gety()&&  top.gety()  <  bottom.gety()  ||  p1.getx()  <  top.getx()&&  top.getx()  <  p2.getx()  &&  p1.gety()  ==  top.gety())  {points.add(top);}if  (p1.getx()  ==  right.getx()  &&  p1.gety()  <  right.gety()&&  left.gety()  <  right.gety()  ||  p1.getx()  <  right.getx()&&  right.getx()  <  p2.getx()  &&  p1.gety()  ==  right.gety())  {points.add(right);}if  (p1.getx()  ==  top.getx()  &&  p1.gety()  <  top.gety()&&  left.gety()  <  top.gety()  ||  p1.getx()  <  top.getx()&&  top.getx()  <  p2.getx()  &&  p1.gety()  ==  top.gety())  {points.add(top);}if  (p1.getx()  ==  bottom.getx()  &&  p1.gety()  <  bottom.gety()&&  left.gety()  <  bottom.gety()  ||  p1.getx()  <  bottom.getx()&&  bottom.getx()  <  p2.getx()  &&  p1.gety()  ==  bottom.gety())  {points.add(bottom);}};  point  left  =  points.get(0);point  right  =  points.get(1);point  top  =  points.get(2);point  bottom  =  points.get(3);//  point  []rectangle2d  =  {p1'  'p2};if(left.getx()  >  p1.getx()){points.remove(left);}if(left.gety()  >  p1.gety()){points.remove(left);}if(left.getx()  <  p1.getx()){points.remove(left);}if(left.gety()  <  p1.gety()){points.remove(left);  }//cehcks  rightif(right.getx()  >  p1.getx()){points.remove(right);}if(right.gety()  >  p1.gety()){points.remove(right);}if(right.getx()  <  p1.getx()){points.remove(right);}if(right.gety()  <  p1.gety()){points.remove(right);}//checks  topif(top.getx()  >  p1.getx()){points.remove(top);}if(top.gety()  >  p1.gety()){points.remove(top);}if(top.getx()  <  p1.getx()){points.remove(top);}if(top.gety()  <  p1.gety()){points.remove(top);}//checks  bottomif(bottom.getx()  >  p1.getx()){points.remove(bottom);}if(bottom.gety()  >  p1.gety()){points.remove(bottom);}if(bottom.getx()  <  p1.getx()){points.remove(bottom);}if(bottom.gety()  <  p1.gety()){points.remove(bottom);}//checking  linesif(p1.getx()  ==  left.getx()  &&  p1.gety()  <  left.gety()  &&  left.gety()  <  p2.gety()  ||p1.getx()<  left.getx()  &&  left.getx()  <  p2.getx()  &&  p1.gety()  ==  left.gety()){points.add(left);}if(p1.getx()  ==  right.getx()  &&  p1.gety()  <  right.gety()  &&  right.gety()  <  p2.gety()  ||p1.getx()<  right.getx()  &&  right.getx()  <  p2.getx()  &&  p1.gety()  ==  right.gety()){points.add(right);}if(p1.getx()  ==  top.getx()  &&  p1.gety()  <  top.gety()  &&  top.gety()  <  p2.gety()  ||p1.getx()<  top.getx()  &&  top.getx()  <  top.getx()  &&  p1.gety()  ==  top.gety()){points.add(top);}if(p1.getx()  ==  bottom.getx()  &&  p1.gety()  <  bottom.gety()  &&  bottom.gety()  <  p2.gety()  ||p1.getx()<  bottom.getx()  &&  bottom.getx()  <  bottom.getx()  &&  p1.gety()  ==  bottom.gety()){points.add(bottom);}if(p1.getx()  ==  p2.getx()  ||  p1.gety()  ==  p2.gety()){points.add(p2);}  ,crop  has  paramet  that  are  two  point  in  the  cloud  one  of  these  two  point  is  a  bottom  corner  and  the  other  a  diagon  across  top  corner  of  a  rectangl  crop  will  remov  all  point  outsid  this  rectangl  from  the  cloud  much  like  you  would  crop  an  imag  the  crop  method  must  deal  with  two  input  point  on  a  horizont  or  vertic  line  segment  in  which  case  all  point  not  on  the  line  segment  are  remov  and  it  must  deal  with  two  equal  point  p  and  p  in  which  case  all  point  but  p  are  remov  from  the  cloud  for  exampl  if  the  two  input  point  are  and  all  point  outsid  the  squar  delimit  by  and  are  remov  but  if  the  two  input  point  are  and  all  point  outsid  the  line  segment  delimit  by  and  are  remov  im  have  a  hard  time  approach  this  logic  if  anyon  could  help  me  out  with  that  i  would  be  thank  orthank  ,  simpleassignmentexpress  instancefield  simplevari  objectmethodinvoc  actualmethodparamet    simpleassignmentexpress  arraydatatyp  instancefield  instancefieldinitializationstat  doubledatatyp  intdatatyp  booleandatatyp  arrayel  greaterequalexpress  andexpress  lessexpress  ifstat  notexpress  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  stringaddit  