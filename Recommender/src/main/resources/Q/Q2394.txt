 question  ,  threadpoolexecutor;  executorservice;  linkedblockingqueue;  executorservice  threadpool  =new  threadpoolexecutor(1  /*core*/'  '  50  /*max*/'  '  60  /*timeout*/'  'timeunit.seconds'  '  new  linkedblockingqueue<runnable>());;  threadpoolexecutor;  newfixedthreadpool(...);  newcachedthreadpool();  threadpoolexecutor;  threadpoolexecutor.allowcorethreadtimeout(true)  ,ive  been  frustrat  for  some  time  with  the  default  behavior  of  which  back  the  threadpool  that  so  mani  of  us  useto  quot  from  the  javadoc  what  this  mean  is  that  if  you  defin  a  thread  pool  with  the  follow  code  it  will  start  the  nd  thread  becaus  the  is  unbound  onli  if  you  have  a  queue  and  the  queue  is  are  ani  thread  abov  the  core  number  startedi  suspect  a  larg  number  of  junior  java  multithread  programm  are  unawar  of  this  behavior  of  the  now  i  have  specif  use  case  where  this  is  notoptimalim  look  for  way  without  write  my  own  tpe  class  to  work  around  it  my  requir  are  for  a  web  servic  that  is  make  callback  to  a  possibl  unreli  rd  parti  how  can  i  work  around  this  limit  in  where  the  queue  need  to  be  bound  and  full  more  thread  will  be  startedhow  can  i  get  it  to  start  more  thread  queu  task  flavio  make  a  good  point  about  use  the  to  have  the  core  thread  timeout  and  exiti  consid  that  but  i  still  want  the  corethread  featurei  did  not  want  the  number  of  thread  in  the  pool  to  drop  below  the  cores  if  possibl  ,  simpleassignmentexpress    actualmethodparamet  true     objectvari  simplevari  constant  constantinitializationstat  intdatatyp  simpleassignmentexpress  ifstat  lessexpress  objectmethodinvoc  greaterexpress  actualmethodparamet  addexpress     intdatatyp  simplevari  longdatatyp  objectvari  simpleassignmentexpress  formalmethodparamet  postdecrementexpress  privatemethodspecifi  ifstat  lessexpress  greaterexpress  actualmethodparamet     objectmethodinvoc  simpleassignmentexpress  formalmethodparamet  objectvari  simplevari  ifelsestat  equalexpress  throwstat  objectcreationstat  constructorcal     simpleassignmentexpress  objectvari  simplevari  trycatchstat  objectmethodinvoc  actualmethodparamet     objectvari  simplevari  simpleassignmentexpress  