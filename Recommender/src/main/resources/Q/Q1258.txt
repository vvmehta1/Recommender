 question  ,  "public  class  sscce  {static  abstract  class  a  {public  a()  {method();//  not  good;  field  arr  in  b  will  be  null  at  this  point!}abstract  void  method();}static  class  b  extends  a  {final  string[]  arr  =  new  string[]  {  ""foo""'  '  ""bar""  };public  b()  {super();system.out.println(""in  b():  ""  +  arrays.tostring(arr));}void  method()  {system.out.println(""in  method():  ""  +  arrays.tostring(arr));}}public  static  void  main(string[]  args)  {new  b().method();}};  method();  arr"  ,i  recent  spent  quit  a  few  minut  debug  a  problem  in  product  code  that  in  the  end  turn  out  to  be  caus  by  a  class  call  an  abstract  method  in  it  constructor  and  the  subclass  implement  of  that  method  tri  to  use  a  subclass  field  that  had  not  been  initi  yet  an  exampl  that  illustr  the  point  is  includ  below  while  research  this  i  stumbl  across  and  was  intrigu  by  jon  skeet  answer  this  has  me  wonder  is  there  ever  a  legitim  reason  to  call  a  nonfin  or  abstract  method  from  a  constructoror  is  it  pretti  much  alway  a  sign  of  bad  design  and  here  is  expect  output  the  problem  of  cours  is  that  in  the  first  call  to  the  field  is  null  becaus  it  hasnt  been  initi  yet  ,  formalmethodparamet  staticmethodspecifi  objectmethodinvoc  objectcreationstat  constructorcal       formalmethodparamet  staticmethodspecifi  objectmethodinvoc  objectcreationstat  constructorcal           simpleassignmentexpress  