 question  ,  "  public  void  run()  {system.out.println(thread.currentthread().getname());while  (i  <  number  of  columns  in  final  matrix)  {synchronized  (this)  {if  (i  <  number  of  columns  in  final  matrix)  {for  (int  j  =  0;  j  <  main.b[0].length;  j++)  {  for  (int  k  =  0;  k  <  main.a[0].length;  k++)  {  main.c[i][j]  +=  main.a[i][k]  *  main.b[k][j];}}i++;}}}}  ;  myrunnable  r  =  new  myrunnable();thread  thread1  =  new  thread(r);thread  thread2  =  new  thread(r);thread1.start();thread2.start();try  {thread1.join();thread2.join();}  catch  (interruptedexception  ie)  {system.out.println(""the  following  error  occurred:  ""  +  ie);}}"  ,i  am  multipli  two  matric  use  two  thread  howev  the  program  is  written  to  scale  up  as  well  so  i  could  possibl  use  three  four  etc  thread  insteadeach  thread  calculatesdo  the  work  for  one  row  or  column  of  the  final  matrixif  one  thread  is  do  work  on  a  row  the  other  one  should  not  work  on  that  row  itthey  should  move  on  to  the  next  avail  rowfirst  of  all  i  am  not  certain  if  the  way  i  implement  the  problem  is  correct  if  you  can  see  a  better  way  pleas  let  me  know  second  the  way  i  have  done  it  everi  time  i  test  it  with  differ  size  matriceseven  huge  one  onli  one  thread  doe  the  workthat  is  each  time  the  same  thread  is  get  access  to  the  synchron  block  of  the  run  methodth  other  thread  are  enter  the  run  method  but  whi  is  onli  one  thread  alway  gain  the  lock  and  do  all  of  the  work  this  is  my  run  method  this  is  the  code  in  my  driver  class  that  creat  the  thread  and  start  the  program  i  guess  my  question  is  twofoldi  my  approach  correct  for  the  problem  at  handif  so  and  if  not  whi  is  one  thread  alway  grab  the  lock  and  do  all  of  the  worki  have  check  the  program  with  up  to  thread  on  x  matric  and  alway  onli  one  thread  is  do  the  work  ,             intdatatyp  simplevari  ifstat  lessexpress  objectvari  constant  constantinitializationstat  simpleassignmentexpress  postincrementexpress  