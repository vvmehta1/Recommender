 question  ,  "public  class  output  extends  thread  {private  class  testclass;public  output(class  clazz)  {this.testclass  =  clazz;}private  method  getmainmethod(class  clazz)  {  method[]  methods  =  clazz.getmethods();  for  (method  method  :  methods)  {  if  (ismainmethod(method))  {  return  method;  }  }  return  null;}private  boolean  ismainmethod(method  method)  {  return  (method.getname().equals(""main"")  &&  modifier.isstatic(method.getmodifiers())  &&  method.getreturntype().equals(void.class));}public  void  run()  {method  mainmethod  =  null;if  ((mainmethod  =  getmainmethod(this.testclass))  ==  null)  {  //if  there's  no  static  void  main  method'  '  throw  exception  throw  new  youfuckeditupexception();}mainmethod.invoke(this.testclass'  '  new  string[0]);return  hereswhereimstuckiwanttocapturetheconsoleoutputandreturnit();}}"  ,i  realiz  there  are  similar  question  on  so  but  they  dont  quit  solv  my  problem  i  would  like  a  method  that  given  a  class  object  will  invok  the  main  method  that  is  to  say  public  static  void  main  on  that  class  if  it  exist  and  captur  the  consol  output  of  that  main  methodth  class  do  the  invoc  is  a  nondaemon  thread  i  have  part  of  the  code  alreadi  but  im  not  sure  how  to  captur  the  consol  output  and  on  top  of  that  how  to  onli  captur  it  for  this  specif  threadher  what  i  have  so  far  all  i  need  is  some  code  to  or  a  link  to  an  answer  on  how  to  captur  the  systemout  and  systemerr  output  of  the  method  be  invokedani  help  someon  can  give  would  be  much  appreci  thank  in  advancethi  is  not  for  test  onli  this  will  eventu  be  someth  put  into  product  this  will  need  to  be  threadsafemultipl  main  method  will  be  invok  by  other  thread  possibl  at  the  same  time  and  i  want  each  thread  to  onli  captur  it  own  specif  output  ,  throwstat  objectcreationstat  constructorcal  returnstat    objectvari  simplevari  instancefieldinvoc  thisrefer  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  formalmethodparamet  synchronizedmethodspecifi  ifstat  notequalexpress  null  instancefield  instancefieldinitializationstat  objectcreationstat  constructorcal     