 question  ,  final  semaphore  sem  =  new  semaphore(0);for  (int  i  =  0;  i  <  num_threads;  ++  i){thread  t  =  new  thread()  {public  void  run(){try{dostuff();}finally{sem.release();}}};t.start();}sem.acquire(num_threads);;  final  countdownlatch  latch  =  new  countdownlatch(num_threads);for  (int  i  =  0;  i  <  num_threads;  ++  i){thread  t  =  new  thread()  {public  void  run(){try{dostuff();}finally{latch.countdown();}}};t.start();}latch.await();  ,is  there  an  advantag  to  use  instead  ofa  far  as  i  can  tell  the  follow  fragment  are  almost  equival  except  that  in  case  the  latch  cannot  be  reus  and  more  import  you  need  to  know  in  advanc  how  mani  thread  will  be  creat  or  wait  until  they  are  all  start  befor  creat  the  latch  so  in  what  situat  might  the  latch  be  prefer  ,  constant  constantinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  intdatatyp  forstat  lessexpress  preincrementexpress  trycatchstat  objectmethodinvoc             