 question  ,  "import  java.awt.*;import  javax.swing.jframe;public  class  gridbaglayoutdemo  {final  static  boolean  right_to_left  =  false;public  static  void  addcomponentstopane(container  pane)  {if  (right_to_left)  {pane.setcomponentorientation(componentorientation.right_to_left);}pane.setlayout(new  gridbaglayout());//  top  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr1c1  =  new  testpanel(color.black);gridbagconstraints  constraint_r1c1  =  getgridbagconstraints(gridbagconstraints.none'  '0'  '0'  '1'  '0'  '0'  '0);pane.add(panelr1c1'  'constraint_r1c1);testpanel  panelr1c2  =  new  testpanel(color.blue);gridbagconstraints  constraint_r1c2  =  getgridbagconstraints(gridbagconstraints.horizontal'  '1'  '0'  '1'  '0.8'  '0'  '0);pane.add(panelr1c2'  'constraint_r1c2);testpanel  panelr1c2a  =  new  testpanel(color.green);gridbagconstraints  constraint_r1c2a  =  getgridbagconstraints(gridbagconstraints.horizontal'  '2'  '0'  '1'  '0.8'  '0'  '0);pane.add(panelr1c2a'  'constraint_r1c2a);testpanel  panelr1c3  =  new  testpanel(color.red);gridbagconstraints  constraint_r1c3  =  getgridbagconstraints(gridbagconstraints.none'  '3'  '0'  '1'  '0'  '0'  '0);pane.add(panelr1c3'  'constraint_r1c3);testpanel  panelr1c4  =  new  testpanel(color.blue);gridbagconstraints  constraint_r1c4  =  getgridbagconstraints(gridbagconstraints.none'  '4'  '0'  '1'  '0'  '0'  '0);pane.add(panelr1c4'  'constraint_r1c4);//  second  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr2c1  =  new  testpanel(color.magenta);gridbagconstraints  constraint_r2c1  =  getgridbagconstraints(gridbagconstraints.none'  '0'  '1'  '1'  '0'  '0'  '0);pane.add(panelr2c1'  'constraint_r2c1);testpanel  panelr2c2  =  new  testpanel(color.pink);gridbagconstraints  constraint_r2c2  =  getgridbagconstraints(gridbagconstraints.horizontal'  '1'  '1'  '2'  '1.0'  '0'  '0);pane.add(panelr2c2'  'constraint_r2c2);testpanel  panelr2c3  =  new  testpanel(color.black);gridbagconstraints  constraint_r2c3  =  getgridbagconstraints(gridbagconstraints.none'  '3'  '1'  '1'  '0'  '0'  '0);pane.add(panelr2c3'  'constraint_r2c3);testpanel  panelr2c4  =  new  testpanel(color.pink);gridbagconstraints  constraint_r2c4  =  getgridbagconstraints(gridbagconstraints.none'  '4'  '1'  '1'  '0'  '0'  '0);pane.add(panelr2c4'  'constraint_r2c4);//  third  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr3c1  =  new  testpanel(color.gray);gridbagconstraints  constraint_r3c1  =  getgridbagconstraints(gridbagconstraints.vertical'  '0'  '2'  '1'  '0'  '0.5'  '40);pane.add(panelr3c1'  'constraint_r3c1);testpanel  panelr3c2  =  new  testpanel(color.orange);gridbagconstraints  constraint_r3c2  =  getgridbagconstraints(gridbagconstraints.both'  '1'  '2'  '2'  '1.0'  '0.5'  '40);pane.add(panelr3c2'  'constraint_r3c2);testpanel  panelr3c3  =  new  testpanel(color.red);gridbagconstraints  constraint_r3c3  =  getgridbagconstraints(gridbagconstraints.vertical'  '3'  '2'  '1'  '0'  '0.5'  '40);pane.add(panelr3c3'  'constraint_r3c3);testpanel  panelr3c4  =  new  testpanel(color.orange);gridbagconstraints  constraint_r3c4  =  getgridbagconstraints(gridbagconstraints.vertical'  '4'  '2'  '1'  '0'  '0.5'  '40);pane.add(panelr3c4'  'constraint_r3c4);//  fourth  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr4c1  =  new  testpanel(color.black);gridbagconstraints  constraint_r4c1  =  getgridbagconstraints(gridbagconstraints.vertical'  '0'  '3'  '1'  '0'  '0.5'  '40);pane.add(panelr4c1'  'constraint_r4c1);testpanel  panelr4c2  =  new  testpanel(color.white);gridbagconstraints  constraint_r4c2  =  getgridbagconstraints(gridbagconstraints.both'  '1'  '3'  '2'  '1.0'  '0.5'  '40);pane.add(panelr4c2'  'constraint_r4c2);testpanel  panelr4c3  =  new  testpanel(color.green);gridbagconstraints  constraint_r4c3  =  getgridbagconstraints(gridbagconstraints.vertical'  '3'  '3'  '1'  '0'  '0.5'  '40);pane.add(panelr4c3'  'constraint_r4c3);testpanel  panelr4c4  =  new  testpanel(color.blue);gridbagconstraints  constraint_r4c4  =  getgridbagconstraints(gridbagconstraints.vertical'  '4'  '3'  '1'  '0'  '0.5'  '40);pane.add(panelr4c4'  'constraint_r4c4);//  fifth  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr5c1  =  new  testpanel(color.darkgray);gridbagconstraints  constraint_r5c1  =  getgridbagconstraints(gridbagconstraints.vertical'  '0'  '4'  '1'  '0'  '0.5'  '40);pane.add(panelr5c1'  'constraint_r5c1);testpanel  panelr5c2  =  new  testpanel(color.yellow);gridbagconstraints  constraint_r5c2  =  getgridbagconstraints(gridbagconstraints.both'  '1'  '4'  '2'  '1.0'  '0.5'  '40);pane.add(panelr5c2'  'constraint_r5c2);testpanel  panelr5c3  =  new  testpanel(color.white);gridbagconstraints  constraint_r5c3  =  getgridbagconstraints(gridbagconstraints.vertical'  '3'  '4'  '1'  '0'  '0.5'  '40);pane.add(panelr5c3'  'constraint_r5c3);testpanel  panelr5c4  =  new  testpanel(color.orange);gridbagconstraints  constraint_r5c4  =  getgridbagconstraints(gridbagconstraints.vertical'  '4'  '4'  '1'  '0'  '0.5'  '40);pane.add(panelr5c4'  'constraint_r5c4);//  sixth  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr6c1  =  new  testpanel(color.green);gridbagconstraints  constraint_r6c1  =  getgridbagconstraints(gridbagconstraints.none'  '0'  '5'  '1'  '0'  '0'  '0);pane.add(panelr6c1'  'constraint_r6c1);testpanel  panelr6c2  =  new  testpanel(color.blue);gridbagconstraints  constraint_r6c2  =  getgridbagconstraints(gridbagconstraints.horizontal'  '1'  '5'  '2'  '1.0'  '0'  '0);pane.add(panelr6c2'  'constraint_r6c2);testpanel  panelr6c3  =  new  testpanel(color.red);gridbagconstraints  constraint_r6c3  =  getgridbagconstraints(gridbagconstraints.none'  '3'  '5'  '1'  '0'  '0'  '0);pane.add(panelr6c3'  'constraint_r6c3);testpanel  panelr6c4  =  new  testpanel(color.black);gridbagconstraints  constraint_r6c4  =  getgridbagconstraints(gridbagconstraints.none'  '4'  '5'  '1'  '0'  '0'  '0);pane.add(panelr6c4'  'constraint_r6c4);//  seventh  row  (fill'  '  gridx'  '  gridy'  '  gridwidth  1'  '  weightx  0'  '  weighty  0'  '  ipady  0)testpanel  panelr7c1  =  new  testpanel(color.darkgray);gridbagconstraints  constraint_r7c1  =  getgridbagconstraints(gridbagconstraints.none'  '0'  '6'  '1'  '0'  '0'  '0);pane.add(panelr7c1'  'constraint_r7c1);testpanel  panelr7c2  =  new  testpanel(color.white);gridbagconstraints  constraint_r7c2  =  getgridbagconstraints(gridbagconstraints.horizontal'  '1'  '6'  '2'  '1.0'  '0'  '0);pane.add(panelr7c2'  'constraint_r7c2);testpanel  panelr7c3  =  new  testpanel(color.yellow);gridbagconstraints  constraint_r7c3  =  getgridbagconstraints(gridbagconstraints.none'  '3'  '6'  '1'  '0'  '0'  '0);pane.add(panelr7c3'  'constraint_r7c3);testpanel  panelr7c4  =  new  testpanel(color.green);gridbagconstraints  constraint_r7c4  =  getgridbagconstraints(gridbagconstraints.none'  '4'  '6'  '1'  '0'  '0'  '0);pane.add(panelr7c4'  'constraint_r7c4);}//  create  the  gui  and  show  it.for  thread  safety'  '  this  method  should  be  invoked  from  the  event-dispatching  thread.private  static  void  createandshowgui()  {//create  and  set  up  the  window.jframe  frame  =  new  jframe(""gridbagconstraint  practice"");frame.setdefaultcloseoperation(jframe.exit_on_close);//set  up  the  content  pane.addcomponentstopane(frame.getcontentpane());//display  the  window.frame.pack();frame.setvisible(true);}public  static  void  main(string[]  args)  {//schedule  a  job  for  the  event-dispatching  thread:  creating  and  showing  this  application's  gui.javax.swing.swingutilities.invokelater(new  runnable()  {public  void  run()  {createandshowgui();}});}private  static  gridbagconstraints  getgridbagconstraints(int  fill'  '  int  gridx'  '  int  gridy'  '  int  gridwidth'  '  double  weightx'  '  double  weighty'  '  int  ipady){gridbagconstraints  mygridbagconstraints  =  new  gridbagconstraints();mygridbagconstraints.fill=fill;mygridbagconstraints.gridx=gridx;mygridbagconstraints.gridy=gridy;mygridbagconstraints.gridwidth=gridwidth;mygridbagconstraints.weightx=weightx;mygridbagconstraints.weighty=weighty;mygridbagconstraints.ipady=ipady;return  mygridbagconstraints;}};  import  java.awt.color;import  javax.swing.jpanel;public  class  testpanel  extends  jpanel  {public  testpanel  (color  mycolor){this.setbackground(mycolor);}}"  ,i  design  a  gui  use  gridbaglayout  and  gridbagconstraintsit  contain  a  variabl  number  of  row  each  with  one  of  a  few  possibl  column  layoutsto  test  the  code  i  compris  the  gui  of  panel  with  differ  color  that  illustr  the  locat  and  resiz  behavior  of  all  the  cell  in  each  row  and  columnthi  test  gui  work  fine  but  now  i  need  to  autom  it  constructionspecif  i  need  the  row  to  be  one  of  three  differ  typesif  you  run  the  code  below  and  look  at  the  result  gui  you  can  see  that  row  is  one  type  row  and  are  anoth  type  and  row  and  are  yet  a  third  typei  need  each  of  these  three  type  of  row  to  be  encapsul  in  it  own  classwhat  more  i  need  my  code  to  be  abl  to  creat  a  variabl  number  of  row  of  the  third  type  illustr  by  row  and  in  the  examplethi  is  for  data  analysi  softwareth  panel  will  load  data  view  and  tool  for  manipul  the  data  view  when  i  tri  to  encapsul  the  row  into  their  own  class  the  gui  stop  look  like  it  should  lookth  test  code  below  generat  a  gui  layout  the  way  that  it  should  lookcan  anyon  show  me  how  to  alter  this  code  so  that  it  has  the  function  describ  in  the  first  paragraph  abov  you  can  just  past  my  test  code  below  into  your  ide  to  get  it  work  right  awayth  test  code  is  in  two  separ  file  as  follow  the  code  for  gridbaglayoutdemojava  is  the  code  for  testpaneljava  is  ,  simpleassignmentexpress  actualmethodparamet  objectcreationstat  constructorcal  objectmethodinvoc  privatemethodspecifi  staticmethodspecifi  intdatatyp  simplevari  doubledatatyp  importstat  classdefinit  publicclassspecifi  extendsspecif  formalmethodparamet  constructordefinit  publicconstructorspecifi 