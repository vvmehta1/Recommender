 question  ,  "  1/  23  /  |456  7  /  89;  private  int  calculatewidth(def  org'  '  int  h)  {def  allcontacts  =  contact.findallbyorganization(org)list<string>  headnodes  =  findhighestnode(org.id'  '  allcontacts  )contact  contact  =  contact.get(long.parselong(headnodes.get(0)))person  parent  =  new  person(contact.id'  '  contact.fullname)int  maxwidth  =  0;int  width;int  heightofchart  =  h;int  i;for(i  =  1;  i  <=  heightofchart;  i++){width  =  getwidth(parent'  '  i);if(width  >  maxwidth)maxwidth  =  width;}system.out.println(""the  max  width  is  =  ""  +  maxwidth)return  ((node_height  +  node_offset)  *  (maxwidth))}private  int  getwidth(person  parent'  '  int  level){list<person>  allchildren  =  getchildren(parent)if(allchildren.size()  ==  0)return  0;if(level  ==  1)return  1;else  if  (level  >  1)  {int  count  =  0for(person  child  :  allchildren)  {count  =  count  +  getwidth(parent'  '  level-1)}return  count}}"  ,im  tri  to  figur  out  how  to  calcul  the  max  width  of  a  tree  instead  of  use  a  typic  leafnod  structur  i  am  base  it  on  data  from  a  db  i  will  find  all  the  children  of  a  particular  node  person  to  determin  the  max  width  of  a  peer  line  so  the  max  of  that  tree  abov  is  sinc  i  am  not  use  a  tradit  leftright  approach  and  the  number  of  children  can  be  greater  than  how  would  i  do  thiscoupl  thing  here  is  my  code  as  of  now  ,  intdatatyp  simplevari  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  lessexpress  greaterexpress  notequalexpress  objectcreationstat  constructorcal  forstat  lessequalexpress  postincrementexpress  ifstat  instancefield  instancefieldinitializationstat  stringliter  stringdatatyp  stringaddit  formalmethodparamet  privatemethodspecifi  arrayinitializationstat  arrayiniti  arrayvari  equalexpress  returnstat  ifelseifstat  ifelsestat    arrayinitializationstat  arrayiniti  arrayvari  intdatatyp  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  lessexpress  greaterexpress  notequalexpress  objectcreationstat  constructorcal  instancefield  simplevari  javalangmathmax  formalmethodparamet  privatemethodspecifi  