 question  ,  scheduledexecutorservice  _timer  =  executors.newscheduledthreadpool(1);scheduledfuture<?>  _timerfuture  =  null;private  boolean  starttimer()  {try  {if  (_timerfuture  !=  null)  {//cancel  execution  of  the  future  task  (timerpoptask())//if  task  is  already  running'  '  do  not  interrupt  it._timerfuture.cancel(false);}_timerfuture  =  _timer.schedule(new  timerpoptask()'  '  timer_in_seconds'  '  timeunit.seconds);return  true;}  catch  (exception  e)  {return  false;}}private  boolean  stoptimer()  {try  {if  (_timerfuture  !=  null)  {//cancel  execution  of  the  future  task  (timerpoptask())//if  task  is  already  running'  '  interrupt  it  here._timerfuture.cancel(true);}return  true;}  catch  (exception  e)  {return  false;}}private  class  timerpoptask  implements  runnable{public  void  run  ()  {timerpopped();}}public  void  timerpopped  ()  {//do  something}  ,from  my  read  it  seem  that  scheduledexecutorservic  is  the  right  way  to  start  and  stop  timer  in  java  i  need  to  port  some  code  that  start  and  stop  a  timer  this  is  not  a  period  timer  this  code  stop  the  timer  befor  start  it  so  effect  everi  start  is  realli  a  restart  i  am  look  for  the  right  way  to  do  this  use  the  scheduledexecutorservic  here  is  what  i  came  up  with  look  for  comment  and  insight  on  thing  i  am  miss  tiaroubl  ,  objectvari  simplevari  objectmethodinvoc  actualmethodparamet  fals  simpleassignmentexpress  returnstat  true  instancefield  privatemethodspecifi  booleandatatyp  classdefinit  privateclassspecifi  implementsspecif  methodimplement  methoddefinit  publicmethodspecifi  voiddatatyp 