 question  ,  "import  java.util.concurrent.blockingqueue;import  java.util.concurrent.linkedblockingqueue;import  java.util.logging.level;import  java.util.logging.logger;public  class  producerconsumerpattern  {public  static  void  main(string  args[]){  //creating  shared  object  blockingqueue  sharedqueue  =  new  linkedblockingqueue();  //creating  producer  and  consumer  thread  thread  prodthread  =  new  thread(new  producer(sharedqueue));  thread  consthread  =  new  thread(new  consumer(sharedqueue));  //starting  producer  and  consumer  thread  prodthread.start();  consthread.start();}}//producer  class  in  javaclass  producer  implements  runnable  {private  final  blockingqueue  sharedqueue;public  producer(blockingqueue  sharedqueue)  {this.sharedqueue  =  sharedqueue;}@overridepublic  void  run()  {for(int  i=0;  i<10;  i++){try  {system.out.println(""produced:  ""  +  i);sharedqueue.put(i);}  catch  (interruptedexception  ex)  {logger.getlogger(producer.class.getname()).log(level.severe'  '  null'  '  ex);}}}}//consumer  class  in  javaclass  consumer  implements  runnable{private  final  blockingqueue  sharedqueue;public  consumer  (blockingqueue  sharedqueue)  {this.sharedqueue  =  sharedqueue;}@overridepublic  void  run()  {while(true){try  {system.out.println(""consumed:  ""+  sharedqueue.take());}  catch  (interruptedexception  ex)  {logger.getlogger(consumer.class.getname()).log(level.severe'  '  null'  '  ex);}}}}output:produced:  0produced:  1consumed:  0produced:  2consumed:  1produced:  3consumed:  2produced:  4consumed:  3produced:  5consumed:  4produced:  6consumed:  5produced:  7consumed:  6produced:  8consumed:  7produced:  9consumed:  8consumed:  9"  ,i  was  do  a  research  in  produc  and  consum  design  pattern  with  regard  to  thread  in  java  i  recent  explor  in  java  with  the  introduct  with  introduct  of  blockingqueu  data  structur  in  java  it  now  much  simpler  becaus  blockingqueu  provid  this  control  implicit  by  introduc  block  method  put  and  take  now  you  dont  requir  to  use  wait  and  notifi  to  communic  between  produc  and  consum  blockingqueu  put  method  will  block  if  queue  is  full  in  case  of  bound  queue  and  take  will  block  if  queue  is  empti  in  next  section  we  will  see  a  code  exampl  of  produc  consum  design  pattern  i  have  develop  the  below  program  but  pleas  also  let  me  know  the  old  style  approach  of  waut  and  notifi  i  want  to  develop  the  same  logic  with  old  style  approach  also  folk  pleas  advis  how  this  can  be  implement  in  classic  way  is  use  wait  and  notifi  method  to  communic  between  produc  and  consum  thread  and  block  each  of  them  on  individu  condit  like  full  queue  and  empti  queue  ,  simpleassignmentexpress       