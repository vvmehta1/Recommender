 question  ,  //tl;drcoef[0]  =  1;  coef[1]  =  1;  coef[2]  =  1;  coef[3]  =  1;base  =  2;  it  =  3;//results  in  1.875  instead  of  the  correct  0.9375public  static  double  frachorner(int[]  coef'  '  int  base'  '  int  it)  {if  (it  ==  0)  {return  coef[it];}return  ((float)1/base  *  frachorner(coef'  '  base'  '  it-1))  +  coef[it];}  ,i  am  tri  to  creat  a  recurs  method  that  use  horner  algorithm  to  convert  a  fraction  number  in  base  n  to  base  ive  search  here  and  all  over  but  couldnt  find  anywher  that  dealt  with  the  fraction  part  in  detail  as  a  head  up  im  pretti  weak  in  recurs  as  i  have  not  formal  learn  it  in  my  program  class  yet  but  have  been  assign  it  by  anoth  class  i  was  abl  to  make  a  method  that  handl  the  integ  part  of  the  number  just  not  the  fraction  part  i  feel  like  the  method  ive  written  is  fair  close  as  it  get  me  to  doubl  the  answer  for  my  test  figur  mayb  becaus  im  test  base  the  first  param  pass  is  an  int  array  fill  with  the  coeffici  im  not  too  concern  with  the  order  of  the  coeffici  as  im  make  all  the  coeffici  the  same  to  test  it  outth  second  param  is  the  base  the  third  param  is  initi  to  the  number  of  coeffici  minus  which  i  also  use  for  the  integ  part  method  i  tri  use  the  number  of  coeffici  but  that  step  out  of  the  arrayi  tri  divid  by  the  base  one  more  time  as  that  would  give  me  the  right  answer  but  it  doesnt  work  if  i  do  so  in  the  base  case  return  statement  or  at  the  end  of  the  final  return  statement  so  when  i  tri  to  convert  base  to  base  my  method  return  doubl  the  correct  answer  ofani  hint  would  be  appreci  ,  intdatatyp  simplevari  ifstat  equalexpress  returnstat  arrayel  floatdatatyp  explicittypecast  divideexpress  multiplyexpress  actualmethodparamet  simpleassignmentexpress 