 question  ,  "arrayblockingqueue;  executors.newfixedthreadpool(threadcount);;  take();  public  class  consumerworker  implements  runnable{private  blockingqueue<produced>  inputqueue;private  volatile  boolean  isrunning  =  true;public  consumerworker(blockingqueue<produced>  inputqueue)  {this.inputqueue  =  inputqueue;}@overridepublic  void  run()  {//worker  loop  keeps  taking  en  element  from  the  queue  as  long  as  the  producer  is  still  running  or  as  //long  as  the  queue  is  not  empty:while(isrunning  ||  !inputqueue.isempty())  {system.out.println(""consumer  ""+thread.currentthread().getname()+""  start"");try  {object  queueelement  =  inputqueue.take();//process  queueelement}  catch  (exception  e)  {e.printstacktrace();}}}//this  is  used  to  signal  from  the  main  thread  that  he  producer  has  finished  adding  stuff  to  the  queuepublic  void  setrunning(boolean  isrunning)  {this.isrunning  =  isrunning;};  isrunning;  public  class  consumerworker  implements  runnable{private  blockingqueue<produced>  inputqueue;private  final  static  produced  poison  =  new  produced(-1);  public  consumerworker(blockingqueue<produced>  inputqueue)  {this.inputqueue  =  inputqueue;}@overridepublic  void  run()  {//worker  loop  keeps  taking  en  element  from  the  queue  as  long  as  the  producer  is  still  running  or  as  //long  as  the  queue  is  not  empty:while(true)  {system.out.println(""consumer  ""+thread.currentthread().getname()+""  start"");try  {produced  queueelement  =  inputqueue.take();thread.sleep(new  random().nextint(100));if(queueelement==poison)  {break;}//process  queueelement}  catch  (exception  e)  {e.printstacktrace();}system.out.println(""consumer  ""+thread.currentthread().getname()+""  end"");}}//this  is  used  to  signal  from  the  main  thread  that  he  producer  has  finished  adding  stuff  to  the  queuepublic  void  stoprunning()  {try  {inputqueue.put(poison);}  catch  (interruptedexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}};  while(isrunning  ||  !inputqueue.isempty())"  ,i  have  a  singl  thread  produc  which  creat  some  task  object  which  are  then  ad  into  an  which  is  of  fix  size  i  also  start  a  multithread  consum  this  is  build  as  a  fix  thread  pool  i  then  submit  some  consumerwork  intanc  to  this  threadpool  each  consumerwork  have  a  reffer  to  the  abov  mention  arrayblockingqueu  instanceeach  such  worker  will  do  a  on  the  queue  and  deal  with  the  task  my  issu  is  what  the  best  way  to  have  a  worker  know  when  there  wont  be  ani  more  work  to  be  done  in  other  word  how  do  i  tell  the  worker  that  the  produc  has  finish  ad  to  the  queue  and  from  this  point  on  each  worker  should  stop  when  he  see  that  the  queue  is  empti  what  ive  got  now  is  a  setup  where  my  produc  is  initi  with  a  callback  which  is  trigger  when  he  finish  it  job  of  ad  stuff  to  the  queue  i  also  keep  a  list  of  all  the  consumerwork  ive  creat  and  submit  to  the  threadpool  when  the  produc  callback  tell  me  that  the  produc  is  done  i  can  tell  this  to  each  of  the  worker  at  this  point  they  should  simpli  keep  check  if  the  queue  is  not  empti  and  when  it  becom  empti  they  should  stop  thus  allow  me  to  grace  shutdown  the  executorservic  thread  pool  it  someth  like  this  the  problem  here  is  that  i  have  an  obvious  race  condit  where  sometim  the  produc  will  finish  signal  it  and  the  consumerwork  will  stop  befor  consum  everyth  in  the  queue  my  question  is  what  the  best  way  to  synchron  this  so  that  it  all  work  ok  should  i  synchron  the  whole  part  where  it  check  if  the  produc  is  run  plus  if  the  queue  is  empti  plus  take  someth  from  the  queue  in  one  block  on  the  queue  object  should  i  just  synchron  the  updat  of  the  boolean  on  the  consumerwork  instanc  ani  other  suggest  updat  here  the  work  implement  that  ive  end  up  use  this  was  inspir  heavili  by  johnvint  answer  below  with  onli  some  minor  modif  updat  due  to  vendhan  comment  thank  you  for  your  obeserv  you  are  right  the  first  snippet  of  code  in  this  question  has  amongst  other  issu  the  one  where  the  doesnt  realli  make  sens  in  my  actual  final  implement  of  this  i  do  someth  which  is  closer  to  your  suggest  of  replac  or  with  and  in  the  sens  that  each  worker  consum  now  onli  check  if  the  element  hes  got  from  the  list  is  a  poison  pill  and  if  so  stop  so  theoret  we  can  say  that  the  worker  has  to  be  run  and  the  queue  must  not  be  empti  ,    classdefinit  publicclassspecifi  implementsspecif  methodimplement  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  instancefield  simplevari  formalmethodparamet  constructordefinit  publicconstructorspecifi  instancefieldinvoc  thisrefer  methoddefinit     trycatchstat  javalangobject  simpleassignmentexpress  objectmethodinvoc     