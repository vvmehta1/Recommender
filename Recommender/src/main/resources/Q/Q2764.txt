 question  ,  "handler  mservicethreadhandler;serviceconnection  mserviceconnection;public  void  onstart()  {if  (!bindservice(new  intent(this'  '  mainservice.class)'  '  mserviceconnection'  'context.bind_auto_create))  {log.e(tag'  '  ""client  did  not  bind  to  service!"");}  super.onstart();}public  class  mylocalserviceconnection  implements  serviceconnection  {@overridepublic  void  onserviceconnected(componentname  name'  '  ibinder  service)  {localbinder  binder  =  (localbinder)  service;mservice  =  (mainservice)  binder.getservice();//  the  handler  of  the  service  is  actually  a  handler  of  a  thread//  within  the  service'  '  and  is  set  automatically  within  the  binding//  activity  when  binding  to  the  service.  that  way  you  have  a  direct//  ""connection""  with  the  message  queue  of  the  thread  instead  of//  a  message  queue  in  the  service  itself  (main  thread  of  service)mservicethreadhandler  =  mservice.getservicehandler();if  (mservicethreadhandler  ==  null)  {log.e(tag'  '  ""service  handler  is  null"");}mboundedtoservice  =  true;}@overridepublic  void  onservicedisconnected(componentname  name)  {mservicethreadhandler  =  null;mboundedtoservice  =  false;}};  private  handlerthread  mservicethread  =  new  myservicethread();public  handler  getservicehandler()  {return  new  handler(mservicethread.getlooper());};  public  class  myservice  extends  service  {private  myhandlerthread  servicethread  =  new  myhandlerthread(""servicethread"");servicethread.start();public  handler  getservicehandler()  {//  hand  out  the  same  handler  of  the  service  thread  for  using  it  in  an  activity!//  servicethread.getlooper()  is  the  current  looper  of  the  thread//  servicethread  is  the  'this'  which  handles  the  messages  (see  myhandlerthread)return  new  handler(servicethread.getlooper()'  '  servicethread);  }//  do  stuff  in  service}public  class  myhandlerthread  extends  handlerthread  implements  android.os.handler.callback  {public  myhandlerthread(string  name)  {super(name);}public  myhandlerthread(string  name'  '  int  priority)  {super(name'  '  priority);}@overridepublic  boolean  handlemessage(message  msg)  {//  todo  define  your  own  message  handling  here.return  false;}}"  ,situat  problem  i  dont  what  to  use  a  messeng  within  the  servic  i  want  to  direct  communic  with  the  thread  in  the  servic  from  the  activ  sideth  activ  get  the  handler  of  the  thread  itself  in  the  servic  by  call  someth  like  thisact  code  servic  code  doe  the  return  a  new  handler  or  the  same  handler  within  the  mservicethreadupd  the  servic  code  with  the  servicethread  which  receiv  the  messag  correct  ,  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  implementsspecif  methodimplement  formalmethodparamet  intdatatyp  simplevari  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp 