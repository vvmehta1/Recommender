 question  ,  "public  static  void  main(  string[  ]  args  )  throws  exception  {for  (  int  i  =  0;  i  <  1000;  i++  )  {container[  ]  containers  =  getscriptcontainers(  );script[  ]  scripts  =  compilescripts(  containers  );for  (  script  s  :  scripts  )  s.begin(  );thread.sleep(  1000  );}};  @deprecatedprivate  static  container[  ]  getscriptcontainers(  )  throws  ioexception  {file  root  =  new  file(  ""c:\scripts\""  );file[  ]  files  =  root.listfiles(  );list<  container  >  containers  =  new  arraylist<>(  );for  (  file  f  :  files  )  {string[  ]  tokens  =  f.getname(  ).split(  ""\.(?=[^\.]+$)""  );if  (  f.isfile(  )  &&  tokens[  1  ].equals(  ""java""  )  )  {byte[  ]  filebytes  =  files.readallbytes(  paths.get(  f.getabsolutepath(  )  )  );containers.add(  new  container(  tokens[  0  ]'  '  filebytes  )  );}}return  containers.toarray(  new  container[  0  ]  );  };  public  class  container  {private  string  classname;private  byte[  ]  classfile;public  container(  string  name'  '  byte[  ]  file  )  {classname  =  name;classfile  =  file;}public  string  getclassname(  )  {return  classname;}public  byte[  ]  getclassfile(  )  {return  classfile;}};  private  static  script[  ]  compilescripts(  container[  ]  containers  )  throws  instantiationexception'  '  illegalaccessexception'  '  classnotfoundexception  {list<  classfile  >  sourcescripts  =  new  arraylist<>(  );for  (  container  c  :  containers  )sourcescripts.add(  new  classfile(  c.getclassname(  )'  '  c.getclassfile(  )  )  );javacompiler  compiler  =  toolprovider.getsystemjavacompiler(  );javafilemanager  manager  =  new  memoryfilemanager(  compiler.getstandardfilemanager(  null'  '  null'  '  null  )  );compiler.gettask(  null'  '  manager'  '  null'  '  null'  '  null'  '  sourcescripts  ).call(  );list<  script  >  compiledscripts  =  new  arraylist<>(  );for  (  container  c  :  containers  )compiledscripts.add(  (  script  )manager.getclassloader(  null  ).loadclass(  c.getclassname(  )  ).newinstance(  )  );return  (  script[  ]  )compiledscripts.toarray(  new  script[  0  ]  );};  public  class  memoryfilemanager  extends  forwardingjavafilemanager<  javafilemanager  >  {private  hashmap<  string'  '  classfile  >  classes  =  new  hashmap<>(  );public  memoryfilemanager(  standardjavafilemanager  standardmanager  )  {super(  standardmanager  );}@overridepublic  classloader  getclassloader(  location  location  )  {return  new  secureclassloader(  )  {@overrideprotected  class<  ?  >  findclass(  string  classname  )  throws  classnotfoundexception  {if  (  classes.containskey(  classname  )  )  {byte[  ]  classfile  =  classes.get(  classname  ).getclassbytes(  );return  super.defineclass(  classname'  '  classfile'  '  0'  '  classfile.length  );}  else  throw  new  classnotfoundexception(  );}};}@overridepublic  classfile  getjavafileforoutput(  location  location'  '  string  classname'  '  kind  kind'  '  fileobject  sibling  )  {if  (  classes.containskey(  classname  )  )  return  classes.get(  classname  );else  {classfile  classobject  =  new  classfile(  classname'  '  kind  );classes.put(  classname'  '  classobject  );return  classobject;}}};  public  class  classfile  extends  simplejavafileobject  {private  byte[  ]  source;protected  final  bytearrayoutputstream  compiled  =  new  bytearrayoutputstream(  );public  classfile(  string  classname'  '  byte[  ]  contentbytes  )  {super(  uri.create(  ""string:///""  +  classname.replace(  '.''  '  '/'  )  +  kind.source.extension  )'  '  kind.source  );source  =  contentbytes;}public  classfile(  string  classname'  '  charsequence  contentcharsequence  )  throws  unsupportedencodingexception  {super(  uri.create(  ""string:///""  +  classname.replace(  '.''  '  '/'  )  +  kind.source.extension  )'  '  kind.source  );source  =  (  (  string  )contentcharsequence  ).getbytes(  ""utf-8""  );}public  classfile(  string  classname'  '  kind  kind  )  {super(  uri.create(  ""string:///""  +  classname.replace(  '.''  '  '/'  )  +  kind.extension  )'  '  kind  );}public  byte[  ]  getclassbytes(  )  {return  compiled.tobytearray(  );}public  byte[  ]  getsourcebytes(  )  {return  source;}@overridepublic  charsequence  getcharcontent(  boolean  ignoreencodingerrors  )  throws  unsupportedencodingexception  {return  new  string(  source'  '  ""utf-8""  );}@overridepublic  outputstream  openoutputstream(  )  {return  compiled;}};  public  interface  script  {public  void  begin(  )  throws  exception;}"  ,i  am  in  the  process  of  creat  a  java  applic  that  will  be  run  for  long  period  of  time  which  requir  updat  function  without  shut  down  ive  decid  to  provid  this  updat  function  by  load  it  in  the  form  of  java  file  pull  as  a  byte  array  from  a  databas  which  are  compil  in  memori  and  instanti  if  you  have  a  better  way  i  am  all  ear  the  problem  i  have  run  in  to  is  that  memori  footprint  increas  slight  with  each  cycl  of  load  these  script  when  i  do  some  test  in  an  artifici  environmentthi  is  actual  my  first  time  do  someth  like  this  or  much  at  all  with  java  i  had  accomplish  someth  like  this  befor  in  c  with  load  and  unload  cs  file  and  also  had  memori  footprint  issu  there  to  solv  that  i  load  them  into  a  separ  appdomain  and  when  i  recompil  the  file  i  just  unload  that  appdomain  and  creat  a  new  one  this  is  the  entri  method  that  i  am  use  to  simul  the  memori  footprint  after  long  period  of  use  mani  recompil  cycl  i  run  this  for  a  short  period  of  time  and  it  quick  eat  up  mb  this  is  onli  with  two  dummi  script  in  the  temporari  directori  this  is  the  temporari  method  i  am  use  to  collect  a  list  of  the  script  file  dure  product  these  will  actual  be  load  as  byte  array  with  some  other  inform  like  the  class  name  from  a  databas  this  is  the  simpl  contain  class  this  is  the  actual  method  that  compil  the  java  file  and  instanti  them  into  script  object  this  is  the  custom  implement  that  i  creat  for  the  compil  so  that  i  can  store  the  output  in  memori  rather  than  in  physic  class  file  this  is  my  multipurpos  implement  that  i  use  to  store  the  sourc  java  file  and  the  compil  class  file  in  memori  and  last  the  simpl  interfac  im  still  kind  of  new  when  it  come  to  program  and  i  have  use  the  stack  for  a  while  to  find  some  solut  to  small  problem  i  have  encount  this  is  my  first  time  ask  a  question  so  i  apolog  if  i  have  includ  too  much  inform  or  if  this  is  too  long  i  just  want  to  make  sure  i  was  thorough  ,  stringvari  stringdatatyp  privatefieldspecifi  instancefield  simplevari  arraydatatyp  bytedatatyp  formalmethodparamet  constructordefinit  publicconstructorspecifi  simpleassignmentexpress  returnstat  privatemethodspecifi  staticmethodspecifi  throwsspecif  objectmethodinvoc  objectcreationstat  constructorcal  actualmethodparamet  extendsspecif  superclassconstructorcal  javalangstringlength  objectvari  protectedfieldspecifi  finalfieldspecifi  instancefieldinitializationstat  explicittypecast  stringliter  subtractexpress  interfacedefinit  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp 