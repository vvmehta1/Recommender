 question  ,  public  void  add(t  t)  {  node  curr  =  head;curr.lock.lock();while  (curr.next  !=  null)  {//  invariant:  curr  is  locked  //  invariant:  curr.data  <  tcurr.next.lock.lock();  if  (t.compareto(curr.next.data)  <=  0)  {break;  }node  tmp  =  curr.next;curr.lock.unlock();curr  =  tmp;}//  curr  is  acquiredcurr.next  =  new  node(curr.next'  '  t);if  (curr.next.next  !=  null)  {//  old  curr's  next  is  acquiredcurr.next.next.lock.unlock();}curr.lock.unlock();};  public  void  add(t  t)  {lock.lock();node  curr  =  head;while  (curr.next  !=  null)  {if  (t.compareto(curr.next.data)  <=  0)  {break;}curr  =  curr.next;}curr.next  =  new  node(curr.next'  '  t);lock.unlock();  };  fine  grained:worked  1  spent  1080  msworked  2  spent  1230  msworked  0  spent  1250  msworked  3  spent  1260  mswall  time:  1620  mscoarse  grained:worked  1  spent  190  msworked  2  spent  270  msworked  3  spent  410  msworked  0  spent  280  mswall  time:  1298  ms;  .lock();  .unlock()  ,im  tri  to  write  a  i  wrote  two  version  coars  grain  synchron  and  fine  grain  synchron  here  are  the  two  implement  fine  grain  coars  grain  i  time  the  two  version  on  thread  on  logic  cpu  core  insert  integ  the  time  per  thread  show  cpu  time  ie  it  doe  not  includ  wait  time  my  initi  thought  was  that  and  are  the  problem  but  i  profil  the  implement  and  togeth  they  consum  onli  of  the  time  my  second  guess  is  that  the  fine  grain  solut  has  more  cach  miss  but  i  doubt  it  becaus  a  singl  link  list  unlik  an  array  is  inher  prone  to  cach  miss  ani  idea  whi  i  dont  get  the  expect  parallel  ,  objectmethodinvoc  instancefield  simplevari          returnstat  addexpress  simpleassignmentexpress  objectvari  simplevari  longdatatyp     simpleassignmentexpress  modulusexpress  actualmethodparamet  divideexpress  instancefield  simplevari  