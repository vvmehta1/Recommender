 question  ,  "public  enum  myenum{  a'  'b'  'c'  'd  };  public  class  businesslogic  {  private  myenum  currentselection;  private  int  propertyx;  private  int  propertyy;public  void  operation1(){  switch(currentselection){  case  a:  {alter  propertyx  this  way;  break;}  case  b:  {alter  propertyy  this  way;  break;}  case  c:  {alter  propertyx  that  way;  break;}  case  d:  {alter  propertyy  that  way;  break;}  }}public  void  operation2(){  switch(currentselection){  case  a:  {currentselection=myenum.b;  break;}  case  b:  {currentselection=myenum.c;  break;}  ....etc  }}public  void  operation3(){  switch(currentselection){  case  a:  {currentselection=myenum.d;  break;}  case  b:  {currentselection=myenum.a;  break;}  ....etc  }}};  public  interface  command  {void  execute();;  public  class  operation1  implements  command  {private  void  dooperation1(){  switch(currentselection){  ..all  the  cases  here  }}public  void  execute()  {  dooperation1();}}"  ,an  enum  structur  declar  in  it  own  class  is  a  member  variabl  to  the  busi  logic  class  that  enum  basic  repres  the  state  of  that  other  class  although  i  have  revisit  the  issu  sever  time  replac  or  get  rid  of  those  case  statement  prove  quit  frustrat  to  me  sever  busi  logic  method  simpl  iter  over  the  enum  and  chang  the  state  of  that  class  by  assign  anoth  valu  of  the  same  enum  and  other  properti  the  busi  logic  class  has  this  enum  as  a  member  anoth  client  class  will  instati  the  busi  logic  class  initi  it  properti  and  then  use  it  oper  method  what  i  have  success  done  with  help  from  so  is  encapsul  the  oper  method  into  a  command  pattern  structur  so  i  can  call  the  oper  without  ani  case  statement  i  guess  my  troubl  is  how  to  encapsul  the  case  statement  in  my  busi  logic  class  i  suspect  that  i  would  need  polymorph  and  the  appropri  data  structur  the  refactor  expert  suggest  each  case  statement  should  be  an  implement  of  a  common  interfac  but  if  i  have  method  iter  over  a  member  enum  that  mean  id  probabl  need  interfac  with  implement  each  give  me  class  plus  interfac  wouldnt  that  be  a  class  overload  the  logic  is  work  fine  with  those  method  as  they  are  but  the  issu  are  the  repeat  switchcas  statement  is  there  a  way  to  refactor  those  switch  statement  but  avoid  a  myriad  of  other  class  in  the  name  of  polymorph  would  it  be  possibl  to  factor  out  the  iterateovertheenum  part  or  just  the  case  where  the  logic  is  should  be  refactor  mani  thank  in  advanc  as  a  first  step  i  remov  those  method  complet  my  have  them  implement  a  simpl  interfac  so  it  oper  method  implement  the  command  interfac  as  i  see  this  it  will  buy  my  a  cleaner  busi  logic  class  but  the  trail  of  the  switch  case  will  remain  right  ,  simpleassignmentexpress  classdefinit  publicclassspecifi  privatefieldspecifi  instancefield  simplevari  intdatatyp  methoddefinit  publicmethodspecifi  voiddatatyp  switchstat  caseclaus  objectvari  interfacedefinit  publicinterfacespecifi  abstractmethoddefinit  implementsspecif  methodimplement  privatemethodspecifi       