 question  ,  "synchronized(token1)  {synchronized(token2)  {token1.wait();token2.wait();  //won't  run  until  token1  is  returnedsystem.out.println(""i  got  both  tokens  back"");}}"  ,ive  just  been  mess  around  with  thread  in  java  to  get  my  head  around  them  it  seem  like  the  best  way  to  do  so  and  now  understand  what  go  on  with  synchron  wait  and  notifi  im  curious  about  whether  there  a  way  to  wait  on  two  resourc  at  onc  i  think  the  follow  wont  quit  do  what  im  think  of  in  this  veri  contriv  case  token  will  be  held  until  token  is  return  then  token  will  be  held  until  token  is  return  the  goal  is  to  releas  both  token  and  token  then  resum  when  both  are  avail  note  that  move  the  tokenwait  outsid  the  inner  synchron  loop  is  not  what  im  get  at  a  loop  check  whether  both  are  avail  might  be  more  appropri  to  achiev  this  behaviour  would  this  be  get  near  the  idea  of  doublecheck  lock  but  would  use  up  extra  resourc  im  not  after  a  definit  solut  sinc  this  is  just  to  satisfi  my  curiositylet  just  for  the  sake  of  argument  say  that  the  two  token  here  repres  two  distinct  resourc  that  the  thread  must  use  at  the  same  time  and  that  some  other  thread  will  need  both  at  the  same  time  , 