 question  ,  public  object  get()  {lock.lock();try  {if(  items.size()  <  1  )hasitems.await();object  poppedvalue  =  items.getlast();items.removelast();hasspace.signal();return  poppedvalue;  }  catch  (interruptedexception  e)  {e.printstacktrace();return  null;}  finally  {lock.unlock();}}public  void  put(object  item)  {lock.lock();try  {if(  items.size()  >=  capacity  )hasspace.await();items.addfirst(item);hasitems.signal();return;}  catch  (interruptedexception  e)  {e.printstacktrace();}  finally  {lock.unlock();}}  ,i  have  been  play  with  my  own  version  of  this  use  if  and  all  seem  to  be  work  fineof  cours  this  will  break  down  horribl  if  signalal  is  use  instead  of  signal  but  if  onli  one  thread  at  a  time  is  notifi  how  can  this  go  wrong  their  code  check  out  the  put  and  take  method  a  simpler  and  moretothepointimplement  can  be  seen  at  the  top  of  therelev  portion  of  my  implement  below  ps  i  know  that  general  particular  in  lib  class  like  this  one  should  let  the  except  percol  up  ,  objectmethodinvoc  trycatchstat  ifstat  lessexpress  javalangobject  simpleassignmentexpress  returnstat  simplevari  objectvari  greaterequalexpress  actualmethodparamet    objectvari  simplevari  objectmethodinvoc        