 question  ,  "math.random();  callable;  import  java.util.*;import  java.util.concurrent.*;public  class  maintest  {public  static  void  main(string[]args)  throws  exception  {new  maintest().start();;}final  list<worker>  workermulti  =  new  arraylist<worker>();final  list<worker>  workersingle  =  new  arraylist<worker>();final  int  count=10000000;public  void  start()  throws  exception  {int  n=2;workersingle.add(new  worker(1));for  (int  i=0;i<n;i++)  {//  worker  will  only  do  count/n  jobworkermulti.add(new  worker(n));}executorservice  servicesingle  =  executors.newsinglethreadexecutor();executorservice  servicemulti  =  executors.newfixedthreadpool(n);long  s'  'e;int  tests=10;list<long>  simple  =  new  arraylist<long>();list<long>  single  =  new  arraylist<long>();list<long>  multi  =  new  arraylist<long>();for  (int  i=0;i<tests;i++)  {//  simples  =  system.currenttimemillis();simple();e  =  system.currenttimemillis();simple.add(e-s);//  single  threads  =  system.currenttimemillis();  servicesingle.invokeall(workersingle);  //  single  threade  =  system.currenttimemillis();single.add(e-s);//  multi  threads  =  system.currenttimemillis();  servicemulti.invokeall(workermulti);e  =  system.currenttimemillis();multi.add(e-s);}long  avgsimple=sum(simple)/tests;long  avgsingle=sum(single)/tests;long  avgmulti=sum(multi)/tests;system.out.println(""average  simple:  ""+avgsimple+""  ms"");system.out.println(""average  single  thread:  ""+avgsingle+""  ms"");system.out.println(""average  multi  thread:  ""+avgmulti+""  ms"");servicesingle.shutdown();servicemulti.shutdown();}long  sum(list<long>  list)  {long  sum=0;for  (long  l  :  list)  {sum+=l;}return  sum;}private  void  simple()  {for  (int  i=0;i<count;i++){math.random();}}class  worker  implements  callable<void>  {int  n;public  worker(int  n)  {this.n=n;}@overridepublic  void  call()  throws  exception  {//  divide  count  with  n  to  perform  batch  executionfor  (int  i=0;i<(count/n);i++)  {math.random();}return  null;}}};  average  simple:  920  msaverage  single  thread:  1034  msaverage  multi  thread:  1393  ms;  average  simple:  928  msaverage  single  thread:  1046  msaverage  multi  thread:  642  ms"  ,i  am  tri  to  execut  a  simpl  calcul  it  call  time  surpris  run  it  in  simpl  method  perform  much  faster  than  use  executorservic  i  have  read  anoth  thread  at  and  tri  to  follow  the  answer  by  execut  the  use  batch  but  the  perform  is  still  bad  how  do  i  improv  the  perform  base  on  my  current  code  the  output  for  this  codeedit  perform  suffer  due  to  mathrandom  be  a  synchronis  method  after  chang  mathrandom  with  new  random  object  for  each  thread  the  perform  improv  the  output  for  the  new  code  after  replac  mathrandom  with  random  for  each  thread  ,       