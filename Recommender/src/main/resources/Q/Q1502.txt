 question  ,  "execute();  public  interface  command  {void  execute();}public  class  commanda  implements  command{//implements  execute()  method}private  map  mymap=  new  hashmap();mymap.put(""a""'  '  new  commanda);mymap.put(""b""'  '  new  commandb);mymap.put(""c""'  '  new  commandc);mymap.put(""d""'  '  new  commandd);;  switch(instructionfromstring){case  'a':{mymap.get(""a"").execute();  break;}case  'b':{mymap.get(""b"").execute();  break;}case  'c':{mymap.get(""c"").execute();  break;}case  'd':{mymap.get(""d"").execute();  break;}"  ,continu  on  previous  question  and  i  implement  a  basic  command  pattern  creat  my  command  class  and  code  to  an  interfac  so  when  ani  command  is  use  to  call  the  methodhowev  i  am  still  find  myself  unabl  to  shake  those  case  statement  i  am  read  each  charact  from  a  masterdecis  string  which  is  made  up  of  random  repeat  charact  a  b  c  or  d  and  then  i  retriev  the  relat  implement  of  the  command  from  a  map  and  call  it  execut  method  my  design  was  like  this  but  then  when  i  read  each  instruct  again  i  have  to  resort  to  case  statement  obvious  somewher  along  the  way  i  manag  to  defeat  the  advantag  of  polymorph  against  the  case  statement  could  it  be  the  kind  of  data  structur  i  select  to  store  my  command  it  can  veri  well  be  a  perman  data  structur  to  just  pull  those  command  fromanoth  thing  that  come  to  mind  is  the  keyvalu  name  that  i  use  in  my  map  the  way  i  tri  to  conceptu  link  each  store  command  to  it  associ  instruct  ie  implement  of  command  a  is  store  on  the  map  with  key  a  so  it  can  match  to  the  correspond  instruct  a  that  seem  to  me  a  bit  unlik  though  ani  hint  or  further  advic  about  my  next  move  to  remov  those  case  statement  onc  and  for  all  would  be  high  appreci  mani  thank  in  advanc  ,  objectcreationstat  constructorcal  objectmethodinvoc    simplevari  stringvari  stringdatatyp  objectvari  objectmethodinvoc  actualmethodparamet  formalmethodparamet  returnstat     