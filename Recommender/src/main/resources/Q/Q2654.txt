 question  ,  private  collection  global  =  new  hashset();  //  start  threading  after  thisvoid  allupdatesgothroughhere(object  exampleoperand)  {//  my  hypothesis  is  that  this  prevents  operations  in  the  block  being  re-orderedsynchronized(global)  {collection  copy  =  new  hashset(global);copy.remove(exampleoperand);//  given  my  hypothesis'  '  we  should  have  a  fully  constructed  object  here.  so  a  //  reader  will  either  get  the  old  or  the  new  collection'  '  but  never  an  //  inconsistent  one.global  =  copy;}}//  do  multithreaded  reads  here.  all  reads  are  done  through  a  reference  copy  like://  collection  copy  =  global;//  for  (object  elm:  copy)  {...//  so  the  global  reference  being  updated  half  way  through  should  have  no  impact  ,if  i  have  an  unsynchron  java  collect  in  a  multithread  environ  and  i  dont  want  to  forc  reader  of  the  collect  to  synchron  is  a  solut  where  i  synchron  the  writer  and  use  the  atom  of  refer  assign  feasibl  someth  like  roll  your  own  solut  seem  to  often  fail  in  these  type  of  situat  so  id  be  interest  in  know  other  pattern  collect  or  librari  i  could  use  to  prevent  object  creation  and  block  for  my  data  consum  the  reason  be  a  larg  proport  of  time  spent  in  read  compar  to  write  combin  with  the  risk  of  introduc  deadlocksedit  a  lot  of  good  inform  in  sever  of  the  answer  and  comment  some  import  point  ,          simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  objectcreationstat  constructorcal     