 question  ,  "public  void  sendmsg(final  botmessage  msg)  {try  {future  task;synchronized(msgqueue)  {task  =  msgqueue.submit(new  runnable()  {public  void  run()  {sendrawline(""privmsg  ""  +  msg.channel  +  ""  :""  +  msg.message);}});//add  a  seperate  wait  so  next  runnable  doesn't  get  executed  yet  but//above  one  unblocksmsgqueue.submit(new  runnable()  {public  void  run()  {try  {thread.sleep(controller.msgwait);}  catch  (interruptedexception  e)  {log.error(""wait  to  send  message  interupted""'  '  e);}}});}//block  until  donetask.get();}  catch  (executionexception  e)  {log.error(""couldn't  schedule  send  message  to  be  executed""'  '  e);}  catch  (interruptedexception  e)  {log.error(""wait  to  send  message  interupted""'  '  e);}}"  ,i  am  tri  to  simpli  make  a  block  thread  queue  where  when  a  task  is  submit  the  method  wait  until  it  finish  execut  the  hard  part  though  is  the  wait  here  my  am  code  that  i  think  is  overkil  as  you  can  see  there  alot  of  extra  code  there  just  to  make  it  wait  second  between  task  is  there  an  easier  and  cleaner  solut  out  there  or  is  this  it  ,  instancefield  simplevari  objectmethodinvoc  actualmethodparamet  stringliter  stringdatatyp  objectvari       objectmethodinvoc  simpleassignmentexpress  objectcreationstat  constructorcal  instancefield  simplevari  actualmethodparamet  stringliter  stringdatatyp  objectvari     simpleassignmentexpress  formalmethodparamet  protectedmethodspecifi  instancefield  simplevari  objectmethodinvoc  actualmethodparamet  stringliter  stringdatatyp  objectvari        instancefield  simplevari  objectmethodinvoc  actualmethodparamet  stringliter  stringdatatyp  objectvari     