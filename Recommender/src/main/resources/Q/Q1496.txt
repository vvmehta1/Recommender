 question  ,  "public  class  greeter  {public  void  greetme()  {system.out.println(""hello"");}public  void  greetme(string  name)  {system.out.println(""hello  ""  +  name);}public  void  wishluck()  {system.out.println(""good  luck"");}};  greetme()'  '  greetme(string  name)'  '  wishluck();  public  class  fancygreeter  extends  greeter  {public  void  greetme()  {system.out.println(""***********"");system.out.println(""*hello*"");system.out.println(""***********"");}};  greeter  greeter  =  greeterfactory.getrandomgreeter();greeter.greetme();;  getrandomgreeter();  greeter;  greeter;  fancygreeter;  graphicalgreeter;  getrandomgreeter();  new;  greeter"  ,i  do  know  the  syntact  differ  between  overrid  and  overload  and  i  also  know  that  overrid  is  runtim  polymorph  and  overload  is  compiletim  polymorph  but  my  question  is  is  overload  is  realli  compiletim  polymorph  is  the  method  call  realli  solv  at  compil  time  to  clarifi  my  point  let  consid  an  exampl  class  sinc  all  of  the  method  are  public  they  all  can  be  overrideninclud  overload  one  right  for  exampl  now  consid  the  follow  snippet  the  method  return  a  random  object  it  may  either  return  an  object  of  or  ani  of  it  subclass  like  or  or  ani  other  one  the  will  creat  the  object  either  use  or  dynam  load  the  class  file  and  creat  object  use  reflectioni  think  it  is  possibl  with  reflect  or  ani  other  way  that  is  possibl  all  of  these  method  of  may  or  may  not  be  overriden  in  subclass  so  the  compil  has  no  way  to  know  whether  a  particular  methodoverload  or  not  is  overriden  right  also  wikipedia  say  on  sinc  virtual  function  are  resolv  at  runtim  use  dynam  method  dispatch  and  sinc  all  non  privat  non  final  method  are  virtualwheth  overload  or  not  they  must  be  resolv  at  runtim  right  then  how  can  overload  still  be  resolv  at  compiletim  or  is  there  anyth  that  i  misunderstood  or  am  i  miss  ,  actualmethodparamet  classdefinit  publicclassspecifi  extendsspecif  methoddefinit  publicmethodspecifi  voiddatatyp  instancefield  instancefieldinitializationstat  simpleassignmentexpress  objectmethodinvoc       actualmethodparamet  explicittypecast  simpleassignmentexpress     