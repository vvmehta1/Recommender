 question  ,  getfield;  putfield;  dup;  load;  store;  <init>;  <init>;  super();  this();  <init>;  main();  <init>;  <init>;  super();  <init>;  main();  <init>;  super()  ,i  am  write  a  bytecod  instrument  right  now  i  am  tri  to  find  out  how  to  do  that  in  the  presenc  of  object  i  would  like  some  clarif  on  two  line  i  read  in  the  jvms  section  my  question  is  what  doe  use  mean  here  im  guess  that  it  mean  pass  it  as  a  method  attribut  call  and  on  it  or  call  ani  instanc  method  on  it  are  their  other  forbidden  use  and  i  believ  that  it  follow  that  other  instruct  such  as  and  are  allow  which  mean  that  in  an  method  getfield  and  putfield  are  allow  befor  anoth  is  call  howev  in  java  do  ani  oper  on  an  instanc  field  befor  a  call  to  or  result  in  a  compil  error  could  someon  clarifi  this  i  have  one  more  question  when  doe  an  object  refer  becom  initi  and  henc  readi  to  be  freeli  use  from  read  the  jvms  i  came  up  with  the  answer  that  whether  an  object  is  initi  or  not  is  up  to  each  method  at  a  certain  point  in  time  the  object  can  be  initi  for  a  method  but  not  for  the  other  specif  an  object  becom  initi  for  a  method  when  call  by  that  method  return  for  exampl  consid  that  the  method  creat  an  object  and  call  which  then  call  the  superclasss  after  return  from  the  object  is  now  consid  initi  by  but  is  not  yet  initi  for  doe  this  mean  in  after  i  can  pass  the  object  as  a  paramet  to  a  method  even  befor  return  from  to  main  could  someon  confirm  that  this  whole  analysi  is  true  thank  you  for  your  timep  i  have  actual  post  the  same  question  to  the  sun  forum  but  with  on  respons  i  hope  ill  have  more  luck  here  thank  you  first  thank  you  for  your  answer  and  time  although  i  didnt  get  a  clearcut  answer  i  had  mani  question  and  some  of  them  were  a  bit  vagu  your  answer  and  exampl  and  the  subsequ  experi  were  extrem  use  for  me  in  understand  more  deepli  how  the  jvm  work  the  main  thing  i  discov  is  that  the  verifi  behavior  differ  with  differ  implement  and  version  which  make  the  job  of  bytecod  manipul  much  more  complic  the  problem  lie  in  either  a  nonconform  to  the  jvms  or  a  lack  of  document  from  the  verifi  develop  or  the  jvms  has  some  subtl  vagu  in  the  verifi  area  one  last  thing  so  rock  i  post  the  same  question  in  the  offici  sun  jvm  specif  forum  and  i  still  got  no  answer  till  now  ,  objectvari  simplevari    simpleassignmentexpress  intdatatyp  simplevari     stringliter  stringdatatyp  simpleassignmentexpress  divideexpress  objectmethodinvoc  actualmethodparamet  classdefinit  publicclassspecifi  formalmethodparamet  methoddefinit  publicmethodspecifi  staticmethodspecifi  voiddatatyp  objectcreationstat  constructorcal  javalangsystemoutprintln  