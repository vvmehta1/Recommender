 question  ,  "public  class  cardgame{  static  player[]  players;  static  int  handsize;  static  queue<card>[]  playingdeckarray;public  static  void  main(string[]  args){scanner  reader  =  new  scanner(system.in);system.out.println(  ""hello'  '  how  many  players  would  you  like""  );int  playersnum  =  integer.parseint(checks.userinputcheck(  ""\d""  ));system.out.println(  ""how  many  cards  should  each  player  begin  with""  );int  handsize  =  integer.parseint(checks.userinputcheck(  ""\d""  ));system.out.println(  ""which  strategy  would  you  like  to  use  1  or  2""  );int  strategy  =  integer.parseint(checks.userinputcheck(  ""[12]$""  ));logger.createdeck(  playersnum'  '  handsize  );makeplayers(  playersnum'  '  handsize'  '  strategy  );makeplayingdecks(  playersnum  );dealinitialhand(  playersnum'  '  players'  '  handsize  );makeplayeroutputs();for  (  int  i  =  0;  i  <  players.length;  i++){  loginitialhand(players[i]);}cardgame  cg  =  new  cardgame();cg.startpausethread();for  (  int  i  =  0;  i  <  players.length;  i++){new  thread(players[i]).start();}  }  public  void  startpausethread(){  thread  add  =  new  thread(  pauseinputthread  );  add.start();}thread  pauseinputthread  =  new  thread(){  public  void  run(){  int  i  =  0;  for(;;){  system.out.println(""i'm  still  here""  );  scanner  reader  =  new  scanner(system.in);  string  result  =  checks.userinputcheck(  ""[pprr]$""  );  i++;  system.out.println(i);}  }};};  public  class  player  implements  runnable{card[]  hand;string  playername;int  strategychosen;public  void  run(){system.out.println(  ""les  do  dis""  );}private  player(){}public  player(  int  strategy'  '  int  cardsinhand'  '  int  playernumber  ){hand  =  new  card[cardsinhand];strategychosen  =  strategy;playername  =  ""player  ""  +  playernumber;}public  string  getplayername(){return  playername;}public  void  fillhand(){  for  (  int  i  =  0;  i  <  hand.length;  i++){hand[i]  =  new  card(0);  }}public  void  sethand(  int  value'  '  int  index  ){hand[index].setcardvalue(  value  );}public  void  seehand(){for  (  int  i  =  0;  i  <  hand.length;  i++){system.out.println(  hand[i].getcardvalue()  );}}public  string  gethand(){string  result  =  """";for  (  int  i  =  0;  i  <  hand.length;  i++  ){result  =  result  +hand[i].getcardvalue()  +  ""  ""  ;}  return  result;}public  int  gethandvalue(  card  card  ){return  card.getcardvalue();}"  ,i  was  wonder  if  someon  coul  help  me  on  how  to  implement  a  thread  which  run  infinit  in  the  background  until  the  user  press  p  at  which  point  it  paus  the  other  thread  and  upon  press  r  resum  other  thread  this  is  some  of  the  code  some  of  the  main  object  the  player  object  which  are  the  thread  to  be  paus  the  player  will  be  play  a  game  where  they  draw  and  discard  object  from  array  but  the  user  should  be  abl  to  paus  and  resum  the  programm  at  ani  point  dure  the  game  i  just  dont  quit  understand  how  to  go  about  that  use  event  and  listnershelp  would  be  appreci  thank  you  ,  objectvari  simplevari  actualmethodparamet  stringliter  stringdatatyp  intdatatyp  simpleassignmentexpress  javalangintegerparseint  objectmethodinvoc  javalangsystemoutprintln  arrayel  implementsspecif  methodimplement  arraydatatyp  instancefield  stringvari  constructordefinit  privateconstructorspecifi  formalmethodparamet  publicconstructorspecifi  stringaddit  returnstat  forstat  lessexpress  arraylength  postincrementexpress  objectcreationstat  constructorcal  stringinitializationstat  addexpress    classdefinit  publicclassspecifi  extendsspecif  privatefieldspecifi  volatilefieldspecifi  instancefield  instancefieldinitializationstat  booleandatatyp  simpleassignmentexpress  true  fals  methoddefinit  publicmethodspecifi  voiddatatyp  instancefieldinvoc  thisrefer  formalmethodparamet  