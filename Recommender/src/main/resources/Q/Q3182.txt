 question  ,  "import  java.awt.*;import  java.awt.event.*;import  java.awt.image.bufferedimage;import  java.io.ioexception;import  java.net.*;import  java.util.hashmap;import  java.util.map;import  javax.imageio.imageio;import  javax.swing.*;public  class  moveicon  extends  jpanel  {private  static  final  long  serialversionuid  =  1l;private  static  final  string  image_path  =  ""http://duke.kenai.com/misc/bullfight.jpg"";private  static  final  string  image_path_player  =  ""http://duke.kenai.com/iconsized/duke4.gif"";public  static  final  int  step  =  3;private  static  final  int  timer_delay  =  step  *  8;private  bufferedimage  bkgrndimage  =  null;private  bufferedimage  playerimage  =  null;private  map<direction'  '  boolean>  directionmap  =  new  hashmap<direction'  '  boolean>();private  int  playerx  =  0;private  int  playery  =  0;enum  direction  {up(keyevent.vk_up'  '  0'  '  -1)'  '  down(keyevent.vk_down'  '  0'  '  1)'  'left(keyevent.vk_left'  '  -1'  '  0)'  '  right(keyevent.vk_right'  '  1'  '  0);private  int  keycode;private  int  xdirection;private  int  ydirection;private  direction(int  keycode'  '  int  xdirection'  '  int  ydirection)  {this.keycode  =  keycode;this.xdirection  =  xdirection;this.ydirection  =  ydirection;}public  int  getkeycode()  {return  keycode;}public  int  getxdirection()  {return  xdirection;}public  int  getydirection()  {return  ydirection;}}public  moveicon()  {try  {url  bkgrdimageurl  =  new  url(image_path);url  playerimageurl  =  new  url(image_path_player);bkgrndimage  =  imageio.read(bkgrdimageurl);playerimage  =  imageio.read(playerimageurl);setpreferredsize(new  dimension(bkgrndimage.getwidth()'  '  bkgrndimage.getheight()));}  catch  (malformedurlexception  e)  {e.printstacktrace();}  catch  (ioexception  e)  {e.printstacktrace();}for  (direction  direction  :  direction.values())  {directionmap.put(direction'  '  false);}setkeybindings();timer  timer  =  new  timer(timer_delay'  '  new  timerlistener());timer.start();}private  void  setkeybindings()  {inputmap  inmap  =  getinputmap(jcomponent.when_in_focused_window);actionmap  actmap  =  getactionmap();for  (final  direction  direction  :  direction.values())  {keystroke  pressed  =  keystroke.getkeystroke(direction.getkeycode()'  '  0'  '  false);keystroke  released  =  keystroke.getkeystroke(direction.getkeycode()'  '  0'  '  true);inmap.put(pressed'  '  direction.tostring()  +  ""pressed"");inmap.put(released'  '  direction.tostring()  +  ""released"");actmap.put(direction.tostring()  +  ""pressed""'  '  new  abstractaction()  {private  static  final  long  serialversionuid  =  1l;@overridepublic  void  actionperformed(actionevent  e)  {directionmap.put(direction'  '  true);}});actmap.put(direction.tostring()  +  ""released""'  '  new  abstractaction()  {private  static  final  long  serialversionuid  =  1l;@overridepublic  void  actionperformed(actionevent  e)  {directionmap.put(direction'  '  false);}});}}@overrideprotected  void  paintcomponent(graphics  g)  {super.paintcomponent(g);if  (bkgrndimage  !=  null)  {g.drawimage(bkgrndimage'  '  0'  '  0'  '  null);}if  (playerimage  !=  null)  {g.drawimage(playerimage'  '  playerx'  '  playery'  '  null);}}private  class  timerlistener  implements  actionlistener  {@overridepublic  void  actionperformed(actionevent  e)  {boolean  moved  =  false;for  (direction  direction  :  direction.values())  {if  (directionmap.get(direction))  {playerx  +=  step  *  direction.getxdirection();playery  +=  step  *  direction.getydirection();moved  =  true;}}if  (moved)  {int  x  =  playerx  -  2  *  step;int  y  =  playery  -  2  *  step;int  w  =  playerimage.getwidth()  +  4  *  step;int  h  =  playerimage.getheight()  +  4  *  step;moveicon.this.repaint(x'  '  y'  '  w'  '  h);  //  !!  repaint  just  the  player}}}private  static  void  createandshowui()  {jframe  frame  =  new  jframe(""moveicon"");frame.getcontentpane().add(new  moveicon());frame.setdefaultcloseoperation(jframe.exit_on_close);frame.pack();frame.setlocationrelativeto(null);frame.setvisible(true);}public  static  void  main(string[]  args)  {java.awt.eventqueue.invokelater(new  runnable()  {@overridepublic  void  run()  {createandshowui();}});}}"  ,i  want  to  know  how  to  keep  a  method  run  in  the  background  ie  this  method  start  when  the  program  start  and  keep  execut  it  statement  until  the  program  is  closedfor  ex  let  say  i  have  a  method  graviti  which  continu  decrement  a  certain  valu  while  the  program  is  run  right  now  for  tri  this  out  im  use  the  follow  program  wherein  im  tri  to  pull  the  duke  down  graviti  when  no  key  are  press  but  is  not  happen  thank  you  ,  privatefieldspecifi  instancefield  instancefieldinitializationstat  intdatatyp  simpleassignmentexpress  simplevari  actualmethodparamet  instancefieldinvoc  thisrefer  returnstat  trycatchstat  objectcreationstat  constructorcal  objectmethodinvoc  privatemethodspecifi  foreachstat  stringliter  stringdatatyp  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  longdatatyp  formalmethodparamet  privateclassspecifi  implementsspecif  methodimplement    