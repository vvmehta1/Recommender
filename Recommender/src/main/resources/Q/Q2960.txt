 question  ,  "private  observablelist<string>  newitems;private  observablelist<string>  readyitems;private  stringproperty  status;;  listviewa.setitems(processor.getnewitems());listviewb.setitems(processor.getreadyitems());statuslabel.textproperty().bind(processor.getstatus());;  runnable  newitemadder  =  new  runnable()  {@overridepublic  void  run()  {while(true)  {synchronized  (newitems)  {string  newitem  =  checkfornewitem();  //slowif  (newitem  !=  null)  {newitems.add(newitem);newitems.notify();}if  (newitems.size()  >=  5)status.set(""overload"");elsestatus.set(""ok"");}synchronized  (readyitems)  {if  (readyitems.size()  >  10)readyitems.remove(0);}try  {  thread.sleep(200);  }  catch  (interruptedexception  e)  {  return;  }}}};new  thread(newitemadder).start();runnable  worker  =  new  runnable()  {@overridepublic  void  run()  {while(true)  {list<string>  toprocess  =  new  arraylist<string>();synchronized  (newitems)  {if  (newitems.isempty())try  {  newitems.wait();  }  catch  (interruptedexception  e)  {  return;  }toprocess.addall(newitems);}for  (string  item  :  toprocess)  {string  processeditem  =  processitem(item);  //slowsynchronized  (readyitems)  {readyitems.add(processeditem);}}}}};new  thread(worker).start();;platform.runlater(new  runnable()  {  @override  public  void  run()  {  synchronized  (newitems)  {  if  (newitems.size()  >=  5)  status.set(""overload"");  else  status.set(""ok"");  }  }  });"  ,i  have  multipl  worker  thread  and  a  javafx  gui  which  is  report  on  what  is  happen  in  these  thread  there  is  a  lot  of  data  share  between  thread  and  it  need  to  be  visual  so  im  use  observablelist  and  properti  to  be  abl  to  easili  show  the  data  in  javafx  ive  made  a  small  exampl  app  to  show  someth  similar  to  what  happen  in  my  applicationit  has  list  and  the  worker  thread  move  data  from  one  list  to  the  other  a  status  string  is  kept  up  to  dateful  exampl  code  can  be  found  atthi  code  will  crash  see  later  here  are  the  share  observablelist  properti  here  how  they  are  use  in  javafx  the  worker  thread  updat  these  list  and  properti  but  off  cours  it  need  to  do  this  on  the  javafx  thread  and  that  where  thing  get  uglythi  would  be  the  code  if  i  didnt  have  to  updat  on  the  javafx  thread  off  cours  some  thing  are  easi  to  solv  with  platformrunlat  that  fine  for  propertieslist  that  i  onli  write  to  in  the  task  and  onli  read  in  the  javafx  guibut  it  get  veri  complic  to  do  it  for  the  list  in  this  exampl  on  which  you  need  to  synchron  read  and  write  you  need  add  a  lot  of  platformrunlat  and  you  need  to  block  until  the  runlat  task  has  finish  this  result  in  veri  complex  and  hard  to  read  and  write  code  i  manag  to  get  this  exampl  run  this  way  see  what  i  mean  are  there  ani  other  way  to  get  my  exampl  work  id  appreci  ani  other  solut  or  partial  solut  , 