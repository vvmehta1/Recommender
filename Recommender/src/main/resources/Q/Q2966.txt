 question  ,  "user32.dll;  import  java.awt.awtexception;import  java.awt.dimension;import  java.awt.eventqueue;import  java.awt.gridlayout;import  java.awt.mouseinfo;import  java.awt.point;import  java.awt.event.windowadapter;import  java.awt.event.windowevent;import  javax.swing.jframe;import  javax.swing.jlabel;import  com.sun.jna.native;import  com.sun.jna.nativelong;import  com.sun.jna.platform;import  com.sun.jna.structure;import  com.sun.jna.platform.win32.basetsd.ulong_ptr;import  com.sun.jna.platform.win32.kernel32;import  com.sun.jna.platform.win32.user32;import  com.sun.jna.platform.win32.windef.hwnd;import  com.sun.jna.platform.win32.windef.lresult;import  com.sun.jna.platform.win32.windef.wparam;import  com.sun.jna.platform.win32.winuser.hhook;import  com.sun.jna.platform.win32.winuser.hookproc;import  com.sun.jna.platform.win32.winuser.msg;import  com.sun.jna.platform.win32.winuser.point;public  class  mouseexample  {final  jframe  jf;final  jlabel  jl1'  '  jl2;final  cwmousehook  mh;final  ticker  jt;public  class  ticker  extends  thread  {public  boolean  update  =  true;public  void  done()  {update  =  false;}public  void  run()  {try  {point  p'  '  l  =  mouseinfo.getpointerinfo().getlocation();int  i  =  0;while  (update  ==  true)  {try  {p  =  mouseinfo.getpointerinfo().getlocation();if  (!p.equals(l))  {l  =  p;jl1.settext(new  globalmouseclick(p.x'  '  p.y).tostring());}thread.sleep(35);}  catch  (interruptedexception  e)  {e.printstacktrace();return;}}}  catch  (exception  e)  {update  =  false;}}}public  mouseexample()  throws  awtexception'  '  unsupportedoperationexception  {this.jl1  =  new  jlabel(""{}"");this.jl2  =  new  jlabel(""{}"");this.jf  =  new  jframe();this.jt  =  new  ticker();this.jt.start();this.mh  =  new  cwmousehook()  {@overridepublic  void  globalclickevent(globalmouseclick  m)  {jl2.settext(m.tostring());}};mh.setmousehook();jf.setlayout(new  gridlayout(2'  '  2));jf.add(new  jlabel(""position""));jf.add(jl1);jf.add(new  jlabel(""last  click""));jf.add(jl2);jf.addwindowlistener(new  windowadapter()  {public  void  windowclosing(windowevent  we)  {mh.dispose();jt.done();jf.dispose();}});jf.setlocation(new  point(0'  '  0));jf.setpreferredsize(new  dimension(200'  '  90));jf.pack();jf.setvisible(true);}public  static  class  globalmouseclick  {private  char  c;private  int  x'  '  y;public  globalmouseclick(char  c'  '  int  x'  '  int  y)  {super();this.c  =  c;this.x  =  x;this.y  =  y;}public  globalmouseclick(int  x'  '  int  y)  {super();this.x  =  x;this.y  =  y;}public  char  getc()  {return  c;}public  void  setc(char  c)  {this.c  =  c;}public  int  getx()  {return  x;}public  void  setx(int  x)  {this.x  =  x;}public  int  gety()  {return  y;}public  void  sety(int  y)  {this.y  =  y;}@overridepublic  string  tostring()  {return  (c  !=  0  ?  c  :  """")  +  ""  [""  +  x  +  ""'  '""  +  y  +  ""]"";}}public  static  class  cwmousehook  {public  user32  user32inst;public  cwmousehook()  throws  unsupportedoperationexception  {if  (!platform.iswindows())  {throw  new  unsupportedoperationexception(""not  supported  on  this  platform."");}user32inst  =  user32.instance;mousehook  =  hookthemouse();native.setprotected(true);}private  static  lowlevelmouseproc  mousehook;private  hhook  hhk;private  boolean  ishooked  =  false;public  static  final  int  wm_lbuttondown  =  513;public  static  final  int  wm_lbuttonup  =  514;public  static  final  int  wm_rbuttondown  =  516;public  static  final  int  wm_rbuttonup  =  517;public  static  final  int  wm_mbuttondown  =  519;public  static  final  int  wm_mbuttonup  =  520;public  void  dispose()  {unsetmousehook();mousehook_thread  =  null;mousehook  =  null;hhk  =  null;user32inst  =  null;}public  void  unsetmousehook()  {ishooked  =  false;user32inst.unhookwindowshookex(hhk);system.out.println(""mouse  hook  is  unset."");}public  boolean  isishooked()  {return  ishooked;}public  void  globalclickevent(globalmouseclick  m)  {system.out.println(m);}private  thread  mousehook_thread;public  void  setmousehook()  {mousehook_thread  =  new  thread(new  runnable()  {@overridepublic  void  run()  {try  {if  (!ishooked)  {hhk  =  user32inst.setwindowshookex(14'  '  mousehook'  'kernel32.instance.getmodulehandle(null)'  '  0);ishooked  =  true;system.out.println(""mouse  hook  is  set.  click  anywhere."");//  message  dispatch  loop  (message  pump)msg  msg  =  new  msg();while  ((user32inst.getmessage(msg'  '  null'  '  0'  '  0))  !=  0)  {user32inst.translatemessage(msg);user32inst.dispatchmessage(msg);if  (!ishooked)break;}}  elsesystem.out.println(""the  hook  is  already  installed."");}  catch  (exception  e)  {system.err.println(""caught  exception  in  mousehook!"");}}});mousehook_thread.start();}private  interface  lowlevelmouseproc  extends  hookproc  {lresult  callback(int  ncode'  '  wparam  wparam'  '  mousehookstruct  lparam);}private  lowlevelmouseproc  hookthemouse()  {return  new  lowlevelmouseproc()  {@overridepublic  lresult  callback(int  ncode'  '  wparam  wparam'  'mousehookstruct  info)  {if  (ncode  >=  0)  {switch  (wparam.intvalue())  {case  cwmousehook.wm_lbuttondown:globalclickevent(new  globalmouseclick('l''  'info.pt.x'  '  info.pt.y));break;case  cwmousehook.wm_rbuttondown:globalclickevent(new  globalmouseclick('r''  'info.pt.x'  '  info.pt.y));break;case  cwmousehook.wm_mbuttondown:globalclickevent(new  globalmouseclick('m''  'info.pt.x'  '  info.pt.y));break;default:break;}}return  user32inst.callnexthookex(hhk'  '  ncode'  '  wparam'  'info.getpointer());}};}public  class  point  extends  structure  {public  class  byreference  extends  point  implementsstructure.byreference  {};public  nativelong  x;public  nativelong  y;}public  static  class  mousehookstruct  extends  structure  {public  static  class  byreference  extends  mousehookstruct  implementsstructure.byreference  {};public  point  pt;public  hwnd  hwnd;public  int  whittestcode;public  ulong_ptr  dwextrainfo;}}public  static  void  main(string[]  args)  {eventqueue.invokelater(new  runnable()  {@overridepublic  void  run()  {try  {new  mouseexample();}  catch  (awtexception  e)  {e.printstacktrace();}}});}}"  ,here  is  an  exampl  to  illustr  the  problem  consid  i  am  track  and  display  mous  global  current  posit  and  last  click  button  and  posit  to  the  user  here  is  an  imag  to  archiv  captur  click  event  on  window  box  that  would  and  will  be  sent  to  the  other  program  event  messag  queue  i  creat  a  hook  use  winapi  name  librari  this  is  outsid  jdk  sandbox  so  i  use  jna  to  call  the  nativ  librari  this  all  work  perfect  but  it  doe  not  close  as  i  expect  it  tomi  question  is  how  do  i  proper  close  follow  exampl  program  code  below  is  not  fulli  written  by  me  but  taken  from  question  in  oracl  forum  and  part  fix  ,  extendsspecif  publicfieldspecifi  instancefield  instancefieldinitializationstat  booleandatatyp  simpleassignmentexpress  true  fals  trycatchstat  objectvari  simplevari  objectmethodinvoc  intdatatyp  whilestat  equalexpress  ifstat  notexpress  javalangstringequ  actualmethodparamet  throwsspecif  instancefieldinvoc  thisrefer  objectcreationstat  constructorcal  stringliter  stringdatatyp  formalmethodparamet  staticclassspecifi  privatefieldspecifi  chardatatyp  returnstat  constructordefinit  publicconstructorspecifi  throwstat  staticfieldspecifi  classfield  finalfieldspecifi  classconstantinitializationstat  javalangsystemoutprintln  interfacedefinit  privateinterfacespecifi  implementsspecif  methodimplement  abstractmethoddefinit  privatemethodspecifi  ifelsestat  greaterequalexpress  switchstat  caseclaus  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  staticmethodspecifi  voiddatatyp 