 question  ,  "jframe;  gui;  defaultcloseoperation;  public  class  classexecutor{private  classloaderofextclass  classloader;private  byte[][]  arrayofclasses;private  string[]  arrayofbinarynames;@suppresswarnings(""rawtypes"")private  arraylist<class>  loadedclasses;private  arraylist<string>  loadedclasesnames;private  object[]  parameters;@suppresswarnings(""rawtypes"")public  classexecutor()  {classloader  =  new  classloaderofextclass();new  arraylist<class>();loadedclasses  =  new  arraylist<class>();loadedclasesnames  =  new  arraylist<string>();}@suppresswarnings(""unchecked"")public  void  execute(file[]  file'  '  string[]  binarypaths)  {object[]  actuals  =  {  new  string[]  {  """"  }  };method  m  =  null;try  {field  classesx=classloaderofextclass.class.getdeclaredfield(""classes"");classesx.setaccessible(true);}  catch  (securityexception  e1)  {e1.printstacktrace();}  catch  (nosuchfieldexception  e1)  {  e1.printstacktrace();}/*for  (int  i  =  0;  i  <  file.length;  i++)  {for  (int  j  =  0;  j  <  file.length;  j++)  {try  {@suppresswarnings(""rawtypes"")class  c  =  classloader.loadclasscustom(file[i]'  '  binarypaths[i]);//fied  classex=classloader.getresource(""classes"");}catch(exception  e){}}}class<?>[]classesxx=  getloadedclasses(classloader);system.out.println(""loaded  classes  have  size  ""+  classesxx.length);*/for  (int  i  =  0;  i  <  file.length;  i++)  {try  {@suppresswarnings(""rawtypes"")class  c  =  classloader.loadclasscustom(file[i]'  '  binarypaths[i]);try  {if  (c.getmethod(""main""'  '  new  class[]  {  string[].class  })  !=  null)  {m  =  c.getmethod(""main""'  '  new  class[]  {  string[].class  });}  else  {system.out.println(""this  class  does  not  contain  main"");continue;}}  catch  (nosuchmethodexception  e)  {//system.out.println(""main  not  found!!!"");//  system.out.println(""m  here"");//  e.printstacktrace();  //  not  printing  stack  trace}  catch  (securityexception  e)  {e.printstacktrace();}}  catch  (classnotfoundexception  e)  {system.out.println(""no  such  class  definition  exist!!"");//  todo  auto-generated  catch  block//  e.printstacktrace();}}try  {m.invoke(null'  '  actuals);//  callstack.print();}  catch  (illegalargumentexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}  catch  (illegalaccessexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}  catch  (invocationtargetexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}}@suppresswarnings({  ""unchecked""'  '  ""rawtypes""  })public  void  execute(arraylist<byte[]>  stuffedfiles'  'arraylist<string>  binarypaths)  {converttoarray(stuffedfiles'  '  binarypaths);loadallclasses(arrayofclasses'  '  arrayofbinarynames);object[]  actuals  =  {  new  string[]  {  """"  }  };method  m  =  null;/*  *  method[]  m1=  new  method[10];  for  (class  c  :  loadedclasses)  {  *  m1=c.getmethods();  }  for(method  m2:  m1){  *  system.out.println(m2.getname());  }  *//*  system.out.println(loadedclasses.size());  */for  (class  c  :  loadedclasses)  {/*  *  system.out.println(c.tostring());  *  system.out.println(c.getconstructors());  *///  for  (int  i  =  1;  i  <  file.size();  i++)  {/*  *  for(method  meth  :  c.getmethods()){  meth.setaccessible(true);  *  *  }  */try  {if  (c.getmethod(""main""'  '  new  class[]  {  string[].class  })  !=  null)  {m  =  c.getmethod(""main""'  '  new  class[]  {  string[].class  });break;}  else  {//system.out.println(""this  class  does  not  contain  main"");continue;}}  catch  (nosuchmethodexception  e)  {system.out.println(""program  does  not  contain  main"");}  catch  (securityexception  e)  {e.printstacktrace();}}try  {if(parameters==null){m.invoke(null'  '  actuals);}else{try  {system.out.println(""it  fails  here"");m.invoke(null'  '  parameters);}  catch  (exception  e)  {system.out.println(""illegal  arguments"");}}//  callstack.print();}  catch  (illegalargumentexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}  catch  (illegalaccessexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}  catch  (invocationtargetexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}"  ,i  have  a  java  gui  applic  from  which  anotherjava  gui  applic  is  invok  use  reflect  and  load  it  work  fine  the  onli  problem  face  is  on  close  the  of  invok  applic  the  main  applic  frame  also  close  how  can  i  prevent  the  main  applic  frame  from  close  i  cannot  chang  the  of  the  invok  applic  howev  a  chang  to  the  main  applic  can  be  madedo  it  have  ani  thing  to  do  with  thread  this  is  my  applic  code  that  execut  a  target  applic  ,  arrayel  postincrementexpress  trycatchstat  ifstat  objectmethodinvoc  simpleassignmentexpress  instancefield  simplevari  formalmethodparamet  bytedatatyp  stringdatatyp  javautilarraylist  actualmethodparamet  javalangsystemoutprintln  stringliter    actualmethodparamet     objectvari  simplevari  simpleassignmentexpress  