 question  ,  "import  java.io.file;import  java.io.ioexception;import  java.io.filewriter;import  java.util.calendar;import  java.util.concurrent.blockingqueue;import  java.util.concurrent.linkedblockingqueue;public  class  log  extends  thread{private  string  file;private  blockingqueue<string>  pq  =  new  linkedblockingqueue<string>();private  bufferedwriter  bw;private  boolean  writing;@depreciatedpublic  log(){super();file  =  ""log.txt"";start();  }public  log(threadgroup  tg'  '  string  filename){super(tg'  'filename);file  =  filename;try  {new  file(file).createnewfile();}  catch  (ioexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}start();  }public  log(string  filename){file  =  filename;try  {new  file(file).createnewfile();}  catch  (ioexception  e)  {//  todo  auto-generated  catch  blocke.printstacktrace();}start();  }@overridepublic  void  run(){//system.out.println(""log  thread  booted  ""  +file);while(run.running){if  (!writing){if(run.logging)writetolog();}try{thread.sleep(500);}catch(interruptedexception  e){thread.currentthread().interrupt();break;}}//system.out.println(""log  thread  shutting  down  ""  +file);}public  synchronized  void  log(string  s){if(run.logging)pq.add(s);}private  void  writetolog(){try{writing  =  true;bw  =  new  bufferedwriter(new  filewriter(file'  '  true));while(!pq.isempty()){bw.write(calendar.getinstance().gettime().tostring()  +""  ""  +pq.poll());bw.newline();}bw.flush();bw.close();writing  =  false;}catch(exception  e){writing  =  false;  e.printstacktrace();}}}"  ,i  have  code  a  background  log  thread  for  my  program  if  a  class  need  a  logger  it  pull  it  from  my  threadpool  so  for  each  filenam  there  is  onli  one  log  run  the  class  add  anyth  which  need  to  be  log  vialogstringanyway  whenev  i  set  log  on  and  it  run  the  writetolog  after  a  while  i  get  heapoutofmemori  except  this  is  caus  by  the  log  thread  but  i  cant  see  where  the  memori  leak  is  and  i  am  not  that  great  at  thread  my  onli  idea  is  that  it  is  in  the  buffer  writer  edit  it  is  worth  mention  as  well  that  in  the  context  of  the  program  it  is  log  s  s  of  linesmani  thank  sam  ,  stringvari  stringdatatyp  simplevari  whilestat  notexpress  objectmethodinvoc  actualmethodparamet  stringaddit  stringliter  simpleassignmentexpress  fals  instancefield    whilestat  notexpress  objectmethodinvoc  actualmethodparamet  stringaddit  stringdatatyp  stringliter  simpleassignmentexpress  fals  instancefield  simplevari  