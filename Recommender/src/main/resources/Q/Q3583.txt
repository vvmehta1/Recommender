 question  ,  arraylist  <job>  task;...public  void  do(job  job){synchronized(tasks){tasks.add(job);}synchronized(this){notify();}}public  void  run(){while(true){for  (int  =  0;i<tasks.size();i++){synchronized(tasks){job  job  =  tasks.get(i);}//do  some  job  here...}synchronized(this){wait();  //lock  will  be  lost...notifier  =  false;  //lock  will  be  acquired  again  after  notify()}}};  private  volatile  boolean  notifier  =  false;arraylist  <job>  task;...public  void  do(job  job){synchronized(tasks){tasks.add(job);}synchronized(this){notifier  =  true;notify();}}public  void  run(){while(true){for  (int  =  0;i<tasks.size();i++){synchronized(tasks){job  job  =  tasks.get(i);}//do  some  job  here...}synchronized(this){if(!notifier){wait();  //lock  will  be  lost...notifier  =  false;  //lock  will  be  acquired  again  after  notify()}}}}  ,i  recent  discov  that  use  synchron  wont  prevent  ani  dead  lock  eg  within  this  code  now  what  is  the  problem  well  if  the  run  thread  isnt  wait  he  wont  see  ani  notif  ie  notifi  call  therefor  he  may  run  into  a  dead  lock  and  not  handl  the  task  he  receiv  or  he  may  handl  them  too  late  therefor  i  implement  this  code  is  this  correct  or  am  i  miss  someth  and  can  it  be  done  easier  ,  javautilarraylist  simplevari  dostat  whilestat  javautilarraylistadd  actualmethodparamet 