 question  ,  run;  executors.newcachedthreadpool();;  execute;  public  class  eventhandler  {private  static  final  executorservice  handlers  =  executors.newcachedthreadpool();public  void  handlenextevent(anevent  event){handlers.execute(new  task(evt));  }  public  class  task  implements  runnable{@overridepublic  void  run()  {//event  processing}}public  anotherclass{public  void  passevent(anevent  evt)//this  is  called  by  another  thread{eventhandler.handlenextevent(evt);}};  execute  ,i  have  an  event  queue  to  process  a  thread  add  event  to  the  queue  i  have  creat  a  runnabl  task  that  in  the  method  doe  all  which  is  necessari  to  process  the  event  i  have  declar  an  and  i  each  task  my  problem  is  that  if  i  call  of  the  executor  my  code  will  get  the  next  event  and  run  next  runnabl  via  the  executor  my  purpos  is  to  process  next  event  from  queue  onli  after  previous  task  has  end  how  would  i  know  that  the  previous  task  has  finish  or  not  so  that  i  know  i  can  call  handlenextev  again  is  have  some  status  field  updat  by  the  task  a  good  idea  thank  ,  classdefinit  publicclassspecifi  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  simpleassignmentexpress  objectmethodinvoc  formalmethodparamet  methoddefinit  publicmethodspecifi  voiddatatyp  actualmethodparamet  objectcreationstat  constructorcal  implementsspecif  methodimplement    objectmethodinvoc     