 question  ,  "syncui.java;  sync.java;  jtextfield1;  processevents;  processevents;  package  sync;import  java.io.ioexception;import  java.nio.file.path;import  java.nio.file.paths;import  java.util.logging.level;import  java.util.logging.logger;import  javax.swing.defaultlistmodel;import  javax.swing.jlist;import  javax.swing.swingutilities;public  class  syncui  extends  javax.swing.jframe  {public  syncui()  {initcomponents();}@suppresswarnings(""unchecked"")//  <editor-fold  defaultstate=""collapsed""  desc=""generated  code"">private  void  initcomponents()  {jbutton1  =  new  javax.swing.jbutton();jtextfield1  =  new  javax.swing.jtextfield();list1  =  new  java.awt.list();setdefaultcloseoperation(javax.swing.windowconstants.exit_on_close);jbutton1.settext(""start"");jbutton1.addactionlistener(new  java.awt.event.actionlistener()  {public  void  actionperformed(java.awt.event.actionevent  evt)  {jbutton1actionperformed(evt);}});jtextfield1.addactionlistener(new  java.awt.event.actionlistener()  {public  void  actionperformed(java.awt.event.actionevent  evt)  {jtextfield1actionperformed(evt);}});list1.addactionlistener(new  java.awt.event.actionlistener()  {public  void  actionperformed(java.awt.event.actionevent  evt)  {list1actionperformed(evt);}});org.jdesktop.layout.grouplayout  layout  =  new  org.jdesktop.layout.grouplayout(getcontentpane());getcontentpane().setlayout(layout);layout.sethorizontalgroup(layout.createparallelgroup(org.jdesktop.layout.grouplayout.leading).add(layout.createsequentialgroup().addcontainergap().add(layout.createparallelgroup(org.jdesktop.layout.grouplayout.leading).add(list1'  '  org.jdesktop.layout.grouplayout.default_size'  '  org.jdesktop.layout.grouplayout.default_size'  '  short.max_value).add(layout.createsequentialgroup().add(jtextfield1'  '  org.jdesktop.layout.grouplayout.preferred_size'  '  329'  '  org.jdesktop.layout.grouplayout.preferred_size).addpreferredgap(org.jdesktop.layout.layoutstyle.related).add(jbutton1).add(0'  '  0'  '  short.max_value))).addcontainergap()));layout.setverticalgroup(layout.createparallelgroup(org.jdesktop.layout.grouplayout.leading).add(layout.createsequentialgroup().addcontainergap().add(layout.createparallelgroup(org.jdesktop.layout.grouplayout.baseline).add(jbutton1).add(jtextfield1'  '  org.jdesktop.layout.grouplayout.preferred_size'  '  org.jdesktop.layout.grouplayout.default_size'  '  org.jdesktop.layout.grouplayout.preferred_size)).addpreferredgap(org.jdesktop.layout.layoutstyle.related).add(list1'  '  org.jdesktop.layout.grouplayout.preferred_size'  '  229'  '  org.jdesktop.layout.grouplayout.preferred_size).addcontainergap(25'  '  short.max_value)));pack();}//  </editor-fold>private  void  jtextfield1actionperformed(java.awt.event.actionevent  evt)  {jbutton1.doclick();}  private  void  jbutton1actionperformed(java.awt.event.actionevent  evt)  {//i  tried  to  use  invokelater'  '  this  solved  the  problem  of  the  ui  nonresponse  issue  swingutilities.invokelater(new  runnable()  {public  void  run(){//creates  a  path  dir  that  my  sync  constructor  needs  to  start  file  notification  watcher  on  that  directorypath  dir  =  paths.get(jtextfield1.gettext());try{//creates  a  new  sync  object  passing  it  the  directory  and  the  list  in  my  guisync  sync  =  new  sync(dir'  '  list1);try{sync.processevents();}catch  (interruptedexception  ex){logger.getlogger(syncui.class.getname()).log(level.severe'  '  null'  '  ex);}}catch  (ioexception  ex){logger.getlogger(syncui.class.getname()).log(level.severe'  '  null'  '  ex);}}});}private  void  list1actionperformed(java.awt.event.actionevent  evt)  {//  todo  add  your  handling  code  here:}  public  static  void  main(string  args[])  throws  ioexception{java.awt.eventqueue.invokelater(new  runnable(){public  void  run(){syncui  s  =  new  syncui();s.setvisible(true);  }});  }//  variables  declaration  -  do  not  modify  private  javax.swing.jbutton  jbutton1;private  javax.swing.jtextfield  jtextfield1;private  java.awt.list  list1;//  end  of  variables  declaration  };  package  sync;import  static  java.nio.file.standardwatcheventkinds.*;import  java.nio.file.attribute.*;import  java.io.*;import  java.nio.file.*;import  java.util.*;import  java.util.logging.level;import  java.util.logging.logger;import  javax.swing.swingutilities;public  class  sync{private  final  watchservice  ws;private  final  map<watchkey'  'path>  keys;public  java.awt.list  list;public  sync(path  dir'  '  java.awt.list  list)  throws  ioexception'  '  interruptedexception{this.ws  =  filesystems.getdefault().newwatchservice();this.keys  =  new  hashmap<watchkey'  'path>();this.list  =  list;recset(dir);//this.processevents();}private  void  register(path  dir)  throws  ioexception{watchkey  key  =  dir.register(ws'  '  entry_create'  '  entry_delete'  '  entry_modify);keys.put(key'  '  dir);}private  void  recset(path  start)  throws  ioexception{files.walkfiletree(start'  '  new  simplefilevisitor<path>(){  public  filevisitresult  previsitdirectory(path  dir'  '  basicfileattributes  attrs)  throws  ioexception{if(!files.ishidden(dir)){register(dir);system.out.println(dir);}return  filevisitresult.continue;}});}void  processevents()  throws  ioexception'  '  interruptedexception{system.out.println(""entered  processevents"");swingutilities.invokelater(new  runnable()  {public  void  run(){system.out.println(""entered  run"");list.add(""test2"");list.repaint();while(true){  watchkey  key;  try{key  =  ws.take();}catch  (interruptedexception  x){return;}path  dir  =  keys.get(key);if  (dir  ==  null){system.err.println(""watchkey  not  recognized"");continue;}for  (watchevent<?>  event:  key.pollevents()){watchevent.kind<?>  kind  =  event.kind();watchevent<path>  ev  =  (watchevent<path>)event;path  filename  =  ev.context();string  name  =  dir.resolve(filename).tostring();  if  (kind  ==  overflow)continue;  if(kind  ==  entry_create){system.out.print(""entry  created:  "");file  f  =  new  file(name);if(f.isdirectory())try  {register(dir.resolve(filename));}  catch  (ioexception  ex)  {logger.getlogger(sync.class.getname()).log(level.severe'  '  null'  '  ex);}system.out.println(name);list.add(name);  }else  if(kind  ==  entry_delete){system.out.print(""entry  deleted:  "");system.out.println(name);}else  if(kind  ==  entry_modify){file  f  =  new  file(name);if(!f.isdirectory()){system.out.print(""entry  modify:  "");system.out.println(name);}}boolean  valid  =  key.reset();if  (!valid)break;}}}});  }}"  ,im  have  an  issu  with  thread  use  netbean  swing  gui  this  is  my  first  time  realli  tri  to  develop  a  gui  for  a  backup  program  use  java  file  system  notifi  i  have  two  file  and  pretti  much  what  i  want  to  happen  is  you  enter  a  directori  path  in  the  text  field  which  creat  a  sync  thread  that  creat  a  new  sync  object  and  then  call  on  that  object  when  a  file  in  that  directori  is  chang  i  want  to  add  text  about  the  chang  to  the  list  in  it  current  state  the  ui  is  no  longer  not  respond  howev  the  isnt  ad  anyth  into  my  list  ani  idea  what  the  problem  is  also  sinc  im  just  start  to  use  java  ani  construct  critic  is  welcom  ,  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  trycatchstat  instancefield  simplevari  formalmethodparamet  privatemethodspecifi  objectvari  throwsspecif  javalangsystemoutprintln  stringliter  stringdatatyp  instancefieldinitializationstat  objectcreationstat  constructorcal  booleandatatyp       formalmethodparamet  staticmethodspecifi  objectmethodinvoc  actualmethodparamet  objectcreationstat  constructorcal  true  