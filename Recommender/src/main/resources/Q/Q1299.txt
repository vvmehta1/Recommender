 question  ,  "public  static  loggerfactory  getloggerfactory(logtype  type)  {switch  (type)  {case  log4j:return  log4jloggerfactory.getinstance();case  logback:return  logbackloggerfactory.getinstance();default:throw  new  runtimeexception(""no  logger  factory  defined  for  type  ""  +  type);}}"  ,good  morn  i  inherit  some  legaci  code  at  work  and  it  is  use  a  rather  unusu  design  pattern  the  onli  refer  i  could  find  on  the  forum  to  a  similar  pattern  was  the  situat  is  that  the  origin  design  has  a  generic  parent  class  not  abstract  that  has  a  static  factori  method  which  direct  refer  children  class  here  is  a  sampl  of  that  style  of  code  found  in  sever  place  in  the  legaci  code  where  logjloggerfactori  and  logbackloggerfactori  extend  loggerfactori  this  seem  realli  foreign  to  me  but  befor  i  refactor  the  code  signific  is  there  ani  purpos  or  benefit  to  this  design  pattern  is  there  even  a  formal  name  for  it  ani  thought  or  advic  is  appreci  thank  edit  after  read  yishai  respons  i  thought  i  would  includ  a  link  to  the  for  easi  refer  thank  to  everyon  for  your  respons  ,          