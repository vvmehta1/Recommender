 question  ,  volatile;  public  class  myclass  {private  volatile  int  id;public  myclass()  {scheduledexecutorservice  execservice  =  executors.newscheduledthreadpool(1);execservice.scheduleatfixedrate(new  runnable()  {public  void  run()  {++id;}}'  '  0l'  '  30l'  '  timeunit.seconds);}public  int  getid()  {return  id;}};  volatile;  synchronized;  synchronized;  volatile;  volatile  ,i  occasion  use  a  instanc  variabl  in  case  where  i  have  two  thread  read  from  write  to  it  and  dont  want  the  overhead  or  potenti  deadlock  risk  of  take  out  a  lock  for  exampl  a  timer  thread  period  updat  an  int  id  that  is  expos  as  a  getter  on  some  class  my  question  given  that  the  jls  onli  guarante  that  bit  read  will  be  atom  is  there  ani  point  in  use  a  volatil  long  ie  bit  pleas  do  not  repli  say  that  use  over  is  a  case  of  preoptimis  i  am  well  awar  of  how  when  to  use  but  there  are  case  where  is  preferablefor  exampl  when  defin  a  spring  bean  for  use  in  a  singlethread  applic  i  tend  to  favour  instanc  variabl  as  there  is  no  guarante  that  the  spring  context  will  initialis  each  bean  properti  in  the  main  thread  ,  simpleassignmentexpress  objectmethodinvoc  intdatatyp  returnstat 