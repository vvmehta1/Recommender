 question  ,  dreams.crush();  garlic.crush();  utterlydestroy(parameter);  utterlydestroy(parameter)  {parameter.crush()};  utterlydestroy(icrushable  parameter);  utterlydestroy(<t  instanceof  dreams  ||  t  instanceof  garlic>  parameter);  utterlydestroy(object  parameter)  {((dreams)parameter).crush()}  ,i  am  write  a  method  that  should  accept  as  it  paramet  an  object  of  one  of  two  type  which  do  not  share  a  parent  type  other  than  object  for  exampl  the  type  are  dream  and  garlic  you  can  do  both  and  i  want  to  have  a  method  that  would  accept  as  it  paramet  both  dream  and  garlic  both  garlic  and  dream  are  a  part  of  some  librari  so  have  them  implement  an  interfac  icrush  so  that  i  could  write  is  not  an  option  my  method  bodi  is  quit  long  so  overload  it  would  mean  duplic  code  uglyi  am  sure  i  could  use  reflect  and  do  some  class  hack  ugli  i  tri  use  generic  but  appar  i  cannot  write  someth  like  is  it  possibl  to  typecast  garlic  to  dream  this  would  still  be  ugli  though  what  are  my  other  option  and  what  is  the  prefer  method  of  deal  with  the  situat  ,  objectmethodinvoc  actualmethodparamet  orexpress  explicittypecast 