 question  ,  interface  foobar  {[foo]  &  [bar]  getfoobar();}interface  foo  {void  dofoo();}inteface  bar  {void  dobar();};  foobar;  getfoobar();  foo;  bar;  interface  foobar  {<t  extends  foo  &  bar>  t  getfoobar()}class  someimplementor  implements  foobar  {private  fooandbarimpl  fsomefield;public  <t  extends  foo  &  bar>  t  getfoobar()  {return  fsomefield;}};  fooandbarimpl;  foo;  bar;  getfoobar();  foo;  bar;  fsomefield;  getfoobar()  ,is  it  possibl  to  specifi  a  method  which  return  a  object  that  implement  two  or  multipl  interfac  say  we  have  the  follow  interfac  implementor  of  need  to  provid  the  method  that  return  an  instanc  of  a  type  which  fullfil  as  well  as  what  i  tri  so  far  is  to  do  it  with  generic  given  that  is  some  type  provid  by  a  framework  or  librari  and  implement  and  this  i  think  should  work  howev  it  doesnt  becaus  fooandbarimpl  cannot  be  convert  to  t  whi  is  that  the  contract  impli  by  is  not  broken  as  i  see  it  anoth  solut  would  be  to  defin  a  new  interfac  that  extend  and  and  to  use  that  as  return  type  i  just  dont  see  much  sens  in  return  a  empti  wrapper  for  the  in  the  implement  thank  for  ani  other  advic  andor  explan  would  appreci  it  if  someon  could  explain  whi  the  generic  approach  doesnt  work  i  just  dont  see  it  ,          classdefinit  publicclassspecifi  privatefieldspecifi  instancefield  simplevari  methoddefinit  publicmethodspecifi  returnstat  