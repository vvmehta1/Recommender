 question  ,  "process;  class-a  and  class-b;  process  method;  for  (moduleregistration.modulesholderentry  entry  :  moduleregistration.getinstance())  {final  map<string'  '  string>  response  =  entry.getplugin().process(outputs);//  write  to  databasesystem.out.println(response);};  process;  public  void  writeevents(final  map<string'  '  object>  data)  {//  three  threads:  one  thread  for  the  database  writer'  '  two  threads  for  the  plugin  processorsfinal  executorservice  executor  =  executors.newfixedthreadpool(3);final  blockingqueue<map<string'  '  string>>  queue  =  new  linkedblockingqueue<map<string'  '  string>>();@suppresswarnings(""unchecked"")final  map<string'  '  string>  outputs  =  (map<string'  '  string>)data.get(modelconstants.event_holder);for  (final  moduleregistration.modulesholderentry  entry  :  moduleregistration.getinstance())  {executor.submit(new  runnable  ()  {public  void  run()  {final  map<string'  '  string>  response  =  entry.getplugin().process(outputs);//  put  the  response  map  in  the  queue  for  the  database  to  readqueue.offer(response);}});}future<?>  future  =  executor.submit(new  runnable  ()  {public  void  run()  {map<string'  '  string>  map;try  {while(true)  {//  blocks  until  a  map  is  available  in  the  queue'  '  or  until  interruptedmap  =  queue.take();//  write  map  to  databasesystem.out.println(map);}}  catch  (interruptedexception  ex)  {//  if  we're  catching  interruptedexception  then  this  means  that  future.cancel(true)//  was  called'  '  which  means  that  the  plugin  processors  are  finished;//  process  the  rest  of  the  queue  and  then  exitwhile((map  =  queue.poll())  !=  null)  {//  write  map  to  databasesystem.out.println(map);}}}});//  this  interrupts  the  database  thread'  '  which  sends  it  into  its  catch  block//  where  it  processes  the  rest  of  the  queue  and  exitsfuture.cancel(true);  //  interrupt  database  thread//  wait  for  the  threads  to  finishtry  {executor.awaittermination(5'  '  timeunit.minutes);}  catch  (interruptedexception  e)  {//log  error  here}};  executor.awaittermination(5'  '  timeunit.minutes);;  jvmdump006i  processing  dump  event  ""systhrow""'  '  detail  ""java/lang/outofmemoryerror""  -  please  wait.jvmdump032i  jvm  requested  heap  dump  using  's:gitviewsstreamgoldseyeheapdump.20130827.142415.16456.0001.phd'  in  response  to  an  eventjvmdump010i  heap  dump  written  to  s:gitviewsstreamgoldseyeheapdump.20130827.142415.16456.0001.phdjvmdump006i  processing  dump  event  ""systhrow""'  '  detail  ""java/lang/outofmemoryerror""  -  please  wait."  ,i  have  a  method  name  in  two  of  my  class  let  say  now  in  the  below  loop  i  am  call  of  both  of  my  class  sequenti  mean  one  by  one  and  it  work  fine  but  that  is  the  not  the  way  i  am  look  for  is  there  ani  way  i  can  call  the  process  method  of  both  of  my  class  in  a  multithread  way  mean  one  thread  will  call  process  method  of  classa  and  second  thread  will  call  process  method  of  classb  and  then  after  that  i  was  think  to  write  the  data  that  is  be  return  by  the  method  into  the  databas  so  i  can  have  one  more  thread  for  write  into  databas  below  is  the  code  that  i  came  up  with  in  a  multithread  way  but  somehow  it  is  not  run  at  all  but  if  i  remov  the  last  line  then  it  start  run  fine  and  after  some  time  i  alway  get  error  like  this  can  anybodi  help  me  in  figur  out  what  the  problem  and  what  wrong  i  am  do  in  my  abov  code  if  i  am  run  sequenti  then  i  dont  get  ani  error  and  it  work  fine  what  i  am  tri  to  do  is  call  the  process  method  of  both  of  my  class  in  a  multithread  way  and  then  write  into  the  databas  bcoz  my  process  method  will  return  back  a  map  ani  help  will  be  appreci  on  this  and  i  am  look  for  a  workabl  exampl  on  this  if  possibl  thank  for  the  help  ,  objectvari  simplevari  actualmethodparamet  simpleassignmentexpress  objectmethodinvoc  lessexpress  constant  instancefield  divideexpress  subtractexpress    