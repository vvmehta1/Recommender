 question  ,  private  class  dointensetask  extends  asynctask<object'  '  object'  '  void>  {  protected  void  doinbackground(object...  params)  {  for  (object  param  :  params)  {  object  rtnobj  =  dointensejob(param);  publishprogress(rtnobj);  }  return  null;  }  protected  void  onprogressupdate(object...  progress)  {  for  (object  rtnobj  :  progress)  {  updateactivityui(rtnobj);  }  }  }  ,the  normal  way  we  do  asynctask  in  android  is  from  android  api  my  intens  task  are  loos  coupl  and  the  execut  order  doe  not  matter  by  do  this  way  a  singl  thread  is  alloc  to  run  a  list  of  intens  task  person  i  think  this  is  a  sort  of  halfway  solut  yes  the  intens  job  is  not  run  in  ui  thread  anymor  but  still  need  execut  one  by  one  in  mani  case  we  are  face  a  list  of  intens  job  i  think  this  is  also  whi  the  method  in  asynctask  are  multiparameter  googl  should  make  the  api  more  reusabl  to  solv  differ  kind  of  scenario  what  i  realli  like  to  have  is  run  a  number  of  dointensejob  inparallel  manag  by  a  threadpool  eg  poolsiz  look  like  googl  do  give  a  solut  by  asynctaskexecuteonexecutor  but  unfortun  onli  avail  sinc  api  level  i  am  develop  app  on  mobil  and  wonder  if  there  is  a  workaround  that  i  can  achiev  the  same  behavior  under  api  level  thank  in  advanc  y  ,  simpleassignmentexpress  formalmethodparamet  protectedmethodspecifi  javalangobject  foreachstat  actualmethodparamet  returnstat    objectvari  simplevari  simpleassignmentexpress  stringvari  stringdatatyp  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  stringliter  intdatatyp  stringaddit  objectmethodinvoc  genericobjectcreationstat  actualmethodparamet  publicfieldspecifi  instancefield  volatilefieldspecifi  instancefieldinitializationstat  objectcreationstat  constructorcal  staticmethodspecifi  formalmethodparamet  throwsspecif  throwstat  privatemethodspecifi  constant  constantinitializationstat  booleandatatyp  ifstat  notexpress  returnstat  finalmethodspecifi  protectedmethodspecifi  lessexpress  greaterexpress  multiplyexpress  constantinvoc  subtractexpress  notequalexpress  switchstat  caseclaus  privateclassspecifi  staticclassspecifi  extendsspecif     ifelsestat  greaterequalexpress  constantinvoc  objectmethodinvoc  actualmethodparamet     simpleassignmentexpress  lessexpress  formalmethodparamet  ifstat  greaterequalexpress  constantinvoc  objectmethodinvoc  actualmethodparamet  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp  