 question  ,  "void  run();  import  java.net.*;import  java.lang.reflect.method;public  class  app  {public  static  class  base  {void  run()  {system.out.println(""error"");}}public  static  class  inside  extends  base  {@overridevoid  run()  {system.out.println(""ok.  inside"");}}public  static  void  main(string[]  args)  throws  exception  {{base  p  =  (base)  class.forname(inside.class.getname()).newinstance();system.out.println(p.getclass());p.run();}  {//  path  to  outside.classurl[]  url  =  {  new  url(""file:/home/mart/workspace6/test2/bin/"")  };urlclassloader  ucl  =  urlclassloader.newinstance(url);final  base  p  =  (base)  ucl.loadclass(""outside"").newinstance();system.out.println(p.getclass());p.run();//  try  reflectionmethod  m  =  p.getclass().getdeclaredmethod(""run"");m.setaccessible(true);m.invoke(p);}}};  public  class  outside  extends  app.base  {@overridevoid  run()  {system.out.println(""ok.  outside"");}};  class  app$insideok.  insideclass  outsideerrorok.  outside;  outside#run();  base#run()"  ,i  come  across  to  a  strang  behavior  while  tri  to  overrid  a  method  with  exaccord  to  java  spec  a  class  can  use  or  overrid  default  member  of  base  class  if  class  belong  to  the  same  packageeveryth  work  correct  while  all  class  load  from  the  same  classloaderbut  if  i  tri  to  load  a  subclass  from  classload  then  polymorph  dont  work  here  is  sampl  appjava  outsidejava  should  be  in  separ  folder  otherwis  classload  will  be  the  same  the  output  so  then  i  call  i  got  error  in  output  reflect  work  correct  what  wrong  or  is  it  expect  behaviorcan  i  go  around  this  problem  somehow  , 