 question  ,  "public  boolean  recursivedfs(string  start'  '  string  end){clearall();vertex  source  =  vertexmap.get(start);vertex  dest  =  vertexmap.get(end);clearall();return  recursivedfshelper(source'  'dest);}private  boolean  recursivedfshelper(vertex  sor'  '  vertex  des){if  (!sor.name.equals(des.name)){sor.setvisited(true);iterator<edge>  it  =  sor.adj.iterator();while  (it.hasnext()){vertex  v  =  it.next().target;if(!v.isvisited){sor.prev=v;recursivedfshelper(v'  '  des);  }}return  false;}else  return  true;};  public  boolean  recursivedfs(string  start'  '  string  end){clearall();vertex  source  =  vertexmap.get(start);vertex  dest  =  vertexmap.get(end);clearall();return  recursivedfshelper(source'  'dest);}private  boolean  recursivedfshelper(vertex  sor'  '  vertex  des){//system.out.println(sor.name);if  (!sor.name.equals(des.name)){sor.setvisited(true);system.out.println(sor.adj);iterator<edge>  it  =  sor.adj.iterator();while  (it.hasnext()){vertex  v  =  it.next().target;if(!v.isvisited){v.prev=sor;system.out.printf(""prev  of  %s  is  %s""'  'sor'  'sor.prev);return  recursivedfshelper(v'  '  des);}}//system.out.println(""returning  false"");return  false;}else  {  system.out.println(""returning  true"");  return  true;}};  a  bb  cc  da  ee  d  "  ,i  am  tri  to  implement  the  recurs  version  of  dfs  for  depth  first  search  between  two  nodesher  is  my  code  the  method  will  return  true  if  there  is  a  path  that  exist  and  it  also  updat  the  prev  field  of  the  node  to  keep  track  of  the  path  i  have  implement  this  nonrecurs  way  use  stack  and  it  work  fine  which  is  this  one  is  not  work  that  is  it  is  not  give  me  the  path  from  node  a  to  node  b  it  alway  seem  to  return  fals  edit  after  below  suggest  i  have  this  code  for  a  given  direct  graph  like  this  it  is  abl  to  find  the  correct  path  from  a  to  d  but  fail  from  a  to  e  which  is  just  one  node  away  ,  stringvari  stringdatatyp  simplevari  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  returnstat  formalmethodparamet  privatemethodspecifi  booleandatatyp  objectvari  ifelsestat  notexpress  javalangstringequ  true  whilestat  instancefieldinvoc  ifstat    objectvari  simplevari  simpleassignmentexpress  