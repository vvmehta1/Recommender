 question  ,  int  numworkers  =  integer.parseint(args[0]);int  threadpoolsize  =  integer.parseint(args[1]);executorservice  tpes  =executors.newfixedthreadpool(threadpoolsize);workerthread[]  workers  =  new  workerthread[numworkers];for  (int  i  =  0;  i  <  numworkers;  i++)  {workers[i]  =  new  workerthread(i);tpes.execute(workers[i]);};  executorservice  tpes  =  executors.newfixedthreadpool(threadpoolsize);bufferedinputstream  inbytes  =  new  bufferedinputstream(system.in);byte[]  buff  =  new  byte[block_size];byte[]  dict  =  new  byte[dict_size];workerthread  worker;int  bytesread  =  0;while((bytesread  =  inbytes.read(buff))  !=  -1)  {  system.arraycopy(buff'  '  block_size-dict_size'  '  dict'  '  0'  '  dict_size);  worker  =  new  workerthread(buff'  '  dict)  tpes.execute(worker);}  ,so  i  think  i  sort  of  understand  how  fix  thread  pool  work  use  the  executorfixedthreadpool  built  into  java  but  from  what  i  can  see  there  usual  a  set  number  of  job  you  want  done  and  you  know  how  mani  to  when  you  start  the  program  for  exampl  where  each  workerthread  doe  someth  realli  simplethat  part  is  arbitrari  what  i  want  to  know  is  what  if  you  have  a  fix  pool  size  say  max  but  you  dont  know  how  mani  worker  youll  need  to  finish  the  task  until  runtim  the  specif  exampl  is  if  i  have  a  pool  size  of  and  im  read  from  standard  input  as  i  read  i  split  the  input  into  block  of  a  set  size  each  one  of  these  block  is  given  to  a  thread  along  with  some  other  inform  so  that  they  can  compress  it  as  such  i  dont  know  how  mani  thread  ill  need  to  creat  as  i  need  to  keep  go  until  i  reach  the  end  of  the  input  i  also  have  to  somehow  ensur  that  the  data  stay  in  the  same  order  if  thread  finish  befor  thread  and  just  submit  it  work  my  data  will  be  out  of  order  would  a  thread  pool  be  the  wrong  approach  in  this  situat  then  it  seem  like  itd  be  great  sinc  i  cant  use  more  than  thread  at  a  time  basic  i  want  to  do  someth  like  this  this  is  not  work  code  i  know  but  im  just  tri  to  illustr  what  i  want  i  left  out  a  bit  but  see  how  buff  and  dict  have  chang  valu  and  that  i  dont  know  how  long  the  input  is  i  dont  think  i  cant  actual  do  this  thought  becaus  well  worker  alreadi  exist  after  the  first  call  i  cant  just  say  worker  new  workerthread  a  bunch  of  time  sinc  isnt  it  alreadi  point  toward  an  exist  thread  true  a  thread  that  might  be  dead  and  obvious  in  this  implemen  if  it  did  work  i  wouldnt  be  run  in  parallel  but  my  point  is  i  want  to  keep  creat  thread  until  i  hit  the  max  pool  size  wait  till  a  thread  is  done  then  keep  creat  thread  until  i  hit  the  end  of  the  input  i  also  need  to  keep  stuff  in  order  which  is  the  part  that  realli  annoy  ,  simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc    