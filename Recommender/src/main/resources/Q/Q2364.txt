 question  ,  "public  class  intsafechecker  {static  int  thing;static  boolean  keepwatching  =  true;//  watcher  just  looks  for  monotonically  increasing  values  static  class  watcher  extends  thread  {public  void  run()  {boolean  hasbefore  =  false;int  thingbefore  =  0;while(  keepwatching  )  {//  observe  the  shared  intint  thingnow  =  thing;//  fake  the  1st  value  to  keep  test  happyif(  hasbefore  ==  false  )  {thingbefore  =  thingnow;hasbefore  =  true;}//  check  for  decreases  (due  to  partially  written  values)if(  thingnow  <  thingbefore  )  {system.err.println(""major  trouble!"");}thingbefore  =  thingnow;}}}//  modifier  just  counts  the  shared  int  up  to  1  billionstatic  class  modifier  extends  thread  {public  void  run()  {int  what  =  0;for(int  i  =  0;  i  <  1000000000;  ++i)  {what  +=  1;thing  =  what;}//  kill  the  watcher  when  donekeepwatching  =  false;}}public  static  void  main(string[]  args)  {modifier  m  =  new  modifier();watcher  w  =  new  watcher();m.start();w.start();}}"  ,are  java  primit  integ  int  atom  at  all  for  that  matter  some  experiment  with  two  thread  share  an  int  seem  to  indic  that  they  but  of  cours  absenc  of  evid  that  they  are  doe  not  impli  that  they  are  specif  the  test  i  ran  was  this  and  that  was  onli  tri  with  java  jre  on  a  bit  window  pc  essenti  the  modifi  write  a  count  sequenc  to  the  share  integ  while  the  watcher  check  that  the  observ  valu  never  decreas  on  a  machin  where  a  bit  valu  had  to  be  access  as  four  separ  byte  or  even  two  bit  word  there  would  be  a  probabl  that  watcher  would  catch  the  share  integ  in  an  inconsist  halfupd  state  and  detect  the  valu  decreas  rather  than  increas  this  should  work  whether  the  hypothet  data  byte  are  collectedwritten  lsb  st  or  msb  st  but  is  onli  probablist  at  best  it  would  seem  veri  probabl  given  today  wide  data  path  that  a  bit  valu  could  be  effect  atom  even  if  the  java  spec  doesnt  requir  itin  fact  with  a  bit  data  bus  it  would  seem  that  you  might  have  to  work  harder  to  get  atom  access  to  than  to  bit  int  googl  on  java  primit  thread  safeti  turn  up  load  of  stuff  on  threadsaf  class  and  object  but  look  for  the  info  on  the  primit  seem  to  be  look  for  the  proverbi  needl  in  a  haystack  ,       intdatatyp  simpleassignmentexpress  postincrementexpress        intdatatyp  simpleassignmentexpress  postincrementexpress  constant  constantinitializationstat  javalangobject  objectcreationstat  constructorcal        actualmethodparamet  stringliter  stringdatatyp  stringaddit  instancefield  simplevari  simpleassignmentexpress     postincrementexpress  simpleassignmentexpress  