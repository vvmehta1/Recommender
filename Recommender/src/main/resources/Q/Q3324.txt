 question  ,  "public  class  increasepoolsize{static  executorservice  service  =  null;public  static  void  main(string[]  args)  throws  jmsexception'  '  interruptedexception{int  noofth  =  2;int  nooftimestoinc  =  0;system.out.println(""start"");service  =  executors.newfixedthreadpool(noofth);for  (;;){if  (  ((threadpoolexecutor)service).getactivecount()  >=  noofth  ){if  (nooftimestoinc  <  1){system.out.println(""increased  threads-""  +  (nooftimestoinc  +  1)  +  ""  time(s)"");noofth  +=  2;system.out.println(""noofth-""  +  noofth);((threadpoolexecutor)service).setcorepoolsize(noofth);system.out.println(""total  no  of  theads  after  increasing-""  +  ((threadpoolexecutor)service).getcorepoolsize());nooftimestoinc++;}}else  if  (  ((threadpoolexecutor)service).getactivecount()  <=  noofth){service.execute(new  concretethread());}}}}class  concretethread  implements  runnable{public  void  run()  {try{  system.out.println(""thread  no-""  +  thread.currentthread().getid());  thread.sleep(5000);  system.out.println(""thread  no-""  +  thread.currentthread().getid()  +  ""  finished"");}catch(exception  e){e.printstacktrace();}}};  startthread  no-11thread  no-12increased  threads-1  time(s)noofth-4total  no  of  theads  after  increasing-4thread  no-13thread  no-14thread  no-11  finishedthread  no-12  finishedthread  no-13  finishedthread  no-14  finishedthread  no-15thread  no-16thread  no-13thread  no-14thread  no-15  finishedthread  no-16  finishedthread  no-13  finishedthread  no-14  finishedthread  no-17thread  no-18thread  no-13thread  no-14thread  no-17  finishedthread  no-18  finishedthread  no-13  finishedthread  no-14  finishedthread  no-19thread  no-20thread  no-13thread  no-14thread  no-19  finishedthread  no-20  finishedthread  no-13  finishedthread  no-14  finishedthread  no-21thread  no-22thread  no-13thread  no-14thread  no-21  finishedthread  no-22  finishedthread  no-13  finishedthread  no-14  finishedthread  no-23thread  no-24thread  no-13thread  no-14"  ,newfixedthreadpoolsetcorepools  doesnt  make  use  of  the  thread  creat  new  thead  explanationi  make  a  newfixedthreadpool  for  size  and  if  both  the  thread  of  this  pool  are  busi  i  add  two  more  thread  to  this  pool  use  setcorepools  in  this  process  it  doesnt  seem  to  reus  the  thread  or  may  be  termin  some  thread  and  creat  new  which  i  will  explain  with  code  it  is  seen  in  the  output  onc  thread  no  and  start  work  i  increas  the  number  by  two  and  so  thread  and  start  work  but  after  that  i  alway  creat  new  thread  instead  of  use  thread  and  and  reus  thread  and  ,  classdefinit  implementsspecif  methodimplement  methoddefinit  publicmethodspecifi  voiddatatyp  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  subtractexpress  addexpress  objectmethodinvoc  instancefield  simplevari    objectvari  simplevari     nulliniti  simpleassignmentexpress  trycatchstat  objectmethodinvoc  throwstat  objectcreationstat  constructorcal  actualmethodparamet  