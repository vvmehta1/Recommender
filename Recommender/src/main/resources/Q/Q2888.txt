 question  ,  "futuretask;  java.util.concurrent;  executorservice;  public  class  statustask<v>  extends  futuretask<v>  {private  final  itaskstatushandler<v>  statushandler;public  statustask(callable<v>  callable'  '  itaskstatushandler<v>  statushandler){super(callable);if  (statushandler  ==  null)throw  new  nullpointerexception(""statushandler  cannot  be  null"");this.statushandler  =  statushandler;statushandler.taskcreated(this);}@overridepublic  void  run()  {statushandler.taskrunning(this);super.run();}@overrideprotected  void  done()  {super.done();statushandler.taskcompleted(this);}};  cancel(true);;  run();  futuretask.run();  @overridepublic  void  run()  {if(!iscancelled())  {statushandler.taskrunning(this);super.run();}};  super.run()"  ,ive  extend  from  to  provid  callback  to  track  the  execut  of  task  submit  to  an  now  what  i  see  is  if  the  task  is  submit  but  end  up  queu  and  i  the  task  the  method  still  get  call  and  the  like  check  that  the  task  is  cancel  and  doesnt  call  the  wrap  callabl  should  i  do  egor  should  i  still  call  both  these  approach  seem  suscept  to  race  condit  in  between  check  for  cancel  and  do  someth  about  it  ani  thought  appreci  ,  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp  simplevari  ifstat  equalexpress  null  throwstat  objectcreationstat  constructorcal  actualmethodparamet  stringliter  stringdatatyp  objectvari  instancefieldinvoc  thisrefer  simpleassignmentexpress  objectmethodinvoc    simpleassignmentexpress  subtractexpress  