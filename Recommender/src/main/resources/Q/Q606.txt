 question  ,  "public  person(date  birthdate)  {this.birthdate  =  new  date(birthdate.gettime());}//  don't  do  this!public  boolean  isbabyboomer()  {//  unnecessary  allocation  of  expensive  objectcalendar  gmtcal  =  calendar.getinstance(timezone.gettimezone(""gmt""));gmtcal.set(1946'  '  calendar.january'  '  1'  '  0'  '  0'  '  0);date  boomstart  =  gmtcal.gettime();gmtcal.set(1965'  '  calendar.january'  '  1'  '  0'  '  0'  '  0);date  boomend  =  gmtcal.gettime();return  birthdate.compareto(boomstart)  >=  0&&  birthdate.compareto(boomend)  <  0;};  public  person(date  birthdate)  {this.birthdate  =  new  date(birthdate.gettime());}/**  *  the  starting  and  ending  dates  of  the  baby  boom.  */private  static  final  date  boom_start;private  static  final  date  boom_end;static  {calendar  gmtcal  =  calendar.getinstance(timezone.gettimezone(""gmt""));gmtcal.set(1946'  '  calendar.january'  '  1'  '  0'  '  0'  '  0);boom_start  =  gmtcal.gettime();gmtcal.set(1965'  '  calendar.january'  '  1'  '  0'  '  0'  '  0);boom_end  =  gmtcal.gettime();}public  boolean  isbabyboomer()  {return  birthdate.compareto(boom_start)  >=  0&&  birthdate.compareto(boom_end)  <  0;};  isbabyboomer();  public  static  void  main(string[]  args)  {calendar  cal  =  calendar.getinstance();cal.set(1960'  '  calendar.january'  '  1'  '  1'  '  1'  '  0);person  p  =  new  person(cal.gettime());long  starttime  =  system.nanotime();for  (int  i  =  0;  i  <  10000000;  i++)  {p.isbabyboomer();}long  stoptime  =  system.nanotime();long  elapsedtime  =  stoptime  -  starttime;double  mseconds  =  (double)  elapsedtime  /  1000000.0;system.out.println(mseconds);}"  ,im  studi  effect  java  and  in  item  of  the  book  joshua  bloch  talk  about  the  avoid  of  creat  unnecessari  object  an  exampl  demonstr  mutabl  date  object  that  are  never  modifi  onc  their  valu  have  been  comput  here  the  bad  practic  the  isbabyboom  method  unnecessarili  creat  a  new  calendar  timezon  and  two  date  instanc  each  time  it  is  invok  and  that  clear  make  sens  to  me  and  here  the  improv  code  calendar  timezon  and  date  instanc  are  creat  onli  onc  when  it  is  initializedbloch  explain  that  this  result  in  signific  perform  gain  if  the  methodi  invok  frequent  on  his  machin  bad  version  ms  for  million  invoc  improv  version  ms  for  million  invoc  but  when  i  run  the  exampl  on  my  system  the  perform  is  exact  the  same  msis  that  a  compil  featur  that  the  instanc  are  onli  creat  onc  edit  here  is  my  benchmark  cheer  markus  ,  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  returnstat  greaterequalexpress  andexpress  lessexpress  formalmethodparamet  instancefieldinvoc  thisrefer  objectcreationstat  constructorcal  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  simplevari  stringliter  stringdatatyp  booleandatatyp  staticmethodspecifi  longdatatyp  intdatatyp  forstat  postincrementexpress  subtractexpress  doubledatatyp  explicittypecast  divideexpress  javalangsystemoutprintln    intdatatyp  simplevari  instancefieldinvoc  thisrefer  simpleassignmentexpress  formalmethodparamet  privatefieldspecifi  instancefield  returnstat  objectcreationstat  constructorcal  actualmethodparamet  doubledatatyp  objectmethodinvoc  subtractexpress  javalangmathsqrt  multiplyexpress  addexpress  constantinvoc  