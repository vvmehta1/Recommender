 question  ,  "public  class  foo<t  extends  a>{public  foo<t>  somemethod(){system.out.println(""foo"");return  this;}}public  class  bar<t  extends  b>  extends  foo<t>  {  public  bar<t>  barmethod(){system.out.println(""bar"");return  this;  }}public  class  a{}public  class  b  extends  a{};  new  bar<b>().somemethod().barmethod();;@override  public  bar<t>  somemethod(){system.out.println(""foo"");return  this;};  public  <u  extends  foo<t>>  u  somemethod(){system.out.println(""foo"");return  this;}"  ,when  you  employ  a  fluent  approach  you  might  have  the  follow  scenario  a  strength  of  a  fluent  interfac  is  that  you  can  chain  method  invoc  but  whilst  bar  has  inherit  somemethod  the  return  type  is  foo  not  bar  which  would  break  the  follow  chain  one  answer  could  be  to  add  overrid  for  everi  inherit  method  such  that  bar  has  the  addit  method  but  in  larg  class  and  extend  class  hierarchi  this  can  prove  a  mess  of  redund  sure  is  there  an  appropri  return  type  to  give  to  fluent  method  wherebi  everi  class  that  inherit  it  will  return  an  object  of  it  specif  type  so  that  we  can  chain  method  without  cast  i  tri  to  ala  no  avail  i  am  hope  someon  know  of  a  simpl  and  eleg  solut  to  this  problem  the  project  is  larg  and  so  it  need  to  be  maintain  and  extens  if  possibl  thank  you  to  ani  help  you  can  provid  in  this  scenario  ,    