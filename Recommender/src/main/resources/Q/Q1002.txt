 question  ,  "'package  javaapplication12;import  java.awt.*;import  java.awt.event.keyevent;import  java.awt.event.keylistener;import  java.awt.geom.ellipse2d;import  java.awt.geom.rectangle2d;import  java.awt.geom.roundrectangle2d;import  java.util.arraylist;import  java.util.iterator;import  javax.swing.*;/**  bouncing  ball  (animation)  via  custom  thread  */public  class  javaapplication12  extends  jframe  implements  keylistener{//  define  named-constantsprivate  static  final  int  canvas_width  =  640;private  static  final  int  canvas_height  =  480;private  static  final  int  update_interval  =  30;  //  millisecondsint  xx  =  200;int  yy  =  400;shape  a1;shape  a2;rectangle2d  a3;rectangle2d  a12;rectangle2d  a4;rectangle2d  a5;rectangle2d  a6;rectangle2d  a7;rectangle2d  a8;rectangle2d  a9;rectangle2d  a10;rectangle2d  a11;rectangle2d  a13;rectangle2d  a14;rectangle2d  a15;rectangle2d  a16;rectangle2d  a17;rectangle2d  a18;rectangle2d  a19;rectangle2d  a20;rectangle2d  a21;rectangle2d  a22;rectangle2d  a23;rectangle2d  a25;arraylist<rectangle2d>  s  =  new  arraylist<rectangle2d>();color  c2  =  color.red;private  drawcanvas  canvas;  //  the  drawing  canvas  (extends  jpanel)//  attributes  of  moving  objectprivate  int  x  =  375;  //  top-left  (x'  '  y)private  int  y  =  355;private  int  size  =  20;//  width  and  heightprivate  int  xspeed  =  3;//  moving  speed  in  x  and  y  directionsprivate  int  yspeed  =  5;//  displacement  per  step  in  x  and  y  /**  constructor  to  setup  the  gui  components  */public  javaapplication12()  {canvas  =  new  drawcanvas();canvas.setpreferredsize(new  dimension(canvas_width'  '  canvas_height));this.setcontentpane(canvas);this.setdefaultcloseoperation(exit_on_close);this.pack();this.settitle(""bouncing  ball"");this.setvisible(true);addkeylistener(this);fun();  //  create  a  new  thread  to  run  update  at  regular  intervalthread  updatethread  =  new  thread()  {  @override  public  void  run()  {while  (true)  {  update();  //  update  the  (x'  '  y)  position  repaint();//  refresh  the  jframe.  called  back  paintcomponent()  try  {//  delay  and  give  other  thread  a  chance  to  runthread.sleep(update_interval);//  milliseconds  }  catch  (interruptedexception  ignore)  {}}  }};updatethread.start();  //  called  back  run()}/**  update  the  (x'  '  y)  position  of  the  moving  object  */public  void  update()  {x  +=  xspeed;y  +=  yspeed;if  (x  >  canvas_width  -  size  ||  x  <  0)  {  xspeed  =  -xspeed;}if  (y  >  canvas_height  -  size  ||  y  <  0)  {  yspeed  =  -yspeed;}}@overridepublic  void  keytyped(keyevent  ke)  {}@overridepublic  void  keypressed(keyevent  ke)  {int  keycode  =  ke.getkeycode();  if(keycode  ==  keyevent.vk_left)  {xx  =  xx-15;  }  if(keycode  ==  keyevent.vk_right)  {  xx  =  xx+15;  }}@overridepublic  void  keyreleased(keyevent  ke)  {  //  throw  new  unsupportedoperationexception(""not  supported  yet."");}/**  drawcanvas  (inner  class)  is  a  jpanel  used  for  custom  drawing  */class  drawcanvas  extends  jpanel  {private  static  final  long  serialversionuid  =  1l;@overridepublic  void  paintcomponent(graphics  g)  {  super.paintcomponent(g);//  paint  parent's  backgroundgraphics2d  d  =  (graphics2d)g;  for(rectangle2d  r  :  s){d.fill(r);}  setbackground(color.black);  g.setcolor(color.blue);  a1  =  new  ellipse2d.double(x'  'y'  'size'  'size);  a2  =  new  roundrectangle2d.double(xx'  'yy'  '120'  '10'  '20'  '20);  a25  =  new  rectangle2d.double(530'  '120'  '100'  '20);  d.fill(a1);  d.setpaint(c2);d.fill(a2);  if(a1.intersects(a3.getbounds()))  {  s.remove(a3);yspeed  =  -yspeed;  }  if(a1.intersects(a4.getbounds()))  {  s.remove(a4);yspeed  =  -yspeed;  }  if(a1.intersects(a5.getbounds()))  {  s.remove(a5);yspeed  =  -yspeed;  }  if(a1.intersects(a6.getbounds()))  {  s.remove(a6);yspeed  =  -yspeed;  }  if(a1.intersects(a7.getbounds()))  {  s.remove(a7);yspeed  =  -yspeed;  }  if(a1.intersects(a8.getbounds()))  {  s.remove(a8);yspeed  =  -yspeed;  }  if(a1.intersects(a9.getbounds()))  {  s.remove(a9);yspeed  =  -yspeed;  }  if(a1.intersects(a10.getbounds()))  {  s.remove(a10);yspeed  =  -yspeed;  }  if(a1.intersects(a11.getbounds()))  {  s.remove(a11);yspeed  =  -yspeed;  }  if(a1.intersects(a12.getbounds()))  {  s.remove(a12);yspeed  =  -yspeed;  }  if(a1.intersects(a13.getbounds()))  {  s.remove(a13);yspeed  =  -yspeed;  }  if(a1.intersects(a14.getbounds()))  {  s.remove(a14);yspeed  =  -yspeed;  }  if(a1.intersects(a15.getbounds()))  {  s.remove(a15);yspeed  =  -yspeed;  }  if(a1.intersects(a16.getbounds()))  {  s.remove(a16);yspeed  =  -yspeed;  }  if(a1.intersects(a17.getbounds()))  {  s.remove(a17);yspeed  =  -yspeed;  }  if(a1.intersects(a18.getbounds()))  {  s.remove(a18);yspeed  =  -yspeed;  }  if(a1.intersects(a19.getbounds()))  {  s.remove(a19);yspeed  =  -yspeed;  }  if(a1.intersects(a20.getbounds()))  {  s.remove(a20);yspeed  =  -yspeed;  }  if(a1.intersects(a21))  {  s.remove(a21);yspeed  =  -yspeed;  }  if(a1.intersects(a22))  {  s.remove(a21);yspeed  =  -yspeed;yspeed  =  -yspeed;  }  collide();}}public  final  void  fun(){a3  =  new  rectangle2d.double(20'  '15'  '100'  '20);a4  =  new  rectangle2d.double(150'  '15'  '100'  '20);  a5  =  new  rectangle2d.double(280'  '15'  '100'  '20);  a6  =  new  rectangle2d.double(400'  '15'  '100'  '20);  a7  =  new  rectangle2d.double(530'  '15'  '100'  '20);  a8  =  new  rectangle2d.double(20'  '50'  '100'  '20);  a9  =  new  rectangle2d.double(150'  '50'  '100'  '20);a10  =  new  rectangle2d.double(280'  '50'  '100'  '20);  a12  =  new  rectangle2d.double(400'  '50'  '100'  '20);a11  =  new  rectangle2d.double(530'  '50'  '100'  '20);a13  =  new  rectangle2d.double(20'  '85'  '100'  '20);  a14  =  new  rectangle2d.double(150'  '85'  '100'  '20);a15  =  new  rectangle2d.double(280'  '85'  '100'  '20);  a16  =  new  rectangle2d.double(400'  '85'  '100'  '20);a17  =  new  rectangle2d.double(530'  '85'  '100'  '20);a18  =  new  rectangle2d.double(20'  '120'  '100'  '20);  a19  =  new  rectangle2d.double(150'  '120'  '100'  '20);a20  =  new  rectangle2d.double(280'  '120'  '100'  '20);  a21  =  new  rectangle2d.double(400'  '120'  '100'  '20);  a22  =  new  rectangle2d.double(530'  '120'  '100'  '20);s.add(a3);s.add(a4);s.add(a5);s.add(a6);s.add(a7);s.add(a8);s.add(a9);s.add(a10);s.add(a11);s.add(a12);s.add(a13);s.add(a14);s.add(a15);s.add(a16);s.add(a17);s.add(a18);s.add(a19);s.add(a20);s.add(a21);s.add(a22);}public  void  collide()  {  if(a2.intersects(a1.getbounds()))  {  xspeed  =  +xspeed;  yspeed  =  -yspeed;}}  public  static  void  main(string[]  args)  {//  run  gui  codes  in  event-dispatching  thread  for  thread  safetyswingutilities.invokelater(new  runnable()  {  @override  public  void  run()  {new  javaapplication12();  //  let  the  constructor  do  the  job  }});  }}  `;  for-loop;  intersect()"  ,ok  im  new  to  java  game  program  im  program  a  game  that  is  like  a  brick  breaker  i  have  a  array  list  which  contain  some  rectangl  i  have  draw  it  use  a  enhanc  my  game  has  a  ball  and  when  the  ball  hit  the  rectangl  it  must  disappear  amd  at  the  same  time  the  ball  must  takea  revers  movement  everyth  work  fine  but  onc  the  rectangl  disappear  and  if  the  ball  goe  again  to  that  place  the  ball  take  revers  direct  even  though  the  rectangl  is  not  there  collison  check  use  method  ,  privatefieldspecifi  instancefield  instancefieldinitializationstat  intdatatyp  simpleassignmentexpress  addassignmentexpress  ifstat  greaterexpress  subtractexpress  orexpress  lessexpress  formalmethodparamet  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc  finalmethodspecifi  staticmethodspecifi 