 question  ,  class  job  extends  thread  {private  integer  number  =  0;public  void  run()  {for  (int  i  =  1;  i  <  1000000;  i++)  {number++;}}public  integer  getnumber()  {return  number;}}public  class  test  {public  static  void  main(string[]  args)  throws  interruptedexception  {job  thread  =  new  job();thread.start();synchronized  (thread)  {thread.wait();}system.out.println(thread.getnumber());}};  999999;  run();  thread  ,fromth  output  is  i  understand  that  when  a  thread  complet  it  method  it  termin  and  with  it  all  the  lock  the  thread  had  get  releas  howev  in  this  exercis  it  use  the  thread  object  as  a  lock  should  not  it  be  consid  as  a  normal  object  i  mean  the  lock  it  not  own  by  the  thread  but  by  the  main  thread  ,  classdefinit  extendsspecif  privatefieldspecifi  instancefield  instancefieldinitializationstat  simpleassignmentexpress  methoddefinit  publicmethodspecifi  voiddatatyp  intdatatyp  forstat  lessexpress  postincrementexpress  returnstat  publicclassspecifi  formalmethodparamet  staticmethodspecifi  throwsspecif  objectcreationstat  constructorcal  objectmethodinvoc  javalangsystemoutprintln  actualmethodparamet 