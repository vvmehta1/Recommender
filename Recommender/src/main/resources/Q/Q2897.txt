 question  ,  "public  class  parallelwriter  implements  runnable  {private  file  file;private  blockingqueue<item>  q;private  int  indentation;public  parallelwriter(  file  f  ){file  =  f;q  =  new  linkedblockingqueue<item>();indentation  =  0;}public  parallelwriter  append(  charsequence  str  ){try  {charseqitem  item  =  new  charseqitem();item.content  =  str;item.type  =  itemtype.charseq;q.put(item);return  this;}  catch  (interruptedexception  ex)  {throw  new  runtimeexception(  ex  );}}public  parallelwriter  newline(){try  {item  item  =  new  item();item.type  =  itemtype.newline;q.put(item);return  this;}  catch  (interruptedexception  ex)  {throw  new  runtimeexception(  ex  );}}public  void  setindent(int  indentation)  {try{indentcommand  item  =  new  indentcommand();item.type  =  itemtype.indent;item.indent  =  indentation;q.put(item);}  catch  (interruptedexception  ex)  {throw  new  runtimeexception(  ex  );}}public  void  end(){try  {item  item  =  new  item();item.type  =  itemtype.poison;q.put(item);}  catch  (interruptedexception  ex)  {throw  new  runtimeexception(  ex  );}}public  void  run()  {bufferedwriter  out  =  null;item  item  =  null;try{out  =  new  bufferedwriter(  new  filewriter(  file  )  );while(  (item  =  q.take()).type  !=  itemtype.poison  ){switch(  item.type  ){case  newline:out.newline();for(  int  i  =  0;  i  <  indentation;  i++  )out.append(""  "");break;case  indent:indentation  =  ((indentcommand)item).indent;break;case  charseq:out.append(  ((charseqitem)item).content  );}}}  catch  (interruptedexception  ex){throw  new  runtimeexception(  ex  );}  catch(ioexception  ex)  {throw  new  runtimeexception(  ex  );}  finally  {if(  out  !=  null  )  try  {out.close();}  catch  (ioexception  ex)  {throw  new  runtimeexception(  ex  );}}}private  enum  itemtype  {charseq'  '  newline'  '  indent'  '  poison;}private  static  class  item  {itemtype  type;}private  static  class  charseqitem  extends  item  {charsequence  content;}private  static  class  indentcommand  extends  item  {int  indent;}};  parallelwriter  w  =  new  parallelwriter(  myfile  );new  thread(w).start();///  lots  ofw.append(""  things  "").newline();w.setindent(2);w.newline().append(""  more  things  "");///  and  finallyw.end();"  ,i  have  a  program  that  perform  lot  of  calcul  and  report  them  to  a  file  frequent  i  know  that  frequent  write  oper  can  slow  a  program  down  a  lot  so  to  avoid  it  id  like  to  have  a  second  thread  dedic  to  the  write  oper  right  now  im  do  it  with  this  class  i  wrote  the  impati  can  skip  to  the  end  of  the  question  and  then  i  use  it  by  do  while  this  work  perfect  well  im  wonder  ,  simpleassignmentexpress  classdefinit  privateclassspecifi  staticclassspecifi  instancefield  simplevari  extendsspecif  intdatatyp  instancefieldinitializationstat  objectcreationstat  constructorcal  actualmethodparamet       classdefinit  instancefield  instancefieldinitializationstat  simpleassignmentexpress  genericobjectcreationstat  simplevari  implementsspecif  methodimplement  methoddefinit  publicmethodspecifi  voiddatatyp  whilestat  notequalexpress  null  actualmethodparamet  ifstat  objectmethodinvoc  objectcreationstat  constructorcal     