 question  ,  list;  arraylist<arraylist<arraylist<arraylist<string>>>>;  string[][][][];  object[][][][];  //  the  argument  of  this  function  is  a  (nested)  listpublic  static  object  convert(object  object)  {object[]  result  =  null;list  list  =  (list)  object;if  (list  !=  null)  {object  type  =  getelementtype(list);if  (type  instanceof  list)  {int  size  =  list.size();result  =  new  object[size];for  (int  counter  =  0;  counter  <  size;  counter++)  {object  element  =  list.get(counter);result[counter]  =  (element  !=  null)  ?  convert(element)  :  null;}}  else  {result  =  list.toarray();}}return  result;}private  static  object  getelementtype(list  list)  {object  result  =  null;for  (object  element  :  list)  {if  (element  !=  null)  {result  =  element;break;}}return  result;}  ,in  java  i  want  to  convert  a  nest  which  contain  at  the  deepest  level  a  uniform  type  into  an  multidimension  array  of  that  type  for  exampl  into  ive  tri  sever  thing  and  i  onli  can  obtain  an  array  of  object  likefor  simpl  list  it  seem  that  apach  common  lang  doe  the  work  but  i  cannot  figur  out  for  nest  casesin  order  to  obtain  a  multidimension  array  of  object  type  im  use  a  recurs  function  so  i  cannot  set  the  key  type  use  toarray  see  excerpt  ,    javalangobject  objectvari  simplevari  simpleassignmentexpress  lessexpress  greaterexpress     simpleassignmentexpress  arrayel  objectmethodinvoc  explicittypecast  actualmethodparamet  stringliter  stringdatatyp  arraycreationstat  arrayvari  arraydatatyp  intdatatyp  instancefieldinvoc  javalangobject  javalangsystemoutprintln     