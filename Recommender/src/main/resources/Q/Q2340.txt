 question  ,  "public  class  deadlock  {static  class  friend  {private  final  string  name;public  friend(string  name)  {this.name  =  name;}public  string  getname()  {return  this.name;}public  synchronized  void  bow(friend  bower)  {system.out.format(""%s:  %s  has  bowed  to  me!%n""'  '  this.name'  '  bower.getname());bower.bowback(this);}public  synchronized  void  bowback(friend  bower)  {system.out.format(""%s:  %s  has  bowed  back  to  me!%n""'  'this.name'  '  bower.getname());}}public  static  void  main(string[]  args)  {final  friend  alphonse  =  new  friend(""alphonse"");final  friend  gaston  =  new  friend(""gaston"");new  thread(new  runnable()  {public  void  run()  {  alphonse.bow(gaston);  }}).start();new  thread(new  runnable()  {public  void  run()  {  gaston.bow(alphonse);  }}).start();}}"  ,first  what  i  dont  get  is  the  blockag  occursth  main  function  initi  two  thread  that  each  begin  their  own  bow  what  exact  doe  synchron  blockth  same  function  run  for  the  same  object  as  i  origin  thoughtth  same  function  for  all  object  of  the  same  classal  synchron  function  for  the  same  objectal  synchron  function  for  all  object  of  the  same  class  help  me  out  here  ,  instancefieldinvoc  thisrefer  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  formalmethodparamet  synchronizedmethodspecifi  stringliter  stringdatatyp  modulusexpress  objectvari  simplevari  staticmethodspecifi  constant  constantinitializationstat  objectcreationstat  constructorcal          