 question  ,  "public  static  void  main(string[]  args)  {//some  other  initialization  code//make  array  of  thread  objectsthread[]  racecars  =  new  thread[numberofracecars];//fill  array  with  racecar  objectsfor(int  i=0;  i<numberofracecars;  i++)  {racecars[i]  =  new  racecar(laps'  '  args[i]);}//call  start()  on  each  threadfor(int  i=0;  i<numberofracecars;  i++)  {racecars[i].start();try  {racecars[i].join();  //this  is  where  i  tried  to  using  join()//it  just  blocks  all  other  threads  until  the  current//thread  finishes.}  catch(interruptedexception  e)  {e.printstacktrace();}}//this  is  the  line  i  want  to  execute  after  all  other  threads  have  finishedsystem.out.println(""it's  over!"");}"  ,in  my  program  i  am  creat  sever  thread  in  the  main  method  the  last  line  in  the  main  method  is  a  call  to  systemoutprintln  which  i  dont  want  to  call  until  all  the  thread  have  die  i  have  tri  call  threadjoin  on  each  thread  howev  that  block  each  thread  so  that  they  execut  sequenti  instead  of  in  parallel  is  there  a  way  to  block  the  main  thread  until  all  other  thread  have  finish  execut  here  is  the  relev  part  of  my  code  thank  for  the  help  guy  eric  ,  arrayel  postincrementexpress    objectvari  simplevari  objectmethodinvoc  javalangsystemoutprintln              returnstat  true  simpleassignmentexpress  