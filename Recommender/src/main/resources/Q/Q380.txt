 question  ,  public  class  main  {public  static  void  main(string[]  args)  {island  test  =  new  island();while(true)  {test.getcanvas().requestfocus();test.getcanvas().repaint();}}}  ,ive  been  work  on  a  generic  d  tile  style  game  current  in  my  main  thread  i  have  a  loop  that  just  goe  as  fast  as  it  possibl  can  and  call  the  repaint  method  of  a  jpanel  that  is  in  anoth  class  which  handl  the  game  stuff  it  look  like  this  getcanva  just  return  the  jpanel  current  this  has  done  what  ive  want  now  that  ive  start  ad  movement  for  a  player  and  obvious  i  dont  want  to  move  him  across  the  screen  as  fast  as  i  possibl  can  so  i  have  an  input  map  and  action  map  in  my  island  class  and  that  detect  the  key  press  and  releas  and  tell  my  player  class  which  key  are  be  held  i  then  move  my  player  about  insid  the  player  class  with  a  swing  timer  that  call  everi  ms  so  i  guess  this  is  like  my  game  tick  my  game  will  make  frame  as  fast  as  it  possibl  can  and  then  the  game  doe  all  it  logic  stuff  time  a  second  i  will  be  ad  more  to  the  gamelog  of  cours  not  just  movement  after  do  some  research  it  would  appear  a  swing  timer  isnt  the  best  way  of  do  this  as  it  is  design  for  do  small  task  and  for  swing  task  so  i  guess  my  question  is  is  it  sensibl  to  make  my  frame  the  way  i  am  in  my  main  method  and  what  would  be  a  good  way  of  get  my  game  to  tick  reliabl  everi  ms  or  whatev  ive  had  a  few  idea  like  mayb  i  should  make  a  new  thread  that  handl  the  game  logic  and  use  the  systemgetnanotim  or  whatev  it  call  to  measur  the  time  taken  to  do  a  tick  and  then  do  a  wee  threadsleep  for  howev  long  it  is  until  we  reach  ms  and  then  repeat  i  am  happi  to  post  more  code  if  you  want  and  thank  in  advanc  ,  classdefinit  publicclassspecifi  formalmethodparamet  methoddefinit  publicmethodspecifi  staticmethodspecifi  voiddatatyp  simpleassignmentexpress  objectcreationstat  constructorcal  whilestat  true  objectmethodinvoc    simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  ifstat  stringliter  stringdatatyp  javalangstringequalsignorecas  stringliteralmethodinvoc  objectcreationstat  constructorcal  finalfieldspecifi  instancefield  instancefieldinitializationstat  booleandatatyp  objectvari  simplevari  postincrementexpress  formalmethodparamet  privatemethodspecifi  longdatatyp  addexpress  divideexpress  greaterexpress  subtractexpress  lessexpress  stringaddit  intdatatyp  explicittypecast  greaterequalexpress  multiplyexpress  equalexpress  constantinvoc  staticmethodspecifi  trycatchstat  javalangstringsubstr  