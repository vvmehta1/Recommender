 question  ,  "public  class  test  {private  static  map<integer'  '  object>  clienttypesinitiated  =  new  concurrenthashmap<integer'  '  object>();/*  to  process  client  request  we  need  to  create  corresponding  client  type  data.on  the  first  signal  we  create  that  data'  '  on  the  second  -  we  process  the  request*/void  onclientrequestreceived(int  clienttypeindex)  {if  (clienttypesinitiated.put(clienttypeindex'  '  """")  ==  null)  {//new  client  type  index  arrived'  '  this  type  was  never  processed//process  data  for  that  client  type  and  put  it  into  the  map  of  typesobject  clienttypedata  =  createclienttypedata(clienttypeindex);clienttypesinitiated.put(clienttypeindex'  '  clienttypedata);}  else  {//already  existing  index  -  we  already  have  results  and  we  can  use  themprocessclientusingclienttypedata(clienttypesinitiated.get(clienttypeindex));}}object  createclienttypedata(int  clientindex)  {return  new  object();}void  processclientusingclienttypedata(object  clienttypedata)  {}}"  ,i  want  to  process  a  flow  of  client  request  each  request  has  it  special  type  first  i  need  to  initi  some  data  for  that  type  and  after  this  i  can  start  process  the  request  when  the  client  type  come  for  the  first  time  i  just  initi  the  correspond  data  after  this  all  the  follow  request  of  that  type  are  process  use  that  datai  need  to  do  this  in  a  threadsaf  manner  here  is  a  code  i  have  written  is  it  threadsaf  from  one  hand  concurrenthashmap  cannot  produc  mapputab  null  two  time  for  the  same  a  from  the  other  hand  the  assign  and  comparisson  oper  is  not  threadsafeso  is  this  code  is  okif  not  how  can  i  fix  it  updatei  have  accept  the  answer  of  martin  serrano  becaus  his  code  is  threadsaf  and  it  is  not  prone  to  doubl  initi  issu  but  i  would  like  to  note  that  i  have  not  found  ani  isssu  with  my  version  post  as  an  answer  below  and  my  version  doe  not  requir  synchron  ,  formalmethodparamet  intdatatyp  ifstat  objectmethodinvoc  actualmethodparamet          formalmethodparamet  intdatatyp  javalangobject  simpleassignmentexpress  objectmethodinvoc  actualmethodparamet  ifstat  equalexpress  null  objectvari  simplevari        simpleassignmentexpress     stringliter  stringdatatyp  equalexpress  null  simpleassignmentexpress  javalangobject  actualmethodparamet  objectmethodinvoc  formalmethodparamet  intdatatyp     privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  intdatatyp  simpleassignmentexpress  instancefieldinitializationstat  objectcreationstat  constructorcal  actualmethodparamet  formalmethodparamet  objectmethodinvoc  