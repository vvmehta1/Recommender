 question  ,  "package  com.sever.core;import  java.io.ioexception;import  java.net.socket;import  java.util.scanner;import  javax.swing.swingutilities;public  class  main  {  private  socketmanager  network;public  static  void  main(string[]  args){swingutilities.invokelater(new  runnable(){@overridepublic  void  run()  {window  window  =  new  window();window.setvisible(true);}  });swingutilities.invokelater(new  runnable(){@overridepublic  void  run()  {main  main  =  new  main();main.run();}  });  }public  void  run(){network  =  new  socketmanager(25595);while(true){try  {network.setsocket(network.getserversocket().accept());adduser(network.getsocket());thread  x  =  new  thread(network);x.start();}  catch  (exception  e)  {system.out.println(""failed  to  connect."");}}}public  void  adduser(socket  s){try  {scanner  input  =  new  scanner(s.getinputstream());network.adduser(input.nextline());}  catch  (exception  e)  {}}};  package  com.sever.core;import  java.awt.*;import  java.awt.event.keyevent;import  java.awt.event.keylistener;import  javax.swing.*;public  class  window  extends  jframe{private  int  screenwidth  =  800;private  int  screenheight  =  600;private  thread  thread;private  jpanel  window  =  new  jpanel();private  jtextarea  consle  =  new  jtextarea(""server  started...."");private  jtextfield  input  =  new  jtextfield();private  jscrollpane  consleinput  =  new  jscrollpane(consle);public  window(){this.setname(""namehere  -  server  software"");setresizable(true);setdefaultcloseoperation(jframe.exit_on_close);setsize(screenwidth'  'screenheight);window.setbackground(color.dark_gray);window.setlayout(new  boxlayout(window'  '  boxlayout.y_axis));conslesetup();addcomponets();}private  void  addcomponets(){add(window);window.add(consleinput);window.add(input);}private  void  conslesetup(){consle.seteditable(false);consle.setlinewrap(true);consle.setborder(borderfactory.createemptyborder(3'  '3'  '3'  '3));  consleinput.setverticalscrollbarpolicy(jscrollpane.vertical_scrollbar_always);input.setmaximumsize(new  dimension(integer.max_value'  'input.getpreferredsize().height));}private  void  addlisteners(){input.addactionlistener(new  actlis());input.setactioncommand(""input"");}};  package  com.sever.core;import  java.io.*;import  java.net.*;import  java.util.arraylist;public  class  socketmanager  implements  runnable{private  socket  sock;private  serversocket  sersoc;private  printwriter  output;private  bufferedreader  input;private  thread  thread;public  arraylist<socket>  currentconnections  =  new  arraylist<socket>();public  arraylist<string>  currentusers  =  new  arraylist<string>();public  socketmanager(string  ip'  '  int  port){try{sock  =  new  socket(ip'  'port);printwriter  output  =  new  printwriter(sock.getoutputstream());bufferedreader  input  =  new  bufferedreader(new  inputstreamreader(sock.getinputstream()));system.out.println(""server:  socket  started."");}catch(exception  e){system.out.println(""server:  socket  failed  to  connect."");}}public  socketmanager(int  port){try  {sersoc  =  new  serversocket(port);}  catch  (ioexception  e)  {system.out.println(""server:  socket  failed  to  connect."");}}public  socketmanager(socket  socket){this.sock  =  socket;try{output  =  new  printwriter(sock.getoutputstream());input  =  new  bufferedreader(new  inputstreamreader(sock.getinputstream()));}catch(exception  e){}}public  synchronized  void  checkconnetion(){if(!sock.isconnected()){for(int  x  =  0;  x  <=  currentconnections.size();  x++){if(currentconnections.get(x)  ==  sock){currentconnections.remove(x);system.out.println(""server:  disconnecting  from:  ""  +  currentconnections.get(x)  +  """");}}}}public  synchronized  socket  getsocket(){return  sock;}public  synchronized  serversocket  getserversocket(){return  sersoc;}public  synchronized  void  setsocket(socket  s){system.out.println(""setting  socket  to:  ""  +  s.getinetaddress());sock  =  s;}public  synchronized  void  addsocket(socket  s){currentconnections.add(s);}public  synchronized  void  adduser(string  u){currentusers.add(u);}public  synchronized  arraylist<socket>  getconnections(){return  currentconnections;}public  synchronized  arraylist<string>  getusers(){return  currentusers;}public  synchronized  void  send(string  data){try{output.println(data);}catch(exception  e){}}public  synchronized  void  close(){try{sock.close();}catch(exception  e){}output  =  null;input  =  null;system.gc();}public  synchronized  boolean  isconnected(){return  (sock  ==  null)  ?  false  :  (sock.isconnected()  &&  !sock.isclosed());}@overridepublic  void  run()  {system.out.println(""is  runing."");while(true){try  {checkconnetion();if(input.readline().isempty()){  return;}output.println(""server:  recived  your  message."");}  catch  (exception  e)  {}  finally{try  {sock.close();}  catch  (exception  e)  {}}}}};  package  com.sever.core;import  java.awt.event.*;import  javax.swing.*;public  class  actlis  implements  actionlistener{private  jtextfield  actionfield;public  actlis(){}public  actlis(jtextfield  t){actionfield  =  t;}@overridepublic  void  actionperformed(actionevent  e)  {//  todo  auto-generated  method  stubstring  cmd  =  e.getactioncommand();if(cmd  ==  ""input""){}}};  package  com.sever.core;import  java.io.ioexception;import  java.net.socket;import  java.util.scanner;import  javax.swing.swingutilities;import  javax.swing.swingworker;public  class  main  {  private  socketmanager  network;public  static  void  main(string[]  args){swingutilities.invokelater(new  runnable(){@overridepublic  void  run()  {window  window  =  new  window();window.setvisible(true);}  });swingworker  server  =  new  swingworker(){@overrideprotected  object  doinbackground()  throws  exception  {main  main  =  new  main();main.run();return  null;}};server.run();}public  void  run(){network  =  new  socketmanager(25595);while(true){try  {network.setsocket(network.getserversocket().accept());adduser(network.getsocket());thread  x  =  new  thread(network);x.start();}  catch  (exception  e)  {system.out.println(""failed  to  connect."");}}}public  void  adduser(socket  s){try  {scanner  input  =  new  scanner(s.getinputstream());network.adduser(input.nextline());}  catch  (exception  e)  {}}}"  ,i  know  i  know  alreadi  a  million  question  and  answer  on  this  everywher  ton  of  realli  detail  articl  on  it  sever  type  of  exampl  ive  spent  the  past  few  hour  read  about  it  but  that  not  do  the  trick  the  reason  im  ask  this  is  becaus  i  still  dont  quiet  understand  what  i  need  to  do  appar  becaus  my  code  is  still  not  work  i  get  the  idea  of  how  swing  work  with  the  edt  and  if  im  go  to  use  the  serversocket  accept  method  im  go  to  need  to  start  a  new  thread  for  swing  i  think  when  i  run  my  code  as  it  is  the  window  just  open  and  freezesher  are  some  of  the  place  ive  read  alreadi  the  new  mainclass  with  swingwork  ,  objectmethodinvoc  actualmethodparamet  objectcreationstat  constructorcal  privatemethodspecifi  fals  true  simpleassignmentexpress  importstat  ondemandimport  javautilarraylist  implementsspecif  methodimplement  privatefieldspecifi  instancefield  simplevari  publicfieldspecifi  instancefieldinitializationstat  genericobjectcreationstat  stringdatatyp  formalmethodparamet  constructordefinit  publicconstructorspecifi  classdefinit  publicclassspecifi  methoddefinit    objectvari  simplevari  simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc  instancefield  javalangsystemoutprintln  stringliter  stringdatatyp  