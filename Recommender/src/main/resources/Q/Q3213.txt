 question  ,  future;  timeoutexception;  thread  dump;  ioexception;  kill;  io;  thread  29587:  (state  =  in_native)  -  java.net.socketinputstream.socketread0(java.io.filedescriptor'  '  byte[]'  '  int'  '  int'  '  int)  @bci=0  (compiled  frame;  information  may  be  imprecise)  -  java.net.socketinputstream.read(byte[]'  '  int'  '  int)  @bci=84'  '  line=129  (compiled  frame)  -  java.io.bufferedinputstream.fill()  @bci=175'  '  line=218  (compiled  frame)  -  java.io.bufferedinputstream.read1(byte[]'  '  int'  '  int)  @bci=44'  '  line=258  (compiled  frame)  -  java.io.bufferedinputstream.read(byte[]'  '  int'  '  int)  @bci=49'  '  line=317  (compiled  frame)  -  sun.net.www.meteredstream.read(byte[]'  '  int'  '  int)  @bci=16'  '  line=116  (compiled  frame)  -  java.io.filterinputstream.read(byte[]'  '  int'  '  int)  @bci=7'  '  line=116  (compiled  frame)  -  sun.net.www.protocol.http.httpurlconnection$httpinputstream.read(byte[]'  '  int'  '  int)  @bci=4'  '  line=2672  (compiled  frame)  -  javax.imageio.stream.filecacheimageinputstream.readuntil(long)  @bci=64'  '  line=121  (compiled  frame)  -  javax.imageio.stream.filecacheimageinputstream.read(byte[]'  '  int'  '  int)  @bci=69'  '  line=167  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.readimageheader(long'  '  boolean'  '  boolean)  @bci=0  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.readnativeheader(boolean)  @bci=12'  '  line=532  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.checktablesonly()  @bci=92'  '  line=277  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.gotoimage(int)  @bci=41'  '  line=409  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.readheader(int'  '  boolean)  @bci=2'  '  line=525  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.readinternal(int'  '  javax.imageio.imagereadparam'  '  boolean)  @bci=3'  '  line=968  (compiled  frame)  -  com.sun.imageio.plugins.jpeg.jpegimagereader.read(int'  '  javax.imageio.imagereadparam)  @bci=8'  '  line=948  (compiled  frame)  -  javax.imageio.imageio.read(javax.imageio.stream.imageinputstream)  @bci=55'  '  line=1422  (compiled  frame)  -  javax.imageio.imageio.read(java.net.url)  @bci=42'  '  line=1374  (compiled  frame);  for(entry<requests'  '  future<?>>  futuretask  :  futuretasks.entryset()){future<?>  future  =  futuretask.getvalue();if(!future.isdone()  ||  future.iscancelled()){future.cancel(true);}}  ,we  are  use  with  a  timeout  to  accomplish  a  task  we  get  a  when  time  limit  exceed  from  the  behavior  of  i  realiz  that  under  thread  continu  is  it  the  case  how  doe  it  take  care  of  multipl  thread  roam  around  what  if  no  is  thrown  for  the  thread  which  was  remov  from  the  pool  if  this  is  true  what  is  the  way  to  under  thread  it  keep  on  wait  for  an  extern  in  my  case  a  part  of  thread  dump  onc  timeoutexcept  occur  for  ani  task  in  the  loop  we  cancel  the  task  like  this  shouldnt  it  solv  the  problem  pleas  advic  thank  in  advanc  ,  intdatatyp  simpleassignmentexpress  objectvari  simplevari  objectmethodinvoc  actualmethodparamet  booleandatatyp  lessexpress 