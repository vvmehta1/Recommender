 question  ,  "import  java.io.file;import  javax.sound.sampled.audioformat;import  javax.sound.sampled.audioinputstream;import  javax.sound.sampled.audiosystem;import  javax.sound.sampled.dataline;import  javax.sound.sampled.sourcedataline;//  plays  sounds  passed  to  it.  loop  stop  etc  to  be  supported  later'  '  maybe...publicclass  soundplayer  {file  filsound;boolean  isfilethere;public  void  loop()  {throw  new  unsupportedoperationexception(""create  something  first...  duh"");//http://stackoverflow.com/questions/2205565/java-clean-way-to-automatically-throw-unsupportedoperationexception-when-calling}public  void  play()  {if  (isfilethere)  {playsoundfile(filsound);}}public  void  play(file  file)  {playsoundfile(file);}public  static  void  playsoundfile(string  sfile)  {playsoundfile(new  file(sfile));}public  static  void  playsoundfile(final  file  file)  {//http://java.ittoolbox.com/groups/technical-functional/java-l/sound-in-an-application-90681new  thread(//http://stackoverflow.com/questions/4708254/how-to-play-audio-in-java-applicationnew  runnable()  {public  void  run()  {try  {//get  an  audioinputstreamaudioinputstream  ais  =  audiosystem.getaudioinputstream(file);//get  the  audioformat  for  the  audioinputstreamaudioformat  audioformat  =  ais.getformat();//ulaw  format  to  pcm  format  conversionif  ((audioformat.getencoding()  ==  audioformat.encoding.ulaw)||  (audioformat.getencoding()  ==  audioformat.encoding.alaw))  {audioformat  newformat  =  new  audioformat(audioformat.encoding.pcm_signed'  'audioformat.getsamplerate()'  'audioformat.getsamplesizeinbits()  *  2'  'audioformat.getchannels()'  'audioformat.getframesize()  *  2'  'audioformat.getframerate()'  '  true);ais  =  audiosystem.getaudioinputstream(newformat'  '  ais);audioformat  =  newformat;}//checking  for  a  supported  output  linedataline.info  datalineinfo  =  new  dataline.info(sourcedataline.class'  '  audioformat);if  (!audiosystem.islinesupported(datalineinfo))  {//system.out.println(""line  matching  ""  +  datalineinfo  +  ""  is  not  supported."");}  else  {//system.out.println(""line  matching  ""  +  datalineinfo  +  ""  is  supported."");//opening  the  sound  output  linesourcedataline  sourcedataline  =  (sourcedataline)  audiosystem.getline(datalineinfo);sourcedataline.open(audioformat);sourcedataline.start();//copy  data  from  the  input  stream  to  the  output  data  lineint  framesizeinbytes  =  audioformat.getframesize();int  bufferlengthinframes  =  sourcedataline.getbuffersize()  /  8;int  bufferlengthinbytes  =  bufferlengthinframes  *  framesizeinbytes;byte[]  sounddata  =  new  byte[bufferlengthinbytes];int  numberofbytesread  =  0;while  ((numberofbytesread  =  ais.read(sounddata))  !=  -1)  {int  numberofbytesremaining  =  numberofbytesread;system.out.println(numberofbytesread);sourcedataline.write(sounddata'  '  0'  '  numberofbytesread);}}}  catch  (exception  e)  {e.printstacktrace();}}}).start();}public  void  stop()  {throw  new  unsupportedoperationexception(""create  something  first...  duh"");//http://stackoverflow.com/questions/2205565/java-clean-way-to-automatically-throw-unsupportedoperationexception-when-calling}public  void  setsoundfile(file  file)  {isfilethere  =  true;filsound  =  file;}public  void  setsoundfile(string  sfile)  {isfilethere  =  true;filsound  =  new  file(sfile);}}"  ,i  am  use  a  class  that  i  cobbl  togeth  myself  base  on  a  sound  play  method  and  then  some  custom  code  the  onli  problem  is  that  im  not  sure  how  the  while  loop  that  copi  to  the  output  stream  in  the  playsoundfil  method  work  i  would  be  extrem  grate  for  a  quick  explan  of  it  as  well  as  ani  suggest  on  how  to  set  it  up  to  loop  prefer  without  set  up  a  timer  to  repeat  call  it  at  the  length  of  the  sound  file  my  code  ,  objectvari  simplevari  booleandatatyp  objectmethodinvoc  simpleassignmentexpress  actualmethodparamet  instancefield       classdefinit  implementsspecif  methodimplement  privatefieldspecifi  instancefield  instancefieldinitializationstat  booleandatatyp  simpleassignmentexpress  true  methoddefinit  publicmethodspecifi  voiddatatyp  objectmethodinvoc  objectcreationstat  constructorcal  actualmethodparamet  