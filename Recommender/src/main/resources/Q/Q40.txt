 question  ,  "public  class  patient()  {...}public  class  patientpersistent  extends  patient  {...public  void  foo()  {system.out.println(super.getclass().tostring());}};  public  class  dataobject<type>  {private  static  final  class<object>  dsttype  =  type;public  object  convert(object  srcdata;  final  beanfactory  factory)  {mapper  mapper  =  (mapper)factory.getbean(""dozermapper"");return  (object)mapper.map(srcdata;  dsttype);}}public  class  patient()  implements  serializable  {public  set  foo;}public  class  patientpersistent  extends  patient  {public  org.hibernate.collection.persistentset  foo;dataobject<patient>  converter  =  new  dataobject<patient>;public  patient  converttoserializable(final  beanfactory  factory)  {return  (patient)converter.convert(this;  factory);}}public  class  main()  {//  this  object  is  not  serializable  so  i  cannot  send  it  to  the  clientpatientpersistent  serializablebar  =  new  patientpersistent();//  using  dozer  to  copy  the  data  patientpersistent  ->  patient//  this  will  load  the  dozer  spring  bean  and  copy  as  mappedpatient  copiedserializabledata  =  serializablebar.converttopersistent(bar;  factory);}"  ,i  have  a  littl  problem  with  java  be  a  c  programm  i  have  relat  class  this  will  output  is  there  a  way  to  get  the  parent  class  type  ie  this  will  allow  me  to  general  some  method  which  i  need  to  implement  in  each  child  which  is  aw  thank  im  use  dozer  to  convert  my  domain  hibern  object  to  a  serializ  version  i  dont  want  the  client  to  know  of  this  so  the  client  onli  see  the  class  on  the  server  side  i  perform  convers  i  know  this  code  doe  not  work  but  it  just  to  make  my  point  i  would  like  to  be  abl  to  the  object  to  it  serializ  form  so  that  i  can  send  it  back  to  the  client  that  whi  i  would  like  to  give  the  parent  type  call  the  will  alway  be  the  same  thing  a  sourc  object  and  a  destclass  mayb  im  just  too  confus  with  java  thank  ,  constant  objectvari  simplevari  simpleassignmentexpress  explicittypecast  objectmethodinvoc  actualmethodparamet  stringliter  stringdatatyp  returnstat  publicfieldspecifi  instancefield  extendsspecif    superclassconstructorcal  objectmethodinvoc     objectmethodinvoc     objectmethodinvoc     