 question  ,  "package  com.robota.android;import  android.content.context;import  android.graphics.bitmap;import  android.graphics.bitmapfactory;import  android.graphics.canvas;import  android.util.attributeset;import  android.util.log;import  android.view.motionevent;import  android.widget.imageview;public  class  touchui  extends  imageview  {public  static  final  string  left_touchui  =  ""com.robota.android:id/lefttouchui"";public  static  final  string  right_touchui  =  ""com.robota.android:id/righttouchui"";private  string  whoami  =  new  string();private  mypoints  framepts  =  new  mypoints();private  mypoints  cursorpts  =  new  mypoints();private  bitmap  frame;private  bitmap  cursor;private  int  framewidth;private  int  frameheight;private  int  cursorheight;private  boolean  pointerdown  =  false;private  int  dy;public  touchui(final  context  context'  '  final  attributeset  as){super(context'  '  as);log.d(""touchui""'  '  getresources().getresourcename(this.getid()));whoami  =  new  string(getresources().getresourcename(this.getid()));if(whoami.equals(left_touchui)){frame  =  bitmapfactory.decoderesource(getresources()'  '  r.drawable.tank_left);}else  if(whoami.equals(right_touchui)){frame  =  bitmapfactory.decoderesource(getresources()'  '  r.drawable.tank_right);}cursor  =  bitmapfactory.decoderesource(getresources()'  '  r.drawable.cursor);framewidth  =  frame.getwidth();frameheight  =  frame.getheight();cursorheight  =  cursor.getheight();}public  void  determinepointers(int  x'  '  int  y){framepts.setorigin(x-framewidth/2'  '  y-frameheight/2);cursorpts.setorigin(x-framewidth/2'  '  y-frameheight/2);}@overridepublic  boolean  ontouchevent(motionevent  e){int  x  =  0;int  y  =  0;log.d(""touchui""'  '  "">>>>>  ""  +  whoami);if(e.getaction()  ==  motionevent.action_down){determinepointers(x'  'y);pointerdown  =  true;}else  if(e.getaction()  ==  motionevent.action_up){pointerdown  =  false;}else  if(e.getaction()  ==  motionevent.action_move){dy  =  (int)e.gety()-framepts.gety();if(dy  <=  0){dy=0;}else  if(dy+cursorheight/2  >=  frameheight){dy=frameheight;}sendmotorspeed(dy);}return  true;}public  void  sendmotorspeed(int  dy){float  motor  =  dy;motor-=frameheight;motor*=-1;motor  =  (motor/frameheight)*255;packetcontroller.updatemotorspeeds(whoami'  '  (int)motor);}public  void  ondraw(canvas  canvas){if(pointerdown){//twodown){canvas.drawbitmap(frame'  '  framepts.getx()'  '  framepts.gety()'  '  null);canvas.drawbitmap(cursor'  '  cursorpts.getx()'  '  (cursorpts.gety()+dy)'  '  null);}invalidate();}private  class  mypoints{private  int  x  =  -100;private  int  y  =  -100;private  int  deltay  =  0;;public  mypoints(){this.x  =  0;this.y  =  0;}public  int  getx(){return  this.x;}public  int  gety(){return  this.y;}public  void  setorigin(int  x'  '  int  y){this.x  =  x;this.y  =  y;}public  int  getdeltay(){return  deltay;}public  void  setdeltay(int  newy){deltay  =  (newy-y);log.d(""touchui""'  '  ""dy:  ""  +  deltay);}}};  <?xml  version=""1.0""  encoding=""utf-8""?><relativelayout  xmlns:android=""http://schemas.android.com/apk/res/android""android:id=""@+id/parentlayout""android:layout_width=""fill_parent""android:layout_height=""fill_parent""android:orientation=""vertical""><linearlayout  android:orientation=""horizontal""android:layout_width=""match_parent""android:layout_height=""match_parent""><com.robota.android.touchui  xmlns:android=""http://schemas.android.com/apk/res/android""android:id=""@+id/lefttouchui""android:background=""#0000""android:layout_height=""match_parent""android:layout_width=""wrap_content""android:layout_weight=""1""></com.robota.android.touchui><com.robota.android.touchui  xmlns:android=""http://schemas.android.com/apk/res/android""android:id=""@+id/righttouchui""android:background=""#0000""android:layout_height=""match_parent""android:layout_width=""wrap_content""android:layout_weight=""1""></com.robota.android.touchui></linearlayout>;  package  com.robota.android;import  android.app.activity;import  android.bluetooth.bluetoothadapter;import  android.bluetooth.bluetoothdevice;import  android.content.activitynotfoundexception;import  android.content.intent;import  android.os.bundle;import  android.os.handler;import  android.os.message;import  android.util.log;import  android.view.menu;import  android.view.menuinflater;import  android.view.menuitem;import  android.view.view;import  android.view.window;import  android.widget.scrollview;import  android.widget.textview;import  android.widget.toast;public  class  robotcontroller  extends  activity  {//  tag  used  to  keep  track  of  class  in  the  logprivate  static  final  string  tag  =  ""robotcontroller_new"";//  boolean  to  debuggingprivate  static  final  boolean  d  =  true;//  intent  request  codesprivate  static  final  int  disconnect_device  =  1;private  static  final  int  connect_device  =  2;private  static  final  int  request_enable_bt  =  3;//  handler  codespublic  static  final  int  message_read  =  1;public  static  final  int  message_write  =  2;//  local  bluetooth  adapterprivate  bluetoothadapter  bluetoothadapter  =  null;//  bluetooth  discovery  and  datahandlerprivate  bluetoothcomm  btcomm  =  null;//  debug's  textview'  '  this  is  where  strings  will  be  written  to  displayprivate  textview  tv;private  scrollview  sv;/**  called  when  the  activity  is  first  created.  */@overridepublic  void  oncreate(bundle  savedinstancestate)  {if(d)  log.d(tag'  '  ""++on  create++"");super.oncreate(savedinstancestate);requestwindowfeature(window.feature_no_title);setcontentview(r.layout.main);bluetoothadapter  =  bluetoothadapter.getdefaultadapter();if(bluetoothadapter  ==  null){if(d)  log.d(tag'  '  ""no  bluetooth  device"");toast.maketext(this'  '  ""bluetooth  is  not  available""'  '  toast.length_short).show();finish();return;}packetcontroller.controller  =  this;}public  void  onstart(){super.onstart();if(d)  log.d(tag'  '  ""++on  start++"");if(!bluetoothadapter.isenabled()){intent  enableintent  =  new  intent(bluetoothadapter.action_request_enable);startactivityforresult(enableintent'  '  request_enable_bt);}else{//  start  bluetoothcommif(btcomm  ==  null){setupcomm();}}}/**  *  creates  new  bluetooth  communication  */private  void  setupcomm(){if(d)  log.d(tag'  '  ""+++setupcomm+++"");btcomm  =  new  bluetoothcomm(this'  '  handler);}private  void  connectdevice(intent  data){if(d)  log.d(tag'  '  ""+++connectdevice+++"");string  addr  =  data.getextras().getstring(devicelistactivity.extra_device_address);bluetoothdevice  device  =  bluetoothadapter.getremotedevice(addr);if(d)  log.d(tag'  '""remote  addr:  ""+  addr);btcomm.connect(device);}private  void  disconnectdevice(){if(d)  log.d(tag'  '  ""---disconnectdevice---"");if(btcomm.getstate()  ==  btcomm.state_connected){btcomm.disconnect();}}@overridepublic  boolean  oncreateoptionsmenu(menu  menu){//super.oncreateoptionsmenu(menu);menuinflater  inflater  =  getmenuinflater();inflater.inflate(r.menu.menu'  '  menu);return  true;}@overridepublic  boolean  onoptionsitemselected(menuitem  item)  {intent  serverintent  =  null;switch(item.getitemid()){  case  r.id.insecure_connect_scan://  launch  the  devicelistactivity  to  see  devices  and  do  scanserverintent  =  new  intent(this'  '  devicelistactivity.class);try{startactivityforresult(serverintent'  '  connect_device);}catch(activitynotfoundexception  activitynotfound){log.e(tag'  '  ""could  not  start  devicelistactivity(insecure)"");}return  true;}return  false;}@overridepublic  void  onactivityresult(int  requestcode'  '  int  resultcode'  '  intent  data){switch(requestcode){case  connect_device:if(resultcode  ==  activity.result_ok){connectdevice(data);}break;case  disconnect_device:if(resultcode  ==  activity.result_ok){disconnectdevice();}break;}}public  handler  gethandler(){return  this.handler;}public  bluetoothcomm  getbtcomm(){return  this.btcomm;}//  the  handler  that  gets  information  back  from  the  bluetoothchatserviceprivate  final  handler  handler  =  new  handler()  {@overridepublic  void  handlemessage(message  msg)  {if(d)  log.d(tag'  '  ""check  message"");switch  (msg.what)  {case  message_read:if(d)  log.d(tag'  '  ""trying  to  read  message"");byte[]  readbuf  =  (byte[])  msg.obj;//  construct  a  string  from  the  valid  bytes  in  the  bufferstring  readmessage  =  new  string(readbuf'  '  0'  '  msg.arg1);if(d)  log.d(tag'  '  ""bytes:  ""  +  readbuf  +  ""  arg1:  ""  +  msg.arg1  +  ""  message:  ""  +  readmessage);tv.append(readmessage);break;case  message_write:if(d)  log.d(tag'  '  ""trying  to  send  message"");string  sendmessage  =  new  string(string.valueof(msg.obj));}}};}"  ,when  a  user  touch  the  android  screen  with  two  finger  draw  a  frame  at  each  touch  locat  with  a  cursor  for  each  frame  each  frame  is  a  custom  slider  that  the  cursor  will  move  up  and  down  all  the  way  up  will  be  middl  will  be  and  all  the  way  down  will  be  this  will  be  use  to  control  small  motor  similar  to  tank  turn  each  touch  control  a  separ  motor  send  signal  over  bluetooth  after  a  two  touch  and  everyth  is  drawn  i  want  to  be  abl  to  lift  off  either  finger  but  keep  the  cursor  at  what  ever  locat  it  was  last  at  while  the  other  finger  is  free  to  move  it  cursor  when  the  last  finger  is  lift  off  everyth  hide  and  reset  to  can  someon  explain  to  me  how  android  handl  their  touch  event  from  what  i  have  done  it  seem  if  i  lay  down  finger  the  finger  the  first  finger  will  regist  a  actiondown  and  the  second  will  regist  a  actionpointerdown  but  if  i  life  off  my  first  finger  my  second  finger  is  demot  and  now  all  of  the  event  my  second  finger  regist  doe  not  relat  to  actionpoint  and  instead  will  be  actiondown  actionup  etc  is  this  correct  touchuijava  mainxml  robotcontrollerjava  main  activ  class  ani  other  class  not  list  i  didnt  believ  need  to  be  but  if  they  are  need  pleas  let  me  know  ani  help  is  much  appreci  ,  constant  objectvari  simplevari  objectmethodinvoc  actualmethodparamet  simpleassignmentexpress  stringcreationstat  stringconstructorcal  ifstat  javalangstringequ  formalmethodparamet  intdatatyp  subtractexpress  divideexpress  stringliter  stringdatatyp  stringaddit  equalexpress  constantinvoc  true  fals  explicittypecast  ifelseifstat  lessequalexpress  addexpress  greaterequalexpress  floatdatatyp  multiplyexpress  privateclassspecifi  privatefieldspecifi  instancefield  instancefieldinitializationstat  constructordefinit  publicconstructorspecifi  instancefieldinvoc  thisrefer  returnstat  superclassmethodcal  superrefer  null  notexpress  objectcreationstat  constructorcal  privatemethodspecifi  trycatchstat  switchstat  caseclaus  breakstat  stringvari 