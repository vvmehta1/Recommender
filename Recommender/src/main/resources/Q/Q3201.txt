 question  ,  "try  {  list  children  =  root.getchildren();  iterator  iter  =  children.iterator();//parsing  the  xml  while(iter.hasnext())  {  element  child  =  (element)  iter.next();  parsequotesxml  quote  =  new  parsequotesxml(child'  '  this);  parse_tp.execute(quote);  }system.out.println(""print  it  after  all  the  threads  have  completed"");catch(exception  ex)  {ex.printstacktrace();}finally  {system.out.println(""print  it  in  the  end."");if(!parse_tp.isshutdown())  {if(parse_tp.getactivecount()  ==  0  &&  parse_tp.getqueue().size()  ==  0  )  {parse_tp.shutdown();}  else  {try  {parse_tp.awaittermination(30'  '  timeunit.seconds);}  catch  (interruptedexception  ex)  {log.info(""exception  while  terminating  the  threadpool  ""+ex.getmessage());ex.printstacktrace();}}}parse_tp.shutdown();}"  ,i  am  use  the  threadpoolexecutor  to  implement  thread  in  my  java  applicationi  have  a  xml  which  i  need  to  pars  and  add  each  node  of  it  to  a  thread  to  execut  the  complet  my  implement  is  like  this  parsetp  is  a  threadpool  object  creat  parsequotesxml  is  the  class  with  the  run  method  the  problem  is  the  two  print  out  statement  are  print  befor  the  other  thread  exit  i  want  to  make  the  main  thread  wait  for  all  other  thread  to  complet  in  normal  thread  implement  i  can  do  it  use  join  function  but  not  get  a  way  to  achiev  the  same  in  threadpool  executor  also  would  like  to  ask  if  the  code  written  in  final  block  to  close  the  threadpool  proper  thanksamit  ,  objectmethodinvoc  actualmethodparamet  instancefield  simplevari  stringliter  stringdatatyp  stringaddit    simpleassignmentexpress     