 question  ,  public  class  maze{public  static  void  main(string[]  args){int[][]  maze  =  {{1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1}'  '{0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1}'  '{1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1}'  '{1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1'  '1'  '1'  '0'  '1'  '0'  '1'  '0'  '1'  '0'  '1}'  '{1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '0'  '1'  '0'  '1'  '0'  '0'  '0'  '1}'  '{1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '1'  '0'  '1}};boolean[][]  poscheck  =  new  boolean[maze.length][maze[0].length];int  r  =  0;int  c  =  0;for(int  row  =  0;  row  <  maze.length;  row++){for(int  col  =  0;  col  <  maze[row].length;  col++){if(maze[row][col]==0){r  =  row;c  =  col;}}}maze[r][c]  =  3;mazesolver(1'  '  0'  '  0'  '  maze'  '  poscheck);}public  static  boolean  mazesolver(int  r'  '  int  c'  '  int  d'  '  int[][]maze'  '  boolean[][]  poscheck){maze[r][c]  =  2;if(maze[r][c]  ==  3){print(maze);return  true;}if((c+1  <  maze.length)  &&  maze[r][c+1]==0  &&  d  !=  1  &&  !poscheck[r][c+1]){if(d  !=  3)poscheck[r][c+1]  =  true;if(mazesolver(r'  '  c  +  1'  '  3'  '  maze'  '  poscheck)){maze[r][c]  =  2;return  true;}}if((r-1  >=  0)  &&  maze[r-1][c]==0  &&  !poscheck[r-1][c]  &&  d  !=  2){if(d  !=  4)poscheck[r-1][c]  =  true;if(mazesolver(r  -  1'  '  c'  '  4'  '  maze'  '  poscheck)){maze[r][c]  =  2;return  true;}}if((c-1  >=  0)  &&  maze[r][c-1]==0  &&  !poscheck[r][c-1]  &&  d  !=  3){if(d  !=  1)poscheck[r][c-1]  =  true;if(mazesolver(r'  '  c  -  1'  '  1'  '  maze'  '  poscheck)){maze[r][c]  =  2;return  true;}}if((r+1  <  maze.length)  &&  maze[r+1][c]==0  &&  !poscheck[r+1][c]  &&  d  !=  4){if(d  !=  2)poscheck[r+1][c]  =  true;if(mazesolver(r  +  1'  '  c'  '  4'  '  maze'  '  poscheck)){maze[r][c]  =  2;return  true;}}print(maze);return  false;}public  static  void  print(int[][]  maze){for(int  row  =  0;  row<maze.length;  row++){for(int  col  =  0;  col<maze[row].length;  col++)system.out.print(maze[row][col]);system.out.println();}}}  ,i  am  tri  to  write  a  maze  solver  use  recurs  and  it  seem  that  it  tri  each  direct  onc  then  stop  and  i  cant  figur  out  whi  if  you  see  a  problem  pleas  let  me  knowkey  is  an  open  space  is  a  wall  is  part  of  the  path  is  the  end  of  the  maze  ,  simpleassignmentexpress  multidimensionalarraydatatyp  instancefield  instancefieldinitializationstat  booleandatatyp  arraylength  instancefieldinvoc  arrayel  intdatatyp  forstat  lessexpress  postincrementexpress  ifstat  equalexpress  formalmethodparamet  staticmethodspecifi  simplevari  returnstat  true  notequalexpress  subtractexpress  actualmethodparamet  addexpress  objectvari  nestedforloop  javalangsystemoutprint  javalangsystemoutprintln    formalmethodparamet  staticmethodspecifi  ifstat  actualmethodparamet  javalangsystemoutprintln  stringliter  stringdatatyp  privatemethodspecifi  booleandatatyp  intdatatyp  subtractexpress  returnstat  true  addexpress  simpleassignmentexpress  multidimensionalarraydatatyp  privatefieldspecifi  staticfieldspecifi  classfield  simplevari  forstat  nestedforloop  lessexpress  arraylength  preincrementexpress  instancefieldinvoc  arrayel  javalangsystemoutprint  