 question  ,  "  public  static  void  main(string[]  args)  throws  interruptedexception  {runnablecontroller  controller  =  new  runnablecontroller();system.out.println(incomingqueue.size());controller.initializedb();controller.initialisethreads();system.out.println(""polling"");controller.initialupdate();  };private  void  initialisethreads(){  try  {threadexecutorread  =  executors.newfixedthreadpool(10);pollingsynchronizer  reader  =  new  pollingsynchronizer(incomingqueue'  'dbconnection);  threadexecutorread.submit(reader);}catch  (exception  e){e.printstacktrace();}};  private  void  initialupdate(){runnablecontroller.outgoingqueue  =  incomingqueue;if((runnablecontroller.outgoingqueue)!=  null){try  {threadexecutorfetch  =  executors.newfixedthreadpool(10);messageprocessor  updater  =  new  messageprocessor(outgoingqueue'  '  dbconnection);threadexecutorfetch.submit(updater);dbhandler  dbhandler  =  new  dbhandler();dbhandler.updatedb(getoutgoingqueue());}  catch  (exception  e)  {}}};  public  void  run()  {//  thread  in  the  poller  class  int  seqid  =  0;while(true)  {list<kpimessage>  list  =  null;try  {list  =  fullpoll(seqid);if  (!list.isempty())  {seqid  =  list.get(0).getsequence();incomingqueue.addall(list);this.outgoingqueue  =  incomingqueue;  system.out.println(""waiting"");system.out.println(""new  incoming  message"");while(true){wait(3000);notify();}}}  catch  (exception  e1)  {e1.printstacktrace();}}}public  void  run()  {//  second  thread  in  the  processor  classsynchronized  (this){runnablecontroller.setoutgoingqueue(generate(outgoingqueue));}notify();}  }  ;  java.lang.illegalmonitorstateexceptionat  java.lang.object.wait(native  method)at  pollingsynchronizer.run(pollingsynchronizer.java:76)at  java.util.concurrent.executors$runnableadapter.call(unknown  source)at  java.util.concurrent.futuretask$sync.innerrun(unknown  source)at  java.util.concurrent.futuretask.run(unknown  source)at  java.util.concurrent.threadpoolexecutor.runworker(unknown  source)at  java.util.concurrent.threadpoolexecutor$worker.run(unknown  source)at  java.lang.thread.run(unknown  source)"  ,how  to  pass  the  poll  thread  to  anoth  thread  for  processingth  program  execut  be  in  a  control  class  which  has  a  main  method  and  a  thread  pool  the  main  class  control  the  method  which  has  the  thread  for  poll  class  the  method  which  has  the  thread  for  the  proccesor  class  the  poller  class  and  the  control  class  the  control  should  handl  both  the  thread  poller  processor  and  it  should  onli  call  the  poller  processor  threadnow  my  question  is  how  to  make  the  poller  thread  wait  for  second  and  paralelli  notifi  theprocessor  ,  objectmethodinvoc  actualmethodparamet  instancefield  simplevari  privatemethodspecifi  simpleassignmentexpress  objectcreationstat  constructorcal 