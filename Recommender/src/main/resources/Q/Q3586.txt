 question  ,  "public  class  explosionexecutor{private  static  list<runnable>  queue=  new  arraylist<runnable>();private  static  thread  thread=  new  thread(new  runnable()  {public  void  run()  {while(true){runnable[]  queuedump;synchronized  (queue)  {if(queue.size()==0){try  {queue.wait();}  catch  (interruptedexception  e){e.printstacktrace();}}queuedump=  queue.toarray(new  runnable[0]);queue.clear();}for(runnable  r  :  queuedump)r.run();}}}'  '  ""nuke  explosions"");static{thread.start();}public  static  void  execute(runnable  command)  {synchronized  (queue)  {queue.add(command);queue.notify();}}"  ,this  code  seem  to  work  fine  so  far  in  test  howev  i  am  new  at  multithread  and  want  to  know  if  this  code  is  ideal  sinc  i  know  there  is  a  lot  of  dont  regard  concurr  is  there  a  better  way  to  make  an  executor  for  queu  runnabl  on  a  singl  thread  this  is  my  first  time  make  one  so  i  feel  inclin  to  believ  someth  could  be  better  ,  objectmethodinvoc  formalmethodparamet  staticmethodspecifi  actualmethodparamet       