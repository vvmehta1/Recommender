 question  ,  null,  ive  got  a  data  structur  which  consist  of  link  node  you  can  think  of  it  as  of  a  simpl  linkedlist  each  node  of  the  list  consist  of  some  valu  and  a  next  field  point  the  other  node  or  null  if  it  is  the  last  node  the  first  node  work  as  a  root  it  has  no  valu  it  onli  point  to  the  next  node  all  the  other  node  are  practic  immut  that  is  onc  they  are  creat  neither  their  valu  nor  their  next  field  chang  dure  lifetim  unless  the  structur  is  be  dispos  which  relat  to  a  specif  situat  one  onli  one  thread  add  new  node  to  the  front  of  the  list  it  is  accomplish  by  construct  a  new  object  set  it  field  and  set  the  next  field  to  the  object  point  by  the  root  then  set  the  root  next  field  to  this  new  node  the  other  node  brows  through  the  structur  onli  perform  read  they  have  a  refer  to  the  root  node  then  they  go  through  the  other  node  until  they  find  what  are  look  for  or  reach  the  end  of  the  list  my  question  is  is  it  suffici  to  make  the  next  field  volatil  from  my  understand  of  java  memori  model  if  the  main  thread  the  one  that  add  new  node  will  perform  a  volatil  write  when  ad  a  new  node  then  everyth  will  be  synchron  just  fine  and  no  inconsist  will  occur  also  is  it  right  to  assum  that  on  x  architectur  read  of  a  volatil  variabl  wont  incur  ani  perform  degrad  as  the  other  thread  will  frequent  brows  through  the  structur  read  the  next  field  it  is  import  that  this  can  be  done  freeli  without  ani  memori  barrier  etc  i  also  have  one  more  concern  the  thread  that  are  go  to  brows  the  structur  are  also  go  to  hold  some  addit  node  these  node  will  be  complet  threadloc  that  is  they  are  go  to  be  use  by  onli  the  thread  that  creat  them  and  are  not  go  to  be  share  at  allfor  these  addit  node  it  is  unnecessari  for  the  next  field  to  be  volatil  moreov  set  the  volatil  next  field  will  issu  a  memori  barrier  which  will  caus  an  undesir  perform  loss  i  wonder  is  there  a  way  to  avoid  this  ideal  it  would  be  just  perfect  if  the  next  field  would  work  sometim  as  a  volatil  field  and  sometim  as  a  normal  field  or  if  i  had  a  full  control  and  could  issu  memori  barrier  on  my  own  whenev  i  need  i  also  wonder  would  it  be  possibl  to  somehow  synchron  all  these  write  on  a  differ  volatil  variabl  for  exampl  some  other  complet  unrel  static  variabl  sinc  volatil  write  flush  all  the  pend  write  wouldnt  it  be  possibl  for  the  next  field  not  to  be  volatil  and  instead  a  differ  volatil  variabl  would  be  written  after  the  updat  thread  doe  all  the  workit  doe  not  look  veri  safe  to  me  sinc  there  is  no  happen  befor  relat  and  the  previous  write  might  get  reorder  next  field  assign  could  be  reored  with  the  valu  field  assign  lead  to  iter  thread  observ  inconsist  object  state  but  mayb  it  is  possibl  to  come  up  with  such  a  scheme  that  would  be  safe  how  about  this  one  updat  thread  first  construct  a  new  object  initi  it  valu  field  set  it  next  field  to  node  point  by  the  root  node  set  the  next  field  of  the  root  node  to  the  newli  creat  node  ,       classdefinit  publicclassspecifi  privatefieldspecifi  volatilefieldspecifi  instancefield  simplevari  formalmethodparamet  methoddefinit  simpleassignmentexpress  