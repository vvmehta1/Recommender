 question  ,  if  (user  choose  layouta)  {  initialize  layouta  }if  (user  choose  layoutb)  {  initialize  layoutb  }if  (user  choose  layoutc)  {initialize  layoutc  };  interface  layouthandler  {public  void  initializelayout();}class  layouta  implements  layouthandler  {  public  void  initialize  layout  {initialize  layout  a}}class  layoutb  implements  layouthandler  {  public  void  initialize  layout  {initialize  layout  b}}class  layoutc  implements  layouthandler  {  public  void  initialize  layout  {initialize  layout  c}};  public  static  void  main()  {  getlayoutselectionfromuser()  if  (user  choose  layouta)  {  layouthandler  layout  =  new  layouta();  }  if  (user  choose  layoutb)  {  layouthandler  layout  =  new  layoutb();  }  if  (user  choose  layoutc)  {  layouthandler  layout  =  new  layoutc();  }}  ,im  attempt  to  write  a  java  program  that  initi  certain  layout  base  on  what  the  user  select  what  i  want  to  do  is  tri  to  avoid  write  a  bunch  of  ifstat  so  the  code  can  be  scalabl  for  futur  use  if  more  layout  need  to  be  ad  i  heard  the  best  way  to  implement  this  is  use  polymorph  but  my  understand  of  polymorph  is  still  a  littl  fuzzysay  i  want  to  implement  this  case  i  was  think  of  creat  an  interfac  for  class  to  implement  what  confus  me  is  how  it  work  in  main  wont  i  still  need  a  condit  if  or  switch  statement  to  figur  out  which  class  to  instantiatethen  somewher  out  in  main  wouldnt  i  still  requir  a  switch  or  ifstat  in  the  main  program  to  figur  out  which  layout  the  user  has  chosen  dure  runtimethank  ,  classdefinit  interfacedefinit  methoddefinit  publicmethodspecifi  abstractmethoddefinit  voiddatatyp  implementsspecif  methodimplement  publicfieldspecifi  instancefield  simplevari  objectvari  staticmethodspecifi  ifstat  simpleassignmentexpress  objectcreationstat  constructorcal          simpleassignmentexpress  lessexpress           objectmethodinvoc        