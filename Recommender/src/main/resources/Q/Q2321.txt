 question  ,  public  class  someapp{private  consumer  consumer;private  producer  producer;public  static  void  main  (string  args[]){consumer  =  new  consumer();producer  =  new  producer();}}  ;  public  class  consumer  implements  runnable{public  consumer(){thread  consumer  =  new  thread(this);consumer.start();}public  void  run(){while(true){//get  an  object  off  the  queueobject  object  =  queuehandler.dequeue();//do  some  stuff  with  the  object}}};  public  class  producer  implements  runnable{public  producer(){thread  producer  =  new  thread(this);producer.start();}public  void  run(){while(true){//add  to  the  queue  some  sort  of  unique  objectqueuehandler.enqueue(new  object());}}};  public  class  queuehandler{//this  queue  class  is  a  thread  safe  (written  in  house)  classpublic  static  queue<object>  readq  =  new  queue<object>(100);public  static  void  enqueue(object  object){//do  some  stuffreadq.add(object);}public  static  object  dequeue(){//do  some  stuffreturn  readq.get();}};  public  class  someapp{queue<object>  readq;private  consumer  consumer;private  producer  producer;public  static  void  main  (string  args[]){readq  =  new  queue<object>(100);consumer  =  new  consumer(readq);producer  =  new  producer(readq);}}  ;  public  class  consumer  implements  runnable{queue<object>  queue;public  consumer(queue<object>  readq){readq  =  queue;thread  consumer  =  new  thread(this);consumer.start();}public  void  run(){while(true){//get  an  object  off  the  queueobject  object  =  queue.dequeue();//do  some  stuff  with  the  object}}};  public  class  producer  implements  runnable{queue<object>  queue;public  producer(queue<object>  readq){readq  =  queue;thread  producer  =  new  thread(this);producer.start();}public  void  run(){while(true){//add  to  the  queue  some  sort  of  unique  objectqueue.enqueue(new  object());}}};  //the  extended  queue  class  is  a  thread  safe  (written  in  house)  classpublic  class  queuehandler  extends  queue<object>{public  queuehandler(int  size){super(size);  //all  i'm  thinking  about  now  is  mcdonalds.}public  void  enqueue(object  object){//do  some  stuffreadq.add();}public  object  dequeue(){//do  some  stuffreturn  readq.get();}}  ,id  like  to  creat  some  sort  of  producerconsum  thread  app  but  im  not  sure  what  the  best  way  to  implement  a  queue  between  the  two  so  ive  some  up  with  two  idea  both  of  which  could  be  entir  wrong  i  would  like  to  know  which  would  be  better  and  if  they  both  suck  then  what  would  be  the  best  way  to  implement  the  queue  it  main  my  implement  of  the  queue  in  these  exampl  that  im  concern  about  im  extend  a  queue  class  that  is  an  in  hous  class  and  is  thread  safe  below  are  two  exampl  with  class  each  main  class  consum  class  produc  class  queue  class  main  class  consum  class  produc  class  queue  class  and  go  ,  classdefinit  publicclassspecifi  privatefieldspecifi  instancefield  simplevari  formalmethodparamet  methoddefinit  publicmethodspecifi  staticmethodspecifi  voiddatatyp  simpleassignmentexpress  objectcreationstat  constructorcal  implementsspecif  methodimplement  constructordefinit  publicconstructorspecifi  actualmethodparamet  objectmethodinvoc    objectvari  simplevari  simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet     