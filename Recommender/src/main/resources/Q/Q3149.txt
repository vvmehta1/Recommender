 question  ,  "public  class  clientcore  extends  thread{selectionkey  selkey=null;selector  sckt_manager=null;public  void  coreclient(){  system.out.println(""please  enter  the  text"");  bufferedreader  stdin=new  bufferedreader(new  inputstreamreader(system.in));  socketchannel  sc  =  null;try{  sc  =  socketchannel.open();sc.configureblocking(false);  sc.connect(new  inetsocketaddress(8888));int  i=0;  while  (!sc.finishconnect()){  }  for(int  ii=0;ii>-22;ii++){system.out.println(""enter  the  text"");string  hello_request  =stdin.readline().tostring();if(hello_request.equalsignorecase(""end"")){break;}system.out.println(""sending  a  request  to  helloserver"");bytebuffer  buffer  =  bytebuffer.wrap(hello_request.getbytes());sc.write(buffer);  }  }  catch  (ioexception  e)  {e.printstacktrace();}finally{  if  (sc  !=  null){try  {  sc.close();}catch  (exception  e){  e.printstacktrace();  }  }  }  }  public  void  run()  {try{coreclient();}catch(exception  ej){  ej.printstacktrace();}}}public  class  servercore  extends  thread{selectionkey  selkey=null;selector  sckt_manager=null;public  void  run()  {try{coreserver();}catch(exception  ej){ej.printstacktrace();}  }private  void  coreserver()  {try{serversocketchannel  ssc  =  serversocketchannel.open();try  {  ssc.socket().bind(new  inetsocketaddress(8888));  while  (true)  {  sckt_manager=selectorprovider.provider().openselector();  ssc.configureblocking(false);  socketchannel  sc  =  ssc.accept();  register_server(ssc'  'selectionkey.op_accept);if  (sc  ==  null)  {  }  else{  system.out.println(""received  an  incoming  connection  from  ""  +  sc.socket().getremotesocketaddress());  printrequest(sc);  system.err.println(""testing  1"");string  hello_reply  =  ""sample  display"";bytebuffer  buffer  =  bytebuffer.wrap(hello_reply.getbytes());system.err.println(""testing  2"");sc.write(buffer);  system.err.println(""testing  3"");sc.close();}}}catch  (ioexception  e){  e.printstacktrace();  }  finally{  if  (ssc  !=  null)  {  try  {  ssc.close();  }catch  (ioexception  e)  {  e.printstacktrace();  }  }  }}catch(exception  e){system.out.println(""ex  in  servcore  ""+e);}}private  static  void  printrequest(socketchannel  sc)  throws  ioexception{readablebytechannel  rbc  =  channels.newchannel(sc.socket().getinputstream());  writablebytechannel  wbc  =  channels.newchannel(system.out);  bytebuffer  b  =  bytebuffer.allocate(1024);  //  read  1024  bytes  while  (rbc.read(b)  !=  -1)  {b.flip();while  (b.hasremaining()){  wbc.write(b);  system.out.println();}b.clear();  }}  public  void  register_server(serversocketchannel  ssc'  'int  selectionkey_ops)throws  exception{ssc.register(sckt_manager'  'selectionkey_ops);  }}public  class  helloclient{public  void  coreclientchat()  {clientcore  t=new  clientcore();new  thread(t).start();}public  static  void  main(string[]  args)throws  exception{  helloclient  cl=  new  helloclient();  cl.coreclientchat();}}public  class  helloserver{public  void  coreserverchat(){servercore  t=new  servercore();new  thread(t).start();}public  static  void  main(string[]  args){  helloserver  st=  new  helloserver();  st.coreserverchat();}}"  ,i  built  a  simpl  chat  applic  use  nio  channel  i  am  veri  much  new  to  network  as  well  as  thread  this  applic  is  for  communic  with  server  server  client  chat  applic  my  problem  is  that  multipl  client  are  not  support  by  the  serverhow  do  i  solv  this  problemwhat  the  bug  in  my  code  ,  objectmethodinvoc  ifelsestat  equalexpress  null  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  objectvari  simplevari  stringaddit  stringinitializationstat  stringvari  simpleassignmentexpress  instancefield  ifstat  notequalexpress  trycatchstat  formalmethodparamet  privatemethodspecifi  staticmethodspecifi  throwsspecif  intdatatyp  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp  objectcreationstat  constructorcal 