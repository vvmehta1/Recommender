 question  ,  /***the  below  class  is  not  thread  safe.  the  assignments  to  int  values  would  be  *atomic  but  at  the  same  time  it  not  guaranteed  that  changes  would  be  visible  to  *other  threads.**/public  final  class  sharedint  {  private  int  value;  public  void  setvalue(int  value)  {this.value  =  value;  }  public  int  getvalue()  {return  this.value;  }};  /***  the  below  class  is  not  thread  safe  because  here  the  assignments  tolong  *are  not  atomic  as  well  as  changes  are  not*guaranteed  to  be  visible  to  other  threads.*/public  final  class  sharedlong  {private  long  value;public  void  setvalue(longvalue)  {this.value  =  value;}public  long  getvalue()  {  return  this.values;}};  int;  long;  long;  double  ,we  know  that  long  and  doubl  assign  are  not  atom  in  java  until  they  are  declar  volatil  my  question  is  how  doe  it  realli  matter  in  our  program  practic  for  instanc  if  you  the  see  below  class  whose  object  are  be  share  among  multipl  thread  now  consid  anoth  sharedlong  now  we  can  see  the  both  of  the  abov  version  are  not  thread  safe  in  case  of  it  is  becaus  thread  may  see  stale  valu  of  integ  while  in  case  if  they  can  see  corrupt  as  well  as  stale  valu  of  long  variablein  both  case  if  an  instanc  is  to  make  the  abov  class  thread  safe  we  need  to  declarethi  make  me  wonder  how  doe  it  realli  matter  if  assign  to  and  are  not  atom  dure  our  normal  cours  of  program  becaus  both  need  to  be  declar  volatil  or  synchron  for  multithread  access  so  my  question  is  ,  classdefinit  publicclassspecifi  finalclassspecifi  privatefieldspecifi  instancefield  intdatatyp  simplevari  formalmethodparamet  methoddefinit  publicmethodspecifi  voiddatatyp  instancefieldinvoc  thisrefer  simpleassignmentexpress  returnstat  longdatatyp  objectvari    objectmethodinvoc  longdatatyp  simplevari  whilestat  simpleassignmentexpress  equalexpress  orexpress  javalangsystemoutprintln  actualmethodparamet  intdatatyp  subtractexpress  javalangstringlength  forstat  lessexpress  postincrementexpress  stringliter  stringdatatyp  stringaddit  returnstat     