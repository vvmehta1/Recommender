 question  ,  "public  <e  extends  node>  receive(list<node>  list'  '  node<e  extends  node>  node){for  (node  element  :  list  ){  node.addelement((e)  element);  //type  erasure'  '  if  you  put  wrong  node  no  castexception  in  runtime  }};  public  <e  extends  node>  receive(list<node>  list'  '  node<e  extends  node>  node){for  (node  element  :  list  ){  if(element  instanceof  subnode1)  node.addelement((subnode1)  element);  else  if  (element  instanceof  subnode2)  node.addelement((subnode2)  element);  //(...)  else  if  (element  instanceof  subnode50)  node.addelement((subnode50)  element);}};  public  <e  extends  node>  receive(list<node>  list'  '  node<e  extends  node>  node){for  (node  element  :  list  ){  node.addelement(element.autodowncasttosubclassof(""node""));}}"  ,imagin  i  have  a  list  with  differ  type  of  a  certain  subclass  of  node  which  i  expect  to  be  the  same  type  or  get  a  classexcept  if  not  i  have  a  method  which  receiv  this  list  and  a  node  hold  and  expet  a  certain  type  i  would  like  to  do  someth  like  this  but  avoid  do  this  if  i  cannot  cast  to  generic  it  would  be  great  do  someth  like  this  all  this  option  are  take  into  account  nodeaddelement  node  so  is  expect  e  i  thought  of  chang  this  for  accept  ani  kind  of  node  and  make  the  cast  but  then  it  happen  thisshould  i  discard  this  second  approach  ,  objectvari  simplevari  formalmethodparamet    