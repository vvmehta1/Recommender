 question  ,  "package1;  package2;  package1;  protectedclass.java;  package  org.test.package1;public  class  protectedclass  {protected  void  foo  ()  {system.out.println(""foo"");}};  package2;  extendsprotectedclass.java;  package  org.test.package2;import  org.test.package1.protectedclass;public  class  extendsprotectedclassextends  protectedclass  {public  void  boo()  {foo();  //  this  works'  '  //  since  protected  method  is  visible  through  inheritance}public  static  void  main(string[]  args)  {extendsprotectedclass  epc  =  new  extendsprotectedclass();epc.foo();  //  why  is  this  working?  //  since  it  is  accessed  through  a  reference'  '  //  foo()  should  not  be  visible'  '  right?}};  package2;  usesextendedclass.java;  package  org.test.package2;public  class  usesextendedclass  {public  static  void  main(string[]  args)  {extendsprotectedclass  epc  =  new  extendsprotectedclass();epc.foo();  //  compilationerror:  //  the  method  foo()  from  the  type  protectedclass  //  is  not  visible}};  boo();  extendsprotectedclass;  foo();  foo();  main();  extendsprotectedclass;  epc;  usesextendedclass"  ,i  would  like  to  understand  what  happen  in  the  exampl  below  where  a  protect  member  is  be  access  from  outsid  the  packag  through  a  subclass  i  know  for  class  outsid  the  packag  the  subclass  can  see  the  protect  member  onli  through  inherit  there  are  two  packag  and  it  is  understood  that  the  method  in  can  access  sinc  protect  member  can  be  access  through  inherit  onli  my  question  is  whi  is  the  method  work  fine  when  access  through  a  refer  in  the  method  ofbut  when  access  through  the  refer  in  ,  classdefinit  publicclassspecifi  formalmethodparamet  methoddefinit  publicmethodspecifi  staticmethodspecifi  voiddatatyp          