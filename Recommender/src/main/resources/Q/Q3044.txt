 question  ,  "//  capture  output  from  process  called  child  on  a  separate  threadfinal  stringbuffer  outtext  =  new  stringbuffer("""");new  thread(new  runnable()  {public  void  run()  {inputstream  in  =  null;in  =  child.getinputstream();try  {if  (in  !=  null)  {bufferedreader  reader  =  new  bufferedreader(new  inputstreamreader(in));string  line  =  reader.readline();while  ((line  !=  null))  {outtext.append(line).append("""");serverfile.appenduseroptextfile(username'  '  opname'  '  outfile'  '  line+"""");line  =  reader.readline();}}}  catch  (ioexception  iox)  {throw  new  runtimeexception(iox);}}}).start();//  write  input  to  for  the  child  process  on  this  main  thread//string  intext  =  serverfile.readuseroptextfile(username'  '  opname'  '  infile);outputstream  out  =  child.getoutputstream();try  {out.write(intext.getbytes());out.close();}  catch  (ioexception  iox)  {throw  new  runtimeexception(iox);}//***here  is  where  i  need  to  wait  for  the  thread  to  finish  ***//  other  code  goes  here  that  needs  to  wait  for  outtext  to  get  all//  of  the  output  from  the  process//  then'  '  finally'  '  when  all  the  remaining  code  is  finished'  '  i  return//  the  contents  of  outtextreturn  outtext.tostring();"  ,i  have  a  java  class  that  creat  a  process  call  child  use  processbuilderth  child  process  generat  a  lot  of  output  that  i  am  drain  on  a  separ  thread  to  keep  the  main  thread  from  get  blockedhowev  a  littl  later  on  i  need  to  wait  for  the  output  thread  to  completetermin  befor  go  on  and  im  not  sure  how  to  do  thati  think  that  join  is  the  usual  way  to  do  this  but  im  not  sure  how  to  do  that  in  this  caseher  is  the  relev  part  of  the  java  code  ,  simpleassignmentexpress  instancefield  simplevari  throwstat  objectcreationstat  constructorcal  actualmethodparamet  objectvari       