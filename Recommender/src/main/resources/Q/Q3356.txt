 question  ,  "import  java.util.concurrent.*;import  java.util.*;import  java.io.*;class  folderscan  implements  runnable  {private  string  path;private  blockingqueue<file>  queue;private  countdownlatch  latch;private  file  endofworkfile;folderscan(string  path'  '  blockingqueue<file>  queue'  '  countdownlatch  latch'  'file  endofworkfile)  {this.path  =  path;this.queue  =  queue;this.latch  =  latch;this.endofworkfile  =  endofworkfile;}public  folderscan()  {}@overridepublic  void  run()  {findfiles(path);queue.add(endofworkfile);latch.countdown();}private  void  findfiles(string  path)  {try  {file  root  =  new  file(path);file[]  list  =  root.listfiles();for  (file  currentfile  :  list)  {if  (currentfile.isdirectory())  {findfiles(currentfile.getabsolutepath());}  else  {if  (currentfile.getname().tolowercase().endswith(("".txt"")))  {queue.put(currentfile);}}}}  catch  (interruptedexception  e)  {e.printstacktrace();}}}public  class  filescan  implements  runnable  {private  string  whatfind;private  blockingqueue<file>  queue;private  countdownlatch  latch;private  file  endofworkfile;public  filescan(string  whatfind'  '  blockingqueue<file>  queue'  'countdownlatch  latch'  '  file  endofworkfile)  {this.whatfind  =  whatfind;this.queue  =  queue;this.latch  =  latch;this.endofworkfile  =  endofworkfile;}public  filescan()  {}set<string>  words  =  new  hashset<string>();@overridepublic  void  run()  {while  (true)  {try  {file  file;file  =  queue.take();if  (file  ==  endofworkfile)  {break;}scan(file);}  catch  (interruptedexception  e)  {e.printstacktrace();}}latch.countdown();}private  void  scan(file  file)  {scanner  scanner  =  null;int  matches  =  0;try  {scanner  =  new  scanner(file);}  catch  (filenotfoundexception  e)  {system.out.println(""file  not  found."");e.printstacktrace();}while  (scanner.hasnext())  {string  word  =  scanner.next();words.add(word);}if  (words.contains(this.whatfind))  {matches++;}string  mystr  =  string.format(""file:  %s  -  and  the  number  of  matches  ""+  ""is:  %d""'  '  file.getabsolutepath()'  '  matches);system.out.println(mystr);}//  ask  user  about  inputpublic  void  askuserpathandword()  {bufferedreader  bufferedreader  =  new  bufferedreader(new  inputstreamreader(system.in));string  path;string  whatfind;blockingqueue<file>  queue  =  new  linkedblockingqueue<file>();try  {system.out.println(""please'  '  enter  a  path  and  word""+  ""(which  you  want  to  find):"");system.out.println(""please  enter  a  path:"");path  =  bufferedreader.readline();system.out.println(""please  enter  a  word:"");whatfind  =  bufferedreader.readline();if  (path  !=  null  &&  whatfind  !=  null)  {file  endofworkfile  =  new  file(""gameover.tmp"");countdownlatch  latch  =  new  countdownlatch(2);folderscan  folderscan  =  new  folderscan(path'  '  queue'  '  latch'  'endofworkfile);filescan  filescan  =  new  filescan(whatfind'  '  queue'  '  latch'  'endofworkfile);executor  executor  =  executors.newcachedthreadpool();executor.execute(folderscan);executor.execute(filescan);latch.await();system.out.println(""thank  you!"");}  else  {system.out.println(""you  did  not  enter  anything"");}}  catch  (ioexception  |  runtimeexception  e)  {system.out.println(""wrong  input!"");e.printstacktrace();}  catch  (interruptedexception  e)  {system.out.println(""interrupted."");e.printstacktrace();}}/**  *  @param  args  */public  static  void  main(string[]  args)  {long  starttime  =  system.currenttimemillis();new  filescan().askuserpathandword();long  stoptime  =  system.currenttimemillis();long  elapsedtime  =  stoptime  -  starttime;system.out.println(""runtime  time  ""  +  elapsedtime  +  ""  milliseconds."");}}"  ,program  need  to  find  if  word  is  in  file  if  this  search  was  success  would  show  frequenc  of  meet  word  in  file  but  this  dont  work  correct  match  isnt  true  question  ,  simplevari  objectvari  instancefieldinvoc  thisrefer  simpleassignmentexpress  stringdatatyp  instancefield  instancefieldinitializationstat  genericobjectcreationstat  objectmethodinvoc  javalangsystemoutprintln  actualmethodparamet  stringliter  stringaddit  ifstat  notequalexpress  null  andexpress  objectcreationstat  constructorcal  notexpress  formalmethodparamet  staticmethodspecifi  longdatatyp  subtractexpress    simplevari  objectvari  instancefieldinvoc  thisrefer  simpleassignmentexpress  objectmethodinvoc  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  stringaddit  ifstat  notequalexpress  null  andexpress  objectcreationstat  constructorcal  notexpress  instancefield  formalmethodparamet  staticmethodspecifi  longdatatyp  subtractexpress     stringdatatyp  simpleassignmentexpress  genericobjectcreationstat  ifstat  objectmethodinvoc  actualmethodparamet  instancefieldinvoc  thisrefer  postincrementexpress  