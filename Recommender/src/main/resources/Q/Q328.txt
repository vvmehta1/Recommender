 question  ,  "looped_forever;  loop_times;  package  com.jayitinc.ponygame;import  java.io.*;import  javax.sound.sampled.*;public  class  sound{thread  t;string  read;string  name;audioinputstream  stream  =  null;audioformat  format  =  null;//  new  sound'  '  the  string  it  it's  location  relative  to  your  project  folder.//  i  suggest  you  add  a  class  folder  in  the  project  properties  to  access  the//  files  from  there.public  sound(string  read'  '  string  name){sound  =  new  file(""sound/""  +  read);try{stream  =  audiosystem.getaudioinputstream(sound);}  catch  (exception  e){e.printstacktrace();}format  =  stream.getformat();this.name  =  name;}//  new  sound  with  set  volumepublic  sound(string  read'  '  float  volume'  '  string  name){this(read'  '  name);setvolume(volume);try{stream  =  audiosystem.getaudioinputstream(sound);}  catch  (exception  e){//  todo  auto-generated  catch  blocke.printstacktrace();}format  =  stream.getformat();}public  void  play(){t  =  new  thread(play);//  write  you  own  file  location  here  and  be  aware  that  it  need  to  be  an//  .wav  filet.start();}//  only  use  if  you  have  started  the  thread  firstpublic  void  stop(){//  stops  the  sound  thread  from  playingt.stop();}//  just  in  case  you  would  like  to  change  itpublic  void  setvolume(float  volume){this.volume  =  volume;}file  sound;boolean  muted  =  false;  //  this  should  explain  itselffloat  volume  =  100.0f;  //  this  is  the  volume  that  goes  from  0  to  100float  pan  =  0.0f;  //  the  balance  between  the  speakers  0  is  both  sides  and  it//  goes  from  -1  to  1boolean  isplaying;double  seconds  =  0.0d;  //  the  amount  of  seconds  to  wait  before  the  sound//  starts  playingboolean  looped_forever  =  false;  //  it  will  keep  looping  forever  if  this  is//  trueint  loop_times  =  0;  //  set  the  amount  of  extra  times  you  want  the  sound  to//  loop  (you  don't  need  to  have  looped_forever  set  to//  true)int  loops_done  =  0;  //  when  the  program  is  running  this  is  counting  the//  times  the  sound  has  looped  so  it  knows  when  to  stop//  the  rest  of  this  is  pretty  complicated'  '  you  don't  need  to  bother  with  it.final  runnable  play  =  new  runnable()  //  this  thread/runnable  is  for  playing//  the  sound{public  void  run(){try{//  check  if  the  audio  file  is  a  .wav  fileif  (sound.getname().tolowercase().contains("".wav"")){if  (format.getencoding()  !=  audioformat.encoding.pcm_signed){format  =  new  audioformat(audioformat.encoding.pcm_signed'  '  format.getsamplerate()'  '  format.getsamplesizeinbits()  *  2'  '  format.getchannels()'  '  format.getframesize()  *  2'  '  format.getframerate()'  '  true);stream  =  audiosystem.getaudioinputstream(format'  '  stream);}sourcedataline.info  info  =  new  dataline.info(sourcedataline.class'  '  stream.getformat()'  '  (int)  (stream.getframelength()  *  format.getframesize()));sourcedataline  line  =  (sourcedataline)  audiosystem.getline(info);line.open(stream.getformat());line.start();//  set  volumefloatcontrol  volume_control  =  (floatcontrol)  line.getcontrol(floatcontrol.type.master_gain);volume_control.setvalue((float)  (math.log(volume  /  100.0f)  /  math.log(10.0f)  *  20.0f));//  mutebooleancontrol  mute_control  =  (booleancontrol)  line.getcontrol(booleancontrol.type.mute);mute_control.setvalue(muted);floatcontrol  pan_control  =  (floatcontrol)  line.getcontrol(floatcontrol.type.pan);pan_control.setvalue(pan);int  num_read  =  0;byte[]  buf  =  new  byte[line.getbuffersize()];while  ((num_read  =  stream.read(buf'  '  0'  '  buf.length))  >=  0){int  offset  =  0;while  (offset  <  num_read){offset  +=  line.write(buf'  '  offset'  '  num_read  -  offset);}}line.drain();line.stop();if  (looped_forever){new  thread(play).start();}  else  if  (loops_done  <  loop_times){loops_done++;new  thread(play).start();}}}  catch  (exception  ex){ex.printstacktrace();}}};public  int  getlength(){long  audiofilelength  =  sound.length();int  framesize  =  format.getframesize();float  framerate  =  format.getframerate();float  durationinseconds  =  (audiofilelength  /  (framesize  *  framerate));return  (int)  durationinseconds;}public  void  setpan(float  pan){this.pan  =  pan;}public  float  getpan(){return  pan;}public  void  setloop(boolean  loop){looped_forever  =  loop;}public  boolean  getloop(){return  looped_forever;}public  string  getname(){return  name;}public  void  setname(string  name){this.name  =  name;}}"  ,im  tri  to  develop  a  game  and  ive  found  sourc  for  sound  i  post  the  whole  class  below  it  wont  seem  to  loop  even  when  or  is  setup  to  do  soi  need  to  be  abl  to  control  volum  so  if  you  have  anoth  class  pleas  make  sure  it  can  control  volum  ,  floatdatatyp  simplevari  stringvari  stringdatatyp  objectmethodinvoc  simpleassignmentexpress  actualmethodparamet  instancefield  intdatatyp  longdatatyp  javalangstringlength  divideexpress  multiplyexpress  returnstat  explicittypecast  formalmethodparamet  instancefieldinvoc  thisrefer  booleandatatyp 