 question  ,  public  void  doupdate()  {if  (isinterrupted())return;synchronized  (this)  {request++;notify();}}public  void  quit()  {interrupt();synchronized  (this)  {notify();}}  public  void  run()  {while  (!isinterrupted())  {try  {final  long  r;synchronized  (this)  {r  =  request;}//  call  refreshable  update  from  this  threadif  (r  >  0)refresh();  //  will  trigger  re-computationsynchronized  (this)  {if  (r  ==  request)  {request  =  0;  //  resetwait();}//  else  loop  through  to  update  again}}  catch  (exception  e)  {e.printstacktrace();}}}public  void  refresh()  {//  execute  computation  and  paint  it...};  updater.doupdate();  refresh()  ,i  have  a  usecas  come  from  a  gui  problem  i  would  like  to  submit  to  your  sagacityi  have  a  gui  that  display  a  comput  result  depend  on  some  paramet  the  user  set  in  a  gui  for  instanc  when  the  user  move  a  slider  sever  event  are  fire  that  all  trigger  a  new  comput  when  the  user  adjust  the  slider  valu  from  a  to  b  a  dozen  of  event  are  fire  but  the  comput  can  take  up  to  sever  second  wherea  the  slider  adjust  can  fire  an  event  everi  few  ms  how  to  write  a  proper  thread  that  would  listen  to  these  event  and  kind  of  filter  them  so  that  the  repaint  of  the  result  is  live  ideal  you  would  like  someth  like  a  friend  of  mine  a  cardona  propos  this  low  level  approach  of  an  updat  thread  that  prevent  too  mani  event  to  trigger  a  comput  i  copypast  it  here  gpl  he  put  this  in  a  class  that  extend  thread  everytim  an  event  is  sent  by  the  gui  state  that  paramet  have  been  chang  we  call  this  caus  the  method  to  be  call  much  less  but  i  have  no  control  on  this  i  was  wonder  if  there  is  anoth  way  to  do  that  that  would  use  the  jacaconcurr  class  but  i  could  not  sort  in  the  executor  framework  what  would  be  the  one  i  should  start  with  doe  ani  of  you  have  some  experi  with  a  similar  use  casethank  ,  ifstat  postincrementexpress    simpleassignmentexpress           volatilefieldspecifi  instancefield  simplevari  formalmethodparamet  