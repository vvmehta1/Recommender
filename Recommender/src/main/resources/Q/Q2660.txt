 question  ,  gettime;  settime;  getvolume;  setvolume;  sendandreceive();  byte[]  retval  =  null;bluetoothsocket  socket  =  getsocket();//  writesocket.getoutputstream().write(payload);//  read  responseif(responseexpected){byte[]  buffer  =  new  byte[1024];  //  buffer  store  for  the  streamint  readbytes  =  socket.getinputstream().read(buffer);retval  =  new  byte[readbytes];system.arraycopy(buffer'  '  0'  '  retval'  '  0'  '  readbytes);}return  retval;;  futuretask<byte[]>  thetask  =  null;//  create  new  taskthetask  =  new  futuretask<byte[]>(new  callable<byte[]>()  {@overridepublic  byte[]  call()  {byte[]  retval  =  null;bluetoothsocket  socket  =  getsocket();//  writesocket.getoutputstream().write(payload);//  read  responseif(responseexpected){byte[]  buffer  =  new  byte[1024];  //  buffer  store  for  the  streamint  readbytes  =  socket.getinputstream().read(buffer);retval  =  new  byte[readbytes];system.arraycopy(buffer'  '  0'  '  retval'  '  0'  '  readbytes);}return  retval;}});//  start  task  in  a  new  threadnew  thread(thetask).start();//  wait  for  the  execution  to  finish'  '  timeout  after  6  secsbyte[]  response;try  {response  =  thetask.get(6l'  '  timeunit.seconds);}  catch  (interruptedexception  e)  {throw  new  cbtexception(e);}  catch  (executionexception  e)  {throw  new  cbtexception(e);}  catch  (timeoutexception  e)  {throw  new  cbtcalltimedoutexception(e);}return  response;}  ,i  have  written  a  bluetooth  api  for  connect  with  an  extern  accessoryth  way  that  the  api  is  design  is  that  there  are  a  bunch  of  block  call  such  as  etcth  way  these  work  is  that  they  creat  a  payload  to  send  and  call  a  method  call  which  doe  some  prep  work  and  eventu  doe  the  follow  the  problem  is  that  sometim  this  devic  becom  slow  or  nonrespons  so  i  would  like  to  put  a  timeout  on  this  calli  have  tri  sever  method  of  put  this  code  in  a  threadutur  task  and  run  it  with  a  timeout  for  exampl  the  problem  with  this  approach  is  that  i  cant  rethrow  except  in  the  call  method  and  sinc  some  of  the  method  throw  except  i  want  to  forward  back  to  the  api  client  i  cant  use  this  methodolog  can  you  recommend  some  other  alternativethank  ,  simpleassignmentexpress  instancefield  instancefieldinitializationstat  bytedatatyp  objectvari  simplevari  arraydatatyp  trycatchstat  objectmethodinvoc  throwstat  objectcreationstat  constructorcal  actualmethodparamet    objectmethodinvoc  instancefield  simplevari  actualmethodparamet  true  throwstat  objectcreationstat  constructorcal  