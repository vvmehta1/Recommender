 question  ,  class  singleton{private  static  singleton  instance;private  singleton(){}public  static  synchronized  singleton  getinstance(){if(instance  ==  null)  instance  =  new  singleton();return  instance;}}  ,i  understand  that  doubl  lock  in  java  is  broken  so  what  are  the  best  way  to  make  singleton  thread  safe  in  javath  first  thing  that  spring  to  my  mind  is  doe  this  work  if  so  is  it  the  best  way  i  guess  that  depend  on  circumst  so  state  when  a  particular  techniqu  is  best  would  be  use  ,  classdefinit  privatefieldspecifi  staticfieldspecifi  classfield  simplevari  constructordefinit  privateconstructorspecifi  methoddefinit  publicmethodspecifi  staticmethodspecifi  synchronizedmethodspecifi  ifstat  equalexpress  null  simpleassignmentexpress  objectcreationstat  constructorcal  returnstat    classdefinit  publicclassspecifi  constructordefinit  privateconstructorspecifi  privateclassspecifi  staticclassspecifi  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  methoddefinit  publicmethodspecifi  staticmethodspecifi  returnstat     classdefinit  constructordefinit  privateconstructorspecifi  methoddefinit  publicmethodspecifi  returnstat     classdefinit  publicfieldspecifi  staticfieldspecifi  classfield  instancefieldinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  instancefield  simplevari     classdefinit  privateclassspecifi  staticclassspecifi  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  simpleassignmentexpress  objectcreationstat  constructorcal  methoddefinit  publicmethodspecifi  staticmethodspecifi  returnstat  