 question  ,  "package  com.java.util.concurrent;import  java.util.concurrent.callable;import  java.util.concurrent.futuretask;import  java.util.concurrent.scheduledfuture;import  java.util.concurrent.scheduledthreadpoolexecutor;public  class  futuretester  {/**  *  @param  args  *  @throws  interruptedexception  */public  static  void  main(string[]  args)  throws  interruptedexception  {//  todo  auto-generated  method  stubint  poolcnt  =  1;callable<numberprinter>  numberprinter  =  null;scheduledthreadpoolexecutor  schpool  =  new  scheduledthreadpoolexecutor(poolcnt);scheduledfuture<numberprinter>[]  numprinterfutures  =  new  scheduledfuture[poolcnt];futuretask<numberprinter>[]  futuretask  =  new  futuretask[poolcnt];for  (int  i  =  0;  i  <  poolcnt;  i++)  {numberprinter  =  new  numberprinter();futuretask[i]  =  new  futuretask<numberprinter>(numberprinter);/*  *  numprinterfutures[i]  =  (scheduledfuture<numberprinter>)  schpool  *  .schedule(futuretask[i]'  '  0'  '  timeunit.milliseconds);  */numprinterfutures[i]  =  (scheduledfuture<numberprinter>)  schpool.submit(futuretask[i]);}//thread.sleep(30);if  (numprinterfutures.length  >  0)  {system.out.println(""task  completed  ?  ""+  numprinterfutures[0].isdone());system.out.println(""task  cancelled  ?  ""+  numprinterfutures[0].cancel(true));system.out.println(""is  task  cancelled  ?  ""+  numprinterfutures[0].iscancelled());}}}class  numberprinter  implements  callable<numberprinter>  {private  int  counter  =  10;@overridepublic  numberprinter  call()  throws  exception  {//  todo  auto-generated  method  stubwhile  (counter  >  0)  {if  (thread.interrupted())  {/*ouch  !!!*/return  null;}system.out.println(""counter  =  ""  +  (counter--));}return  this;}};  counter  =  10task  completed  ?  falsecounter  =  9task  cancelled  ?  truecounter  =  8is  task  cancelled  ?  truecounter  =  7counter  =  6counter  =  5counter  =  4counter  =  3counter  =  2counter  =  1;  task  completed  ?  falsecounter  =  10task  cancelled  ?  trueis  task  cancelled  ?  true"  ,i  was  simpli  explor  the  javautilconcurr  packag  i  learnt  that  the  class  has  a  methodpleas  find  attach  the  test  code  i  wrote  intiallyi  assum  that  cancel  a  task  will  also  stop  the  execut  of  a  run  thread  but  i  got  the  output  as  follow  on  further  read  on  stackoverflow  itselfit  was  said  thatth  output  was  as  follow  ,  simpleassignmentexpress       actualmethodparamet  true  simpleassignmentexpress     