 question  ,  "06:55:49  guest  9  (online)says  :  hello  server.  message  number^406:55:49  guest  9  (online)says  :  hello  server.  message  number^506:55:49  guest  11  (online)says  :  hello  server.  message  number^006:55:49  guest  4  (online)says  :  hello  server.  message  number^6error  serverthread  -  error  in  reading  from  stream:  java.net.socketexception:  software  caused  connection  abort:  recv  failederror  serverthread  -  error  in  reading  from  stream:  java.net.socketexception:  software  caused  connection  abort:  recv  failed06:55:49  guest  9  (online)says  :  hello  server.  message  number^6;  public  class  serverthread  implements  runnable  {private  static  final  logger  log  =  logger.getlogger(serverthread.class);private  xmlprotocol  protocol;private  socket  socket;private  bufferedreader  input;private  printwriter  out;private  static  date  date;private  string  username;private  string  status  =  ""online"";private  simpledateformat  dateformat;private  string  buffer  =  """";private  jaxbcontext  jaxbcontext;private  unmarshaller  jaxbunmarshaller;public  serverthread(socket  s)  throws  saxexception'  '  ioexception'  '  jaxbexception  {input  =  new  bufferedreader(new  inputstreamreader(s.getinputstream()));jaxbcontext  =  jaxbcontext.newinstance(xmlprotocol.class);out  =  new  printwriter(s.getoutputstream());username  =  ""guest  ""  +  server.getusercounter();dateformat  =  new  simpledateformat(""hh:mm:ss"");server.adduser(username'  '  out);date  =  new  date();socket  =  s;new  thread(this);}public  void  run()  {try  {while  (true)  {if  (input.ready())  {if  (buffer.length()  <=  256)  {if  ((buffer  =  input.readline()).tostring().endswith(""</xmlprotocol>""))  {protocol  =  new  xmlprotocol();jaxbunmarshaller  =  jaxbcontext.createunmarshaller();protocol  =  (xmlprotocol)  jaxbunmarshaller.unmarshal(new  streamsource(new  stringreader(buffer)));switch  (chatcommands.valueof(protocol.getstatus()))  {case  login:  {server.sendtoall(server.buildresponce(""user:  ""  +  this.username  +  ""  has  been  changed  nickname  on  ""+  protocol.getcontent()));this.username  =  protocol.getcontent();break;}case  status:  {server.sendtoall(server.buildresponce(""the  user:  ""  +  this.username  +  ""  is  now:""  +  protocol.getcontent()));this.status  =  protocol.getcontent();break;}case  logout:  {server.sendresponce(server.buildresponce(responsecommands.disconnect)'  '  out);quit();break;}default:  {log.trace(""getting  message  from  user:  ""  +  username  +  ""  recived  message:  ""  +  protocol.getcontent());date  =  calendar.getinstance().gettime();server.sendtoall(server.buildresponce(dateformat.format(date.gettime())  +  ""  ""  +  username  +  ""  (""+  this.status  +  "")  ""  +  ""  says  :  ""  +  protocol.getcontent()));break;}}}}  else  {server.sendresponce(server.buildresponce(responsecommands.sending_failed)'  '  out);}}}}  catch  (ioexception  e)  {log.error(""error  in  reading  from  stream:  ""  +  e);}  catch  (jaxbexception  e)  {log.error(""error  in  marshalling:  ""  +  e);}  finally  {try  {server.sendresponce(server.buildresponce(responsecommands.unexpected)'  '  out);quit();log.trace(""socket  closed"");}  catch  (ioexception  |  jaxbexception  e)  {log.error(""socket  no  closed""  +  e);}}}public  void  quit()  throws  ioexception'  '  jaxbexception  {server.sendtoall(server.buildresponce(""user:  ""  +  this.username  +  ""  quited""));server.removeuser(out);socket.shutdowninput();socket.shutdownoutput();socket.close();}};  public  class  serverloadtest  {private  static  executorservice  exec  =  executors.newfixedthreadpool(1000);private  static  socket  s[]  =  new  socket[50];//  =  new  socket();public  static  void  main(string[]  args)  throws  jaxbexception'  '  unknownhostexception'  '  ioexception'  '  interruptedexception'  'xmlstreamexception'  '  parserconfigurationexception'  '  saxexception  {exec.execute(new  testserverthread());  //  start  server  threadthread.sleep(500);  //  wait  till  server  starts.s[0]  =  new  socket(""localhost""'  '  4444);exec.execute(new  inputthread(s[0]'  '  new  bufferedreader(new  inputstreamreader(s[0].getinputstream()))));  //  start//  onefor  (int  i  =  0;  i  <  20;  i++)  {exec.execute(new  testclientthread());  }}}class  testclientthread  implements  runnable  {private  static  final  logger  log  =  logger.getlogger(testclientthread.class);private  xmlprotocol  protocol;private  jaxbcontext  jaxbcontext;private  marshaller  jaxbmarshaller;private  socket  socket;private  outputstream  outputstream;public  testclientthread()  throws  jaxbexception'  '  unknownhostexception'  '  ioexception'  '  interruptedexception'  '  xmlstreamexception'  'parserconfigurationexception'  '  saxexception  {jaxbcontext  =  jaxbcontext.newinstance(xmlprotocol.class);jaxbmarshaller  =  jaxbcontext.createmarshaller();socket  =  new  socket(""localhost""'  '  4444);protocol  =  new  xmlprotocol();outputstream  =  socket.getoutputstream();new  thread(this);}@overridepublic  void  run()  {try  {for  (int  i  =  0;  i  <  10;  i++)  {protocol.setcontent(""hello  server.  message  number^""  +  i);protocol.setstatus(chatcommands.msg.getcommandcode());jaxbmarshaller.marshal(protocol'  '  outputstream);}protocol.setcontent(""hello  server.  message  number^"");protocol.setstatus(chatcommands.logout.getcommandcode());jaxbmarshaller.marshal(protocol'  '  outputstream);/*socket.shutdowninput();socket.shutdownoutput();socket.close();thread.currentthread().interrupt();*/}  catch  (jaxbexceptione)  {log.trace(""error  in  marshaling  "");}}}class  testserverthread  implements  runnable  {private  server  server;public  testserverthread()  {new  thread(this);}@suppresswarnings(""static-access"")@overridepublic  void  run()  {try  {server.main(null);}  catch  (ioexception  |  jaxbexception  |  parserconfigurationexception  |  saxexception  e)  {assert.assertfalse(false);}}}"  ,hello  guy  have  client  server  chat  and  i  tri  to  write  load  test  on  it  i  use  my  protocol  it  look  like  xmpp  i  send  xml  and  pars  it  if  i  start  the  server  for  some  user  it  work  proper  but  i  have  am  loadtest  and  am  start  a  lot  of  user  and  send  messag  from  each  one  in  the  test  i  do  not  creat  new  client  im  onli  instanti  an  output  thread  with  an  output  stream  and  send  messag  use  it  the  server  send  a  messag  that  it  reciev  to  all  user  so  i  creat  one  user  that  listen  to  the  other  user  and  sometim  i  reciev  the  except  this  is  my  consol  this  is  my  serverthread  i  skip  the  part  where  it  is  wait  for  user  and  this  is  my  test  ,  simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc  stringliter  stringdatatyp  stringaddit  trycatchstat  whilestat  true  ifelsestat  javalangstringlength  lessequalexpress  lessexpress  greaterexpress  explicittypecast  switchstat  caseclaus  instancefieldinvoc  thisrefer  objectvari  simplevari  instancefield  throwsspecif  privatefieldspecifi  staticfieldspecifi  classfield  instancefieldinitializationstat  arrayel  classdefinit  implementsspecif  methodimplement  constructordefinit  publicconstructorspecifi  methoddefinit 