 question  ,  "public  static  void  main(string[]  args)  {customblockingqueue  blockingqueue  =  new  customblockingqueue();new  thread(new  producer(blockingqueue)).start();new  thread(new  consumer(blockingqueue)).start();}}@suppresswarnings(""serial"")class  customblockingqueue  extends  linkedlist<object>  {private  static  final  int  max_size  =  10;private  semaphore  mutex  =  new  semaphore(1);private  semaphore  fillcount  =  new  semaphore(0);private  semaphore  emptycount  =  new  semaphore(max_size);@overridepublic  boolean  offer(object  e)  {try  {mutex.acquire();}  catch  (interruptedexception  e2)  {e2.printstacktrace();}boolean  result  =  super.offer(e);system.out.println(""offer  ""  +  size());try  {fillcount.release();emptycount.acquire();mutex.release();}  catch  (interruptedexception  e1)  {e1.printstacktrace();}return  result;}@overridepublic  object  poll()  {try  {mutex.acquire();}  catch  (interruptedexception  e2)  {e2.printstacktrace();}object  result  =  super.poll();system.out.println(""poll""  +  size());try  {emptycount.release();fillcount.acquire();mutex.release();}  catch  (interruptedexception  e)  {e.printstacktrace();}return  result;}}class  producer  implements  runnable  {private  customblockingqueue  blockingqueue;private  random  random  =  new  random();public  producer(customblockingqueue  blockingqueue)  {this.blockingqueue  =  blockingqueue;}@overridepublic  void  run()  {while  (!thread.currentthread().isinterrupted())  {try  {timeunit.seconds.sleep(random.nextint(2));blockingqueue.offer(new  object());}  catch  (interruptedexception  e)  {e.printstacktrace();}}}}class  consumer  implements  runnable  {private  customblockingqueue  blockingqueue;private  random  random  =  new  random();public  consumer(customblockingqueue  blockingqueue)  {this.blockingqueue  =  blockingqueue;}@overridepublic  void  run()  {while  (!thread.currentthread().isinterrupted())  {try  {timeunit.seconds.sleep(random.nextint(4));blockingqueue.poll();}  catch  (interruptedexception  e)  {e.printstacktrace();}}}"  ,accord  to  i  want  to  simul  pc  problem  use  semaphor  i  am  get  deadlock  and  i  dont  know  what  is  problem  use  semaphor  semaphor  solv  the  problem  of  lost  wakeup  call  in  the  solut  below  we  use  two  semaphor  fillcount  and  emptycount  to  solv  the  problem  fillcount  is  the  number  of  item  to  be  read  in  the  buffer  and  emptycount  is  the  number  of  avail  space  in  the  buffer  where  item  could  be  written  fillcount  is  increment  and  emptycount  decrement  when  a  new  item  has  been  put  into  the  buffer  if  the  produc  tri  to  decrement  emptycount  while  it  valu  is  zero  the  produc  is  put  to  sleep  the  next  time  an  item  is  consum  emptycount  is  increment  and  the  produc  wake  up  the  consum  work  analog  ,    simpleassignmentexpress  