 question  ,  "private  audiocapture  audcap  =  new  audiocapture();stopbtn.addactionlistener(new  actionlistener()  {public  void  actionperformed(actionevent  e)  {capturebtn.setenabled(true);stopbtn.setenabled(false);playbtn.setenabled(true);audcap.stopcapture  =  true;  //  this  doesn't  workaudcap.stopplayback  =  true;  //  this  does}};  class  playthread  extends  thread  {byte  tempbuffer[]  =  new  byte[10000];public  void  run()  {stopplayback  =  false;try  {sourcedataline.open(audioformat);sourcedataline.start();int  cnt;while  ((cnt  =  audioinputstream.read(tempbuffer'  '  0'  'tempbuffer.length))  !=  -1  &&  stopplayback  ==  false)  {if  (cnt  >  0)  {sourcedataline.write(tempbuffer'  '  0'  '  cnt);}}sourcedataline.drain();sourcedataline.close();}  catch  (exception  e)  {e.printstacktrace();system.exit(0);}}};  class  capturethread  extends  thread  {//  an  arbitrary-size  temporary  holding  bufferbyte  tempbuffer[]  =  new  byte[10000];public  void  run()  {stopcapture  =  false;//  record  as  waveaudiofileformat.type  filetype  =  audiofileformat.type.wave;//  takes  user  input  file  name  and  appends  filetypeaudiofile  =  new  file(wavname  +  "".wav"");try  {while  (!stopcapture)  {int  cnt  =  targetdataline.read(tempbuffer'  '  0'  'tempbuffer.length);if  (cnt  >  0)  {audiosystem.write(new  audioinputstream(targetdataline)'  'filetype'  '  audiofile);}}targetdataline.stop();targetdataline.close();}  catch  (exception  e)  {e.printstacktrace();}}};  import  java.awt.flowlayout;import  java.awt.gridlayout;import  java.awt.event.actionevent;import  java.awt.event.actionlistener;import  java.io.file;import  javax.sound.sampled.audiofileformat;import  javax.sound.sampled.audioformat;import  javax.sound.sampled.audioinputstream;import  javax.sound.sampled.audiosystem;import  javax.sound.sampled.dataline;import  javax.sound.sampled.mixer;import  javax.sound.sampled.sourcedataline;import  javax.sound.sampled.targetdataline;import  javax.swing.jbutton;import  javax.swing.jfilechooser;import  javax.swing.jframe;import  javax.swing.joptionpane;import  javax.swing.jpanel;public  class  audiotest  extends  jframe  {private  static  final  long  serialversionuid  =  1l;audiocapture  audcap  =  new  audiocapture();public  static  void  main(string[]  args)  {new  audiotest();}public  audiotest()  {layouttransporbuttons();getcontentpane().setlayout(new  flowlayout());setdefaultcloseoperation(exit_on_close);setsize(350'  '  100);setvisible(true);}public  void  layouttransporbuttons()  {final  jpanel  guibuttonpanel  =  new  jpanel();final  jbutton  capturebtn  =  new  jbutton(""record"");final  jbutton  stopbtn  =  new  jbutton(""stop"");final  jbutton  playbtn  =  new  jbutton(""playback"");guibuttonpanel.setlayout(new  gridlayout());this.add(guibuttonpanel);capturebtn.setenabled(true);stopbtn.setenabled(false);playbtn.setenabled(true);//  register  anonymous  listenerscapturebtn.addactionlistener(new  actionlistener()  {public  void  actionperformed(actionevent  e)  {capturebtn.setenabled(false);stopbtn.setenabled(true);playbtn.setenabled(false);//  capture  input  data  from  the  microphoneaudcap.captureaudio();}});guibuttonpanel.add(capturebtn);stopbtn.addactionlistener(new  actionlistener()  {public  void  actionperformed(actionevent  e)  {capturebtn.setenabled(true);stopbtn.setenabled(false);playbtn.setenabled(true);audcap.stoprecordandplayback  =  true;}});guibuttonpanel.add(stopbtn);playbtn.addactionlistener(new  actionlistener()  {public  void  actionperformed(actionevent  e)  {stopbtn.setenabled(true);audcap.playaudio();}});guibuttonpanel.add(playbtn);}class  audiocapture  {volatile  boolean  stoprecordandplayback  =  false;audioformat  audioformat;targetdataline  targetdataline;audioinputstream  audioinputstream;sourcedataline  sourcedataline;private  string  wavname;private  file  audiofile;/**  *capture  audio  input  from  microphone  and  save  as  .wav  file  */public  void  captureaudio()  {wavname  =  joptionpane.showinputdialog(null'  '""enter  name  of  file  to  be  recorded:"");try  {mixer.info[]  mixerinfo  =  audiosystem.getmixerinfo();//  select  an  available  mixermixer  mixer  =  audiosystem.getmixer(mixerinfo[1]);//  get  everything  set  up  for  captureaudioformat  =  getaudioformat();dataline.info  datalineinfo  =  new  dataline.info(targetdataline.class'  '  audioformat);//  get  a  targetdataline  on  the  selected  mixer.targetdataline  =  (targetdataline)  mixer.getline(datalineinfo);//  prepare  the  line  for  use.targetdataline.open(audioformat);targetdataline.start();//  create  a  thread  to  capture  the  microphonethread  capturethread  =  new  capturethread();capturethread.start();}  catch  (exception  e)  {system.out.println(e);system.exit(0);}}/**  *this  method  plays  back  the  audio  data  that  has  *been  chosen  by  the  user  */public  void  playaudio()  {//  add  file  chooserjfilechooser  chooser  =  new  jfilechooser();chooser.setcurrentdirectory(audiofile);int  returnval  =  chooser.showopendialog(chooser);//  retrieve  chosen  fileif  (returnval  ==  jfilechooser.approve_option)  {//  create  the  fileaudiofile  =  chooser.getselectedfile();}//  play  chosen  filetry  {audioinputstream  =  audiosystem.getaudioinputstream(audiofile);audioformat  =  audioinputstream.getformat();dataline.info  datalineinfo  =  new  dataline.info(sourcedataline.class'  '  audioformat);sourcedataline  =  (sourcedataline)  audiosystem.getline(datalineinfo);//  create  a  thread  to  play  back  the  datanew  playthread().start();}  catch  (exception  e)  {e.printstacktrace();system.exit(0);}}/**  *this  method  creates  and  returns  an  audioformat  object  */private  audioformat  getaudioformat()  {float  samplerate  =  44100.0f;//  8000'  '11025'  '16000'  '22050'  '44100int  samplesizeinbits  =  16;//  8'  '16int  channels  =  1;//  1'  '2boolean  signed  =  true;//  true'  'falseboolean  bigendian  =  false;//  true'  'falsereturn  new  audioformat(samplerate'  '  samplesizeinbits'  '  channels'  'signed'  '  bigendian);}/**  *inner  class  to  capture  data  from  microphone  */class  capturethread  extends  thread  {//  an  arbitrary-size  temporary  holding  bufferbyte  tempbuffer[]  =  new  byte[10000];public  void  run()  {//  reset  stopcapture  to  falsestoprecordandplayback  =  false;//  record  as  waveaudiofileformat.type  filetype  =  audiofileformat.type.wave;//  take  user  input  file  name  and  append  file  typeaudiofile  =  new  file(wavname  +  "".wav"");try  {targetdataline.open(audioformat);targetdataline.start();while  (!stoprecordandplayback)  {audiosystem.write(new  audioinputstream(targetdataline)'  'filetype'  '  audiofile);}targetdataline.stop();targetdataline.close();}  catch  (exception  e)  {e.printstacktrace();}}}/**  *inner  class  to  play  back  the  data  */class  playthread  extends  thread  {byte  tempbuffer[]  =  new  byte[10000];public  void  run()  {//  reset  stop  buttonstoprecordandplayback  =  false;try  {sourcedataline.open(audioformat);sourcedataline.start();int  cnt;while  ((cnt  =  audioinputstream.read(tempbuffer'  '  0'  'tempbuffer.length))  !=  -1&&  stoprecordandplayback  ==  false)  {if  (cnt  >  0)  {sourcedataline.write(tempbuffer'  '  0'  '  cnt);}}sourcedataline.drain();sourcedataline.close();}  catch  (exception  e)  {e.printstacktrace();system.exit(0);}}}}"  ,i  have  a  littl  program  to  record  and  playback  wav  filesin  the  gui  class  i  have  the  follow  code  for  the  stop  button  in  the  audiocaptur  class  i  have  this  code  for  playback  which  stop  correct  when  stop  button  is  click  i  also  have  this  code  for  recordingcaptur  which  doesnt  stop  when  the  stop  button  is  click  stopcatur  stopplayback  are  instanc  variabl  in  the  audiocaptur  class  im  use  eclips  and  tri  set  a  break  point  at  while  stopcaptur  and  it  never  seem  to  get  beyond  this  doe  anyon  know  if  there  is  anyth  in  the  code  abov  that  would  caus  the  first  method  to  function  as  expect  but  the  second  not  to  edit  tri  to  put  a  cut  down  version  of  the  program  into  an  ssce  but  it  still  run  to  a  coupl  of  hundr  line  ,  simpleassignmentexpress  extendsspecif  javalangstringlength  ifstat  greaterexpress  objectmethodinvoc  actualmethodparamet  objectcreationstat  constructorcal  importstat  privatefieldspecifi  staticfieldspecifi  finalfieldspecifi  classfield  classconstantinitializationstat  longdatatyp  instancefield  instancefieldinitializationstat  formalmethodparamet  staticmethodspecifi  true  bytedatatyp  simplevari 