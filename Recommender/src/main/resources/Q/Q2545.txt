 question  ,  "volatile;  volatile;  volatile;  volatile;  volatile;  volatile;  public  class  volatiletest  implements  runnable  {private  int  count;private  volatile  boolean  stopped;@overridepublic  void  run()  {while  (!stopped)  {count++;}system.out.println(""count  1  =  ""  +  count);}public  void  stopcounting()  {stopped  =  true;}public  int  getcount()  {if  (!stopped)  {throw  new  illegalstateexception(""not  stopped  yet."");}return  count;}public  static  void  main(string[]  args)  throws  interruptedexception  {volatiletest  vt  =  new  volatiletest();thread  t  =  new  thread(vt);t.start();thread.sleep(1000l);vt.stopcounting();system.out.println(""count  2  =  ""  +  vt.getcount());}}"  ,im  tri  to  illustr  the  use  and  import  of  with  an  exampl  that  would  realli  not  give  a  good  result  if  was  omittedbut  im  not  realli  use  to  use  the  idea  of  the  follow  code  is  to  caus  an  infinit  loop  if  is  omit  and  be  perfect  threadsaf  if  is  present  is  the  follow  code  threadsaf  do  you  have  ani  other  realist  and  short  exampl  of  code  that  use  and  would  give  an  obvious  incorrect  result  without  it  here  the  code  ,       classdefinit  publicclassspecifi  implementsspecif  methodimplement  publicfieldspecifi  staticfieldspecifi  classfield  instancefieldinitializationstat  booleandatatyp  simpleassignmentexpress  true  methoddefinit  publicmethodspecifi  voiddatatyp  whilestat  formalmethodparamet  staticmethodspecifi  throwsspecif  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc  fals        objectvari  simplevari     classdefinit  instancefield  instancefieldinitializationstat  intdatatyp  simpleassignmentexpress  volatilefieldspecifi  booleandatatyp  fals  methoddefinit  publicmethodspecifi  voiddatatyp  true  