 question  ,  null,  i  have  a  function  which  manipul  a  veri  larg  list  exceed  about  item  for  the  major  of  those  item  it  simpli  replac  the  item  at  posit  x  howev  for  about  of  them  it  must  remov  them  from  the  list  use  a  linkedlist  seem  to  be  the  most  obvious  solut  to  avoid  expens  remov  howev  natur  access  a  linkedlist  by  index  becom  increas  slow  as  time  goe  on  the  cost  here  is  minut  and  a  lot  of  them  use  an  iter  over  that  linkedlist  is  also  expens  as  i  appear  to  need  a  separ  copi  to  avoid  iter  concurr  issu  while  edit  that  list  the  cost  here  is  minut  howev  here  where  my  mind  is  blown  a  bit  if  i  chang  to  an  arraylist  it  run  almost  instant  for  a  list  with  element  remov  element  and  modifi  everyth  els  take  ms  i  verifi  that  the  result  list  is  inde  in  size  as  expect  and  contain  the  updat  inform  i  need  whi  is  this  so  fast  i  look  at  the  sourc  for  arraylist  in  jdk  and  it  appear  to  be  use  an  arraycopi  function  as  expect  i  would  love  to  understand  whi  an  arraylist  work  so  well  here  when  common  sens  would  seem  to  indic  that  an  array  for  this  task  is  an  aw  idea  requir  shift  sever  hundr  thousand  item  ,    simpleassignmentexpress  arraydatatyp  instancefield  instancefieldinitializationstat  intdatatyp  simplevari  javalangstringlength  objectcreationstat  constructorcal  arrayel  objectmethodinvoc  actualmethodparamet  subtractexpress  longdatatyp  postincrementexpress           