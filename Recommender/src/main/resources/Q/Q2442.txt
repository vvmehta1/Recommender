 question  ,  "public  class  testrunandstart  implements  runnable  {public  void  run()  {system.out.println(""running"");}public  static  void  main(string[]  args)  {  thread  t  =  new  thread(new  testrunandstart());  t.run();  t.run();  t.start();  };  runningrunningrunning;  if  this  thread  was  constructed  using  a  separate  runnable  run  object'  '  then  that  runnable  object's  run  method  is  called;  otherwise'  '  this  method  does  nothing  and  returns;  public  class  testrun  extends  thread  {public  void  run(){system.out.println(""running  normal  thread"");}public  static  void  main(string[]args){testrun  tr=new  testrun();tr.run();  }};  running  normal  thread"  ,i  dont  understand  the  differ  between  start  and  run  a  thread  i  test  the  both  method  and  they  output  the  same  result  first  i  use  a  combin  of  run  and  start  on  the  same  thread  and  they  did  the  same  function  as  follow  the  output  is  then  i  saw  the  javadoc  of  the  run  method  said  that  so  i  tri  to  use  the  run  method  without  a  separ  runnabl  as  follow  and  it  also  execut  the  run  method  and  print  although  it  construct  without  a  separ  runnabl  so  what  the  main  differ  between  the  two  method  ,  objectvari  simplevari  classdefinit  publicclassspecifi  extendsspecif  methoddefinit  publicmethodspecifi  voiddatatyp  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  formalmethodparamet  staticmethodspecifi  simpleassignmentexpress  objectcreationstat  constructorcal  objectmethodinvoc  instancefield    objectvari  simplevari  simpleassignmentexpress        