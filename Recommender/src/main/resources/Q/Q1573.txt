 question  ,  "public  interface  icommandable{  }public  interface  ilogable  extends  icommandable{  }public  interface  imonitorable  extends  icommandable{  }public  abstract  class  classabs{  }public  class  a  extends  classabs  implements  imonitorable'  '  ilogable{  };  public  void  test(){  a  a=new  a();  list<icommandable>commandlist=new  arraylist<icommandable>()  if  (a  instanceof  ilogable)  {  ilogable  logableitem=(ilogable)a;  commandlist.add(logableitem);  }  if  (a  instanceof  imonitorable)  {  imonitorable  monitorableitem=(imonitorable)a;  commandlist.add(monitorableitem);  }  for(icommandable  item:  commandlist)  {if(item  instanceof  imonitorable){log.debug(""is  monitorable"");}if(item  instanceof  ilogable){log.debug(""is  logable"");}};  2013-04-22  18:25:00'  '498  com...  [debug]  is  monitorable2013-04-22  18:25:02'  '150  com....  [debug]  is  logable"  ,i  was  tri  to  understand  how  to  avoid  doubl  entri  in  a  clean  and  design  way  to  the  follow  scenario  the  output  is  that  will  caus  my  program  to  do  doubl  execut  for  each  xabl  i  expect  to  see  how  should  i  redesign  thisin  a  clean  way  that  the  second  iter  conditionion  will  be  base  on  the  refer  type  and  not  on  the  instanc  type  get  someth  like  this  thanksray  ,  simpleassignmentexpress  objectcreationstat  constructorcal  javautilarraylist  genericobjectcreationstat  ifstat  explicittypecast  javautilarraylistadd  actualmethodparamet  foreachstat  objectmethodinvoc  stringliter  stringdatatyp  subtractexpress  arrayel    objectvari  simplevari  ifstat  objectmethodinvoc  actualmethodparamet     ifstat  orexpress  objectmethodinvoc  actualmethodparamet        dostat  whilestat  lessexpress  greaterequalexpress  actualmethodparamet  simpleassignmentexpress  rightshiftsignedexpress  simplevari  returnstat  objectcreationstat  constructorcal  ifstat  objectmethodinvoc  greaterexpress  arrayel  javalangstringequ  stringliter  stringdatatyp  