 question  ,  "import  java.net.*;import  java.io.*;public  class  chatclient{private  socket  socket=  null;  private  bufferedreaderconsole  =  null;  private  bufferedreaderstreamin  =  null;  private  dataoutputstream  streamout  =  null;  public  chatclient(string  servername'  '  int  serverport'  '  string  username)  {system.out.println(""establishing  connection.  please  wait..."");try{socket  =  new  socket(servername'  '  serverport);  system.out.println(""connected:  ""  +  socket);  system.out.println(""ctrl+c  or  type  .bye  to  quit"");  start();}catch(unknownhostexception  uhe){system.out.println(""host  unknown:  ""  +  uhe.getmessage());}catch(ioexception  ioe){system.out.println(""unexpected  exception:  ""  +  ioe.getmessage());}string  line  =  """";while  (!line.equals("".bye"")){try  {line  =  console.readline();streamout.writebytes(line  +  '');  //send  console  data  to  server  socketstring  reply  =  streamin.readline();  //recieve  confirmation  msg  from  serversystem.out.println(  reply  );  //print  the  msgstreamout.flush();  }  catch(ioexception  ioe)  {system.out.println(""sending  error:  ""  +  ioe.getmessage());  }}  }  public  void  start()  throws  ioexception  {console  =  new  bufferedreader(new  inputstreamreader(system.in));  //changed  console  to  bufferedreaderstreamin=  new  bufferedreader(new  inputstreamreader(socket.getinputstream()));streamout  =  new  dataoutputstream(socket.getoutputstream());  }  public  void  stop()  {try{if  (console  !=  null)console.close();  if  (streamout  !=  null)streamout.close();  if  (streamin  !=  null)streamin.close();  //is  it  good  practice  to  close  if  (socket!=  null)socket.close();}catch(ioexception  ioe){system.out.println(""error  closing  ..."");}  }  public  static  void  main(string  args[])  {chatclient  client  =  null;if  (args.length  !=  3)  system.out.println(""usage:  java  chatclient  host  port  username"");else  client  =  new  chatclient(args[0]'  '  integer.parseint(args[1])'  '  args[2]);  }};  exception  in  thread  ""thread-1""  java.lang.nullpointerexceptionat  chatserverthread.handleclient(chatserverthread.java:41)at  chatserverthread.run(chatserverthread.java:17);  import  java.net.*;import  java.io.*;//public  class  chatserverthread  implements  runnablepublic  class  chatserverthread  extends  thread{private  socketsocket  =  null;  private  chatserverserver  =  null;  private  int  id  =  -1;  private  bufferedreader  streamin  =null;  private  dataoutputstream  streamout  =  null;  public  chatserverthread(chatserver  _server'  '  socket  _socket)  {server  =  _server;socket  =  _socket;id  =  socket.getport();  }  public  void  run()  {  try  {  handleclient();  }  catch(  eofexception  eof  )  {system.out.println(""client  closed  the  connection."");  }  catch(  ioexception  ioe  )  {ioe.printstacktrace();  }}  public  void  handleclient()  throws  ioexception  {boolean  done  =  false;try  {system.out.println(""server  thread  ""  +  id  +  ""  running."");while  (!done)  {string  nextcommand  =  streamin.readline();if(  nextcommand.equals("".bye"")  )  {  system.out.println(""client  disconnected  with  bye."");  done  =  true;}  else  {  system.out.println(  nextcommand  );  string  nextreply  =  ""you  sent  me:  ""  +  nextcommand.touppercase()  +  '';  streamout.writebytes  (  nextreply  );}  }  }  finally  {  streamin.close();  streamout.close();  socket.close();  }  }  public  void  open()  throws  ioexception  {streamin  =  new  bufferedreader(new  inputstreamreader(socket.getinputstream()));streamout  =  new  dataoutputstream(socket.getoutputstream());  }  public  void  close()  throws  ioexception  {if  (socket  !=  null)socket.close();if  (streamin  !=  null)streamin.close();if  (streamout  !=  null)  streamout.close();  }}"  ,receiv  two  error  ani  insight  would  be  great  thank  from  the  follow  chatclient  and  this  error  from  chatserverthread  ,  intdatatyp  simplevari  javalangsystemoutprintln  actualmethodparamet  stringliter  stringdatatyp  stringaddit  objectvari  instancefield  objectmethodinvoc  stringvari  instancefieldinitializationstat  simpleassignmentexpress  javalangintegerparseint  arrayel  importstat  ondemandimport  postincrementexpress  trycatchstat  throwsspecif  booleandatatyp  fals  true  stringinitializationstat  objectcreationstat  constructorcal  ifstat  notequalexpress  null    throwsspecif     throwsspecif     simpleassignmentexpress  objectcreationstat  constructorcal  actualmethodparamet  objectmethodinvoc     