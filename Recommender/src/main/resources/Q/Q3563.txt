 question  ,  "/**  *  this  method  handles  what  happens  when  the  calculate  button  is  clicked.  *  the  main  thing  this  does  is  disable/enable  a  few  nodes'  '  as  well  as  sparks  *  off  the  background  thread.  *  *  @param  event  */@fxmlprivate  void  convert_button_action(actionevent  event)  {closing_label.setvisible(true);convert_button.setdisable(true);input_text  =  input_nclocation_field.gettext();output_text  =  output_location_field.gettext();indicator_node.setvisible(true);if  (!toggleswitch.isselected())  {(new  thread(new  filewriter(input_text'  '  output_text'  '  indicator_node))).start();}  else  {datewriter  temp  =  new  datewriter(input_text'  '  output_text'  '  indicator_node'  '  yr_mn_dy.isselected());(new  thread(temp)).start();}};  run();  package  file_conversion;import  java.io.bufferedreader;import  java.io.bufferedwriter;import  java.io.file;import  java.io.filereader;import  java.io.ioexception;import  java.text.decimalformat;import  java.util.arraylist;import  javafx.application.platform;import  javafx.scene.control.progressindicator;/**  *  this  class  is  the  background  'worker'  thread  that  does  all  of  the  heavy  duty  *  file  io  for  splitting  up  the  nc  file.  it  periodically  sends  reports  back  to  *  the  main  application  thread  to  update  the  progress  indicator.  *  *  @author  william  */public  class  datewriter  implements  runnable  {private  final  progressindicator  myindicator;private  static  file  ncfile;private  final  string  outputlocationfile;private  float  zmax'  '  zmin'  '  xmax'  '  xmin'  '  ymax'  '  ymin;private  arraylist<float>  xlist'  '  ylist'  '  zlist;private  final  decimalformat  numberformat  =  new  decimalformat(""#.000000"");private  final  decimalformat  numberformatminmax  =  new  decimalformat(""#.00000"");private  final  boolean  yr_mon_day;/**  *  this  is  the  main  constructor'  '  it  needs  a  valid  nc  file  to  continue.  *  *  @param  inputncfile  *  @param  outputlocation  *  @param  myindicator  *  @param  yr_mon_day  */public  datewriter(string  inputncfile'  '  string  outputlocation'  '  progressindicator  myindicator'  '  boolean  yr_mon_day)  {this.yr_mon_day  =  yr_mon_day;this.myindicator  =  myindicator;ncfile  =  new  file(inputncfile);outputlocationfile  =  outputlocation;}/**  *  the  primary  run()  method'  '  starts  the  thread.  */@overridepublic  void  run()  {convertdate();platform.runlater(new  runnable()  {@overridepublic  void  run()  {file_conversion.stage_returner().close();}});system.out.println(""i'm  at  the  end  of  the  run...??"");}public  boolean  convertdate()  {bufferedreader  br  =  null;java.io.filewriter  yearwriter  =  null'  '  monthwriter  =  null'  '  daywriter  =  null'  'fwriter  =  null;bufferedwriter  yearbuf  =  null'  '  monthbuf  =  null'  '  daybuf  =  null'  '  writer  =  null;try  {br  =  new  bufferedreader(new  filereader(ncfile));if  (yr_mon_day)  {yearwriter  =  new  java.io.filewriter(outputlocationfile  +  ""\""  +  ncfile.getname().substring(0'  '  ncfile.getname().lastindexof("".""))  +  ""_modified_year.csv""'  '  false);yearbuf  =  new  bufferedwriter(yearwriter);monthwriter  =  new  java.io.filewriter(outputlocationfile  +  ""\""  +  ncfile.getname().substring(0'  '  ncfile.getname().lastindexof("".""))  +  ""_modified_month.csv""'  '  false);monthbuf  =  new  bufferedwriter(monthwriter);daywriter  =  new  java.io.filewriter(outputlocationfile  +  ""\""  +  ncfile.getname().substring(0'  '  ncfile.getname().lastindexof("".""))  +  ""_modified_day.csv""'  '  false);daybuf  =  new  bufferedwriter(daywriter);string  input;string  temp;string  temp2;string  temp3;while  ((input  =  br.readline())  !=  null)  {temp  =  input.substring(0'  '  4);temp2  =  input.substring(4'  '  6);temp3  =  input.substring(6);platform.runlater(new  runnable()  {@overridepublic  void  run()  {myindicator.setprogress(-1);}});yearbuf.write(temp  +  """");monthbuf.write(temp2  +  """");daybuf.write(temp3  +  """");}}  else  {fwriter  =  new  java.io.filewriter(outputlocationfile  +  ""\""  +  ncfile.getname()  +  ""_modified.csv""'  '  false);writer  =  new  bufferedwriter(fwriter);string  input;string  temp;while  ((input  =  br.readline())  !=  null)  {temp  =  input.substring(0'  '  4)  +  ""'  '""  +  input.substring(4'  '  6)  +  ""'  '""  +  input.substring(6);platform.runlater(new  runnable()  {@overridepublic  void  run()  {myindicator.setprogress(-1);}});writer.write(temp  +  """");}}}  catch  (ioexception  e)  {e.printstacktrace(system.out);}finally{try{if  (br!=null)  br.close();if  (yearbuf  !=null)  yearbuf.close();if  (monthbuf  !=  null)monthbuf.close();if  (daybuf  !=  null)daybuf.close();if  (yearwriter  !=  null)yearwriter.close();if  (monthwriter  !=  null)monthwriter.close();if  (daywriter  !=  null)daywriter.close();if  (fwriter  !=  null)  fwriter.close();if  (writer  !=  null)  writer.close();}catch(ioexception  e){e.printstacktrace(system.out);}}return  true;}}"  ,mi  question  is  thisth  problem  is  that  i  have  a  thread  start  from  the  javafx  applic  thread  which  then  the  new  thread  perform  some  readwrit  action  on  a  text  file  wont  exit  natur  when  face  with  huge  file  to  pars  through  million  line  larg  specificallyim  assum  this  is  due  to  the  thread  hold  on  to  some  resourc  that  im  miss  howev  sinc  im  use  the  trywithresourc  model  im  not  sure  how  that  even  possibl  reallyher  the  javafx  control  class  use  fxml  that  spark  off  the  threadmaincontrollerjavanoth  too  fanci  in  there  simpli  some  make  thing  visiblenot  visibl  and  the  start  of  the  appropri  thread  base  on  the  input  of  the  usernext  is  the  entir  thread  class  sinc  it  not  too  huge  all  it  doe  realli  is  either  turn  a  line  that  look  like  yearmonthday  into  yearmonthday  or  it  separ  the  year  month  and  day  column  into  separ  file  if  the  user  click  the  check  box  that  ask  for  it  simpli  a  handi  tool  for  the  use  casepleas  note  the  println  statement  at  the  end  of  the  method  i  see  this  println  everi  singl  time  but  after  it  happen  noth  happen  the  program  doesnt  exit  the  thread  doesnt  stop  nothingagain  noth  fanci  some  buffer  stream  and  writer  and  that  it  it  worth  note  that  this  work  perfect  for  file  that  are  smallnot  gigant  it  was  onli  when  face  with  a  multimillion  line  file  am  i  see  this  behaviourani  help  you  can  give  would  be  much  appreci  thank  just  to  help  clarifi  the  reason  part  of  the  ifels  is  in  trywithresourc  mad  and  the  other  is  in  the  more  tradit  fashion  is  simpli  to  exemplifi  the  fact  that  it  has  been  tri  both  way  the  ident  symptom  come  out  the  thread  run  through  either  of  the  logic  block  so  im  fair  certain  the  way  im  close  the  resourc  has  noth  to  do  with  it  ,  formalmethodparamet  simpleassignmentexpress  objectmethodinvoc  objectcreationstat  constructorcal  actualmethodparamet  importstat  javautilarraylist  implementsspecif  methodimplement  privatefieldspecifi  finalfieldspecifi  instancefield  simplevari  staticfieldspecifi  classfield  stringvari  stringdatatyp  floatdatatyp  greaterexpress  booleandatatyp  objectvari  nulliniti  trycatchstat  ifstat  arrayel  stringliter  addexpress  stringaddit  javalangstringsubstr  whilestat  notequalexpress  null    