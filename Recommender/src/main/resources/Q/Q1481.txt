 question  ,  private  item[]  arr;private  itemclass  itemclass;public  itemset(item  item)  {arr  =  new  item[1];arr[0]  =  item;}/*  *  (non-javadoc)  *  *  @see  java.util.abstractlist#add(java.lang.object)  */@overridepublic  boolean  add(item  e)  {boolean  isnotadded  =  true;for  (int  i  =  0;  i  <  arr.length;  i++)  {if  (e.getrule().compareto(arr[i].getrule()))  {if  (e.getdot()  ==  arr[i].getdot())  {isnotadded  =  false;break;}}}if  (isnotadded)  {item[]  oldarr  =  arr;arr  =  new  item[oldarr.length  +  1];system.arraycopy(oldarr'  '  0'  '  arr'  '  0'  '  oldarr.length);arr[oldarr.length]  =  e;}return  isnotadded;}@overridepublic  item  get(int  index)  {return  arr[index];}@overridepublic  int  size()  {return  arr.length;}//  setter/**  *  @param  itemclass  *the  itemclass  to  set  */public  void  setitemclass(itemclass  itemclass)  {this.itemclass  =  itemclass;}////  getter/**  *  @return  the  itemclass  */public  itemclass  getitemclass()  {return  itemclass;}//  ,import  javautilabstractlist  public  class  itemset  extend  abstractlist  how  to  cover  for  instanc  remov  methodshow  do  not  use  an  own  list  implement  ,  simpleassignmentexpress  classdefinit  publicclassspecifi  methoddefinit  publicmethodspecifi  voiddatatyp  javalangstringlength  arrayel  arraylength  formalmethodparamet    objectvari  simplevari  javalangobject  throwstat  objectcreationstat  constructorcal  