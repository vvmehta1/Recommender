 question  ,  public  class  threadexample  extends  midlet  {boolean  threadsrunning  =  true;  //  flag  stopping  the  threadsthreadtest  thr1;threadtest  thr2;private  class  threadtest  extends  thread  {int  loops;public  threadtest(int  waitingtime)  {loops  =  waittime;}public  void  run()  {for  (int  i  =  1;  i  <=  loops;  i++)  {if  (threadsrunning  !=  true)  {  //  here  threadsrunning  is  testedreturn;}try  {thread.sleep(1000);}  catch(interruptedexception  e)  {system.out.println(e);}}}}public  threadexample()  {thr1  =  new  threadtest(2);thr2  =  new  threadtest(6);}public  void  startapp()  throws  midletstatechangeexception  {thr1.start();thr2.start();try  {thread.sleep(4000);  //  we  wait  4  secs  before  stopping  the  threads  -  //  this  way  one  of  the  threads  is  supposed  to  finish  by  itself}  catch(interruptedexception  e)  {system.out.println(e);}destroyapp();}public  void  destroyapp()  {threadsrunning  =  false;try  {thr1.join();thr2.join();}  catch(interruptedexception  e)  {system.out.println(e);}notifydestroyed();}}  ,i  have  a  java  book  im  learn  from  and  in  one  of  the  exampl  i  saw  someth  suspici  as  it  is  a  midlet  app  when  it  start  the  startapp  method  is  execut  to  keep  it  simpl  the  startapp  method  itself  call  destroyapp  and  so  the  program  destroy  stop  the  thread  and  notifi  the  destruct  the  question  is  is  it  safe  to  use  this  threadsrun  variabl  and  would  it  use  insid  both  thread  and  in  the  destroyapp  method  caus  ani  troubl  at  some  point  would  volatil  keyword  put  in  front  of  the  declar  help  to  synchron  it  ,  classdefinit  publicclassspecifi  extendsspecif  instancefield  instancefieldinitializationstat  booleandatatyp  simpleassignmentexpress  true 